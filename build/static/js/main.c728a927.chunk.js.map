{"version":3,"sources":["services/teams.js","services/players.js","services/trailingMeans.js","styling/colors.js","components/PlayerStats.js","services/playerStats.js","components/SelectPlayer.js","components/SelectSeasons.js","components/SelectRegularPost.js","components/SelectStats.js","images/ball_logov3.png","components/Logo.js","components/SelectTrailingAverage.js","components/Instructions.js","components/Tips.js","App.js","index.js"],"names":["teamService","getTeams","a","axios","get","teams","data","playerService","getPlayers","players","countTrailingMean","playerStats","statCategory","trailingGames","trailingAverage","i","length","statsInTrailingGames","j","mean","push","countTrailingMeanPct","attemptsInStatCategory","percentages","totalMadeBaskets","totalAttemptedBaskets","trailingPercentage","trailingMeanService","pts","ast","reb","blk","stl","turnover","min","map","playerStat","Number","split","pf","dreb","oreb","fg_pct","fg3_pct","ft_pct","fga","fgm","fg3a","fg3m","fta","ftm","colors","PlayerStats","startSeasonToShow","endSeasonToShow","postSeasonSelected","ptsSelected","astSelected","rebSelected","drebSelected","orebSelected","blkSelected","stlSelected","turnoverSelected","fgaSelected","fgmSelected","fg_pctSelected","fg3aSelected","fg3mSelected","fg3_pctSelected","ftaSelected","ftmSelected","ft_pctSelected","pfSelected","minSelected","selectedFirstSeason","selectedLastSeason","fetchingData","playerStatsFiltered","filter","game","postseason","seasons","season","startOfCareerSeason","Math","apply","endOfCareerSeason","max","games","labels","date","concat","find","team","id","visitor_team_id","abbreviation","home_team_id","datasets","label","fill","borderColor","lightGreyDot","pointBackgroundColor","showLine","hidden","lightGreyLine","pointRadius","brownDot","brownLine","oliveDot","oliveLine","tealDot","tealLine","navyDot","navyLine","redDot","redLine","orangeDot","orangeLine","yellowDot","yellowLine","limeDot","limeLine","greenDot","greenLine","cyanDot","cyanLine","blueDot","blueLine","purpleDot","purpleLine","magentaDot","magentaLine","greyDot","greyLine","pinkDot","pinkLine","apricotDot","apricotLine","beigeDot","beigeLine","mintDot","mintLine","Container","style","color","paddingLeft","Row","Col","type","height","width","player","first_name","last_name","className","options","legend","onClick","e","stopPropagation","display","scales","xAxes","ticks","baseUrl","playerStatService","getPlayerStatsFromApi","playerId","seasonsVariable","totalPages","meta","total_pages","console","log","playerStatsAllPages","page","playerStatsOnePage","getPlayerStatsFromDB","SelectPlayer","setSelectedPlayer","setPlayerStats","setFetchingData","playerSelect","fullName","value","getPlayerStats","playerFullName","searchedPlayer","apiId","then","response","sort","b","Date","getTime","onChange","option","placeholder","SelectSeasons","setSelectedFirstSeason","setSelectedLastSeason","seasonDescending","seasonSelectDescending","toString","seasonAscending","seasonSelectAscending","sm","event","handleSelectedFirstSeasonChange","closeMenuOnSelect","handleSelectedLastSeasonChange","SelectRegularPost","setRegularSeasonSelected","setPostSeasonSelected","useState","radioValue","setRadioValue","ButtonGroup","toggle","size","name","radio","idx","ToggleButton","variant","checked","currentTarget","handleRegularPostChange","SelectStats","setPtsSelected","setAstSelected","setRebSelected","setDrebSelected","setOrebSelected","setBlkSelected","setStlSelected","setTurnoverSelected","setFgaSelected","setFgmSelected","setFg_pctSelected","setFg3aSelected","setFg3mSelected","setFg3_pctSelected","setFtaSelected","setFtmSelected","setFt_pctSelected","setMinSelected","setPfSelected","cellWidth","Form","backgroundColor","Check","inline","Logo","src","ball_logo","alt","SelectTrailingAverage","setTrailingAverage","Instructions","Tips","App","setPlayers","setTeams","regularSeasonSelected","useEffect","firstName","lastName","flexDirection","alignContent","paddingTop","textAlign","xs","float","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c728a927.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/teams'\n\nconst getTeams = async () => {\n  const teams = await axios.get(`${baseUrl}`)\n  return teams.data\n}\n\nconst teamService = {getTeams}\n\nexport default teamService","import axios from 'axios'\n//const baseUrl = 'https://www.balldontlie.io/api/v1/players'\nconst baseUrl = '/api/players'\n\nconst getPlayers = async () => {\n  const players = await axios.get(baseUrl)\n  \n  return players.data\n}\n\nconst playerService = { getPlayers }\n\nexport default playerService","\nconst countTrailingMean = (playerStats, statCategory, trailingGames) => {\n  let trailingAverage = []\n  for (let i = 0; i < trailingGames; i++) {\n    trailingAverage[i] = null\n  }\n  for (let i = trailingGames; i < playerStats.length; i++) {\n    let statsInTrailingGames = 0\n    for (let j = 1; j <= trailingGames; j++) {\n      statsInTrailingGames += playerStats[i - trailingGames + j][statCategory];\n    }\n    const mean = statsInTrailingGames / trailingGames\n    trailingAverage.push(mean)\n  }\n  return trailingAverage\n}\n\nconst countTrailingMeanPct = (playerStats, statCategory, attemptsInStatCategory, trailingGames) => {\n  let percentages = []\n  for (let i = 0; i < trailingGames; i++) {\n    percentages[i] = null\n  }\n\n  for (let i = trailingGames; i < playerStats.length; i++) {\n    let totalMadeBaskets = 0\n    let totalAttemptedBaskets = 0\n    if (playerStats[i][attemptsInStatCategory] === 0) {\n      percentages.push(percentages[i - 1])\n      //playerStats[i][statCategory] = percentages[i - 1]\n    } else {\n      for (let j = 1; j <= trailingGames; j++) {\n        if (playerStats[i - trailingGames + j][attemptsInStatCategory] === 0\n          || playerStats[i - trailingGames + j][attemptsInStatCategory] < playerStats[i - trailingGames + j][statCategory]) {\n          continue\n        }\n        totalMadeBaskets += playerStats[i - trailingGames + j][statCategory]\n        totalAttemptedBaskets += playerStats[i - trailingGames + j][attemptsInStatCategory]\n      }\n      const trailingPercentage = totalMadeBaskets / totalAttemptedBaskets * 100\n      percentages.push(trailingPercentage)\n    }\n\n  }\n  return percentages\n}\n\nconst pts = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'pts', trailingGames)\n}\nconst ast = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'ast', trailingGames)\n}\nconst reb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'reb', trailingGames)\n}\nconst blk = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'blk', trailingGames)\n}\nconst stl = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'stl', trailingGames)\n}\nconst turnover = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'turnover', trailingGames)\n}\nconst min = (playerStats, trailingGames) => {\n  playerStats = playerStats.map(playerStat => ({ ...playerStat, min: playerStat.min ? Number(playerStat.min.split(':')[0]) : null }))\n  return countTrailingMean(playerStats, 'min', trailingGames)\n}\nconst pf = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'pf', trailingGames)\n}\nconst dreb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'dreb', trailingGames)\n}\nconst oreb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'oreb', trailingGames)\n}\nconst fg_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'fgm', 'fga', trailingGames)\n}\nconst fg3_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'fg3m', 'fg3a', trailingGames)\n}\nconst ft_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'ftm', 'fta', trailingGames)\n}\n/* const fg_pct = (playerStats) => {\n  return countPct(playerStats, 'fgm', 'fga')\n}\nconst fg3_pct = (playerStats) => {\n  return countPct(playerStats, 'fg3m', 'fg3a')\n}\nconst ft_pct = (playerStats) => {\n  return countPct(playerStats, 'ftm', 'fta')\n} */\nconst fga = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fga', trailingGames)\n}\nconst fgm = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fgm', trailingGames)\n}\nconst fg3a = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fg3a', trailingGames)\n}\nconst fg3m = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fg3m', trailingGames)\n}\nconst fta = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fta', trailingGames)\n}\nconst ftm = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'ftm', trailingGames)\n}\n\n\nconst trailingMeanService = {\n  pts,\n  ast,\n  reb,\n  blk,\n  stl,\n  turnover,\n  min,\n  pf,\n  dreb,\n  oreb,\n  fg_pct,\n  fg3_pct,\n  ft_pct,\n  fga,\n  fgm,\n  fg3a,\n  fg3m,\n  fta,\n  ftm\n}\n\nexport default trailingMeanService","const colors = {\n  'maroonDot': 'rgba(128,0,0,0.3)',\n  'maroonLine': 'rgba(128,0,0,1.0)',\n  'brownDot': 'rgba(170,110,40,0.3)',\n  'brownLine': 'rgba(170,110,40,1.0)',\n  'oliveDot': 'rgba(128,128,0,0.3)',\n  'oliveLine': 'rgba(128,128,0,1.0)',\n  'tealDot': 'rgba(0,128,128,0.3)',\n  'tealLine': 'rgba(0,128,128,1.0)',\n  'navyDot': 'rgba(0,0,128,0.3)',\n  'navyLine': 'rgba(0,0,128,1.0)',\n  'redDot': 'rgba(230,25,75,0.3)',\n  'redLine': 'rgba(230,25,75,1.0)',\n  'orangeDot': 'rgba(245,130,48,0.3)',\n  'orangeLine': 'rgba(245,130,48,1.0)',\n  'yellowDot': 'rgba(255,225,25,0.3)',\n  'yellowLine': 'rgba(255,225,25,1.0)',\n  'limeDot': 'rgba(210,245,60,0.3)',\n  'limeLine': 'rgba(210,245,60,1.0)',\n  'greenDot': 'rgba(60,180,75,0.3)',\n  'greenLine': 'rgba(60,180,75,1.0)',\n  'cyanDot': 'rgba(70,240,240,0.3)',\n  'cyanLine': 'rgba(70,240,240,1.0)',\n  'blueDot': 'rgba(0,130,200,0.3)',\n  'blueLine': 'rgba(0,130,200,1.0)',\n  'purpleDot': 'rgba(145,30,180,0.3)',\n  'purpleLine': 'rgba(145,30,180,1.0)',\n  'magentaDot': 'rgba(240,50,230,0.3)',\n  'magentaLine': 'rgba(240,50,230,1.0)',\n  'greyDot': 'rgba(128,128,128,0.3)',\n  'greyLine': 'rgba(128,128,128,1.0)',\n  'pinkDot': 'rgba(250,190,212,0.3)',\n  'pinkLine': 'rgba(250,190,212,1.0)',\n  'apricotDot': 'rgba(255,215,180,0.3)',\n  'apricotLine': 'rgba(255,215,180,1.0)',\n  'beigeDot': 'rgba(255,250,200,0.3)',\n  'beigeLine': 'rgba(255,250,200,1.0)',\n  'mintDot': 'rgba(170,255,195,0.3)',\n  'mintLine': 'rgba(170,255,195,1.0)',\n  'lavenderDot': 'rgba(220,190,255,0.3)',\n  'lavenderLine': 'rgba(220,190,255,1.0)',\n  'whiteDot': 'rgba(255,255,255,0.3)',\n  'whiteLine': 'rgba(255,255,255,1.0)',\n  'lightGreyDot': 'rgba(211,211,211,0.3)',\n  'lightGreyLine': 'rgba(211,211,211,1.0)'\n}\n\nexport default colors","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Line } from 'react-chartjs-2'\nimport trailingMeanService from '../services/trailingMeans'\nimport colors from '../styling/colors'\nimport Loader from 'react-loader-spinner'\n//import Logo from '../components/Logo'\n\nconst PlayerStats = (\n  {\n    playerStats,\n    teams,\n    postSeasonSelected,\n    ptsSelected,\n    astSelected,\n    rebSelected,\n    drebSelected,\n    orebSelected,\n    blkSelected,\n    stlSelected,\n    turnoverSelected,\n    fgaSelected,\n    fgmSelected,\n    fg_pctSelected,\n    fg3aSelected,\n    fg3mSelected,\n    fg3_pctSelected,\n    ftaSelected,\n    ftmSelected,\n    ft_pctSelected,\n    pfSelected,\n    minSelected,\n    selectedFirstSeason,\n    selectedLastSeason,\n    fetchingData,\n    trailingAverage\n  }\n) => {\n\n  const options = {\n    //responsive: true,\n    /* maintainAspectRatio: false, */\n    //aspectRatio: 1,\n    legend: {\n      onClick: (e) => e.stopPropagation(),\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        ticks: {\n          display: false\n        }\n      }]\n    }\n  }\n\n  const playerStatsFiltered = playerStats.filter(playerStat => playerStat.game.postseason === postSeasonSelected)\n\n  const seasons = playerStatsFiltered.map(playerStat => playerStat.game.season)\n  const startOfCareerSeason = Math.min.apply(Math, seasons)\n  const endOfCareerSeason = Math.max.apply(Math, seasons)\n\n  let startSeasonToShow\n  let endSeasonToShow\n\n  if (selectedFirstSeason > startOfCareerSeason) {\n    startSeasonToShow = selectedFirstSeason\n  } else {\n    startSeasonToShow = startOfCareerSeason\n  }\n\n  if (selectedLastSeason < endOfCareerSeason) {\n    endSeasonToShow = selectedLastSeason\n  } else {\n    endSeasonToShow = endOfCareerSeason\n  }\n\n\n  const games = playerStatsFiltered.filter(playerStat => playerStat.game.season >= selectedFirstSeason && playerStat.game.season <= selectedLastSeason).length\n\n  //const postSeasonGames = playerStatsFiltered.filter(playerStat => playerStat.game.postseason === true).length\n\n  const data = {\n    labels: playerStatsFiltered\n      .filter(playerStat => playerStat.game.season >= selectedFirstSeason && playerStat.game.season <= selectedLastSeason)\n      .map(playerStat => playerStat.game.date.split('T')[0]\n        .concat('\\n')\n        .concat(teams.find(team => team.id === playerStat.game.visitor_team_id).abbreviation)\n        .concat('@')\n        .concat(teams.find(team => team.id === playerStat.game.home_team_id).abbreviation)\n        .concat(playerStat.game.postseason ? ' POST' : ' REG')),\n    datasets: [\n      {\n        //data: playerStats.map(playerStat => (playerStat.pts && playerStat.game.postseason === true)),\n        label: 'pts',\n        data: playerStatsFiltered.map(playerStat => playerStat.pts),\n        fill: false,\n        borderColor: colors.lightGreyDot,\n        pointBackgroundColor: colors.lightGreyDot,\n        showLine: false,\n        hidden: !ptsSelected\n      },\n      {\n        label: 'pts trailing mean',\n\n        fill: false,\n        borderColor: colors.lightGreyLine,\n        pointBackgroundColor: colors.lightGreyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pts(playerStatsFiltered, trailingAverage),\n        hidden: !ptsSelected\n      },\n      {\n        label: 'ast',\n        data: playerStatsFiltered.map(playerStat => playerStat.ast),\n        fill: false,\n        borderColor: colors.brownDot,\n        pointBackgroundColor: colors.brownDot,\n        showLine: false,\n        hidden: !astSelected\n      },\n      {\n        label: 'ast trailing mean',\n\n        fill: false,\n        borderColor: colors.brownLine,\n        pointBackgroundColor: colors.brownLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ast(playerStatsFiltered, trailingAverage),\n        hidden: !astSelected\n      },\n      {\n        label: 'reb',\n        data: playerStatsFiltered.map(playerStat => playerStat.reb),\n        fill: false,\n        borderColor: colors.oliveDot,\n        pointBackgroundColor: colors.oliveDot,\n        showLine: false,\n        hidden: !rebSelected\n      },\n      {\n        label: 'reb trailing mean',\n\n        fill: false,\n        borderColor: colors.oliveLine,\n        pointBackgroundColor: colors.oliveLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.reb(playerStatsFiltered, trailingAverage),\n        hidden: !rebSelected\n      },\n      {\n        label: 'blk',\n        data: playerStatsFiltered.map(playerStat => playerStat.blk),\n        fill: false,\n        borderColor: colors.tealDot,\n        pointBackgroundColor: colors.tealDot,\n        showLine: false,\n        hidden: !blkSelected\n      },\n      {\n        label: 'blk trailing mean',\n\n        fill: false,\n        borderColor: colors.tealLine,\n        pointBackgroundColor: colors.tealLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.blk(playerStatsFiltered, trailingAverage),\n        hidden: !blkSelected\n      },\n      {\n        label: 'stl',\n        data: playerStatsFiltered.map(playerStat => playerStat.stl),\n        fill: false,\n        borderColor: colors.navyDot,\n        pointBackgroundColor: colors.navyDot,\n        showLine: false,\n        hidden: !stlSelected\n      },\n      {\n        label: 'stl trailing mean',\n\n        fill: false,\n        borderColor: colors.navyLine,\n        pointBackgroundColor: colors.navyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.stl(playerStatsFiltered, trailingAverage),\n        hidden: !stlSelected\n      },\n      {\n        label: 'turnover',\n        data: playerStatsFiltered.map(playerStat => playerStat.turnover),\n        fill: false,\n        borderColor: colors.redDot,\n        pointBackgroundColor: colors.redDot,\n        showLine: false,\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'turnover trailing mean',\n        fill: false,\n        borderColor: colors.redLine,\n        pointBackgroundColor: colors.redLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.turnover(playerStatsFiltered, trailingAverage),\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'min',\n        data: playerStatsFiltered.map(playerStat => playerStat.min ? Number(playerStat.min.split(':')[0]) : null),\n        fill: false,\n        borderColor: colors.orangeDot,\n        pointBackgroundColor: colors.orangeDot,\n        showLine: false,\n        hidden: !minSelected\n      },\n      {\n        label: 'min trailing mean',\n        fill: false,\n        borderColor: colors.orangeLine,\n        pointBackgroundColor: colors.orangeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.min(playerStatsFiltered, trailingAverage),\n        hidden: !minSelected\n      },\n      {\n        label: 'pf',\n        data: playerStatsFiltered.map(playerStat => playerStat.pf),\n        fill: false,\n        borderColor: colors.yellowDot,\n        pointBackgroundColor: colors.yellowDot,\n        showLine: false,\n        hidden: !pfSelected\n      },\n      {\n        label: 'pf trailing mean',\n        fill: false,\n        borderColor: colors.yellowLine,\n        pointBackgroundColor: colors.yellowLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pf(playerStatsFiltered, trailingAverage),\n        hidden: !pfSelected\n      },\n      {\n        label: 'dreb',\n        data: playerStatsFiltered.map(playerStat => playerStat.dreb),\n        fill: false,\n        borderColor: colors.limeDot,\n        pointBackgroundColor: colors.limeDot,\n        showLine: false,\n        hidden: !drebSelected\n      },\n      {\n        label: 'dreb trailing mean',\n        fill: false,\n        borderColor: colors.limeLine,\n        pointBackgroundColor: colors.limeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.dreb(playerStatsFiltered, trailingAverage),\n        hidden: !drebSelected\n      },\n      {\n        label: 'oreb',\n        data: playerStatsFiltered.map(playerStat => playerStat.oreb),\n        fill: false,\n        borderColor: colors.greenDot,\n        pointBackgroundColor: colors.greenDot,\n        showLine: false,\n        hidden: !orebSelected\n      },\n      {\n        label: 'oreb trailing mean',\n        fill: false,\n        borderColor: colors.greenLine,\n        pointBackgroundColor: colors.greenLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.oreb(playerStatsFiltered, trailingAverage),\n        hidden: !orebSelected\n      },\n      {\n        label: 'fg_pct',\n        data: playerStatsFiltered.map(playerStat => playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct),\n        fill: false,\n        borderColor: colors.cyanDot,\n        pointBackgroundColor: colors.cyanDot,\n        showLine: false,\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg_pct trailing mean',\n        fill: false,\n        borderColor: colors.cyanLine,\n        pointBackgroundColor: colors.cyanLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg_pct(playerStatsFiltered\n          .map(playerStat => ({ ...playerStat, fg_pct: playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct })), trailingAverage),\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg3_pct',\n        data: playerStatsFiltered.map(playerStat => playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct),\n        fill: false,\n        borderColor: colors.blueDot,\n        pointBackgroundColor: colors.blueDot,\n        showLine: false,\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'fg3_pct trailing mean',\n        fill: false,\n        borderColor: colors.blueLine,\n        pointBackgroundColor: colors.blueLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3_pct(playerStatsFiltered\n          .map(playerStat => ({ ...playerStat, fg3_pct: playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct })), trailingAverage),\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'ft_pct',\n        data: playerStatsFiltered.map(playerStat => playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct),\n        fill: false,\n        borderColor: colors.purpleDot,\n        pointBackgroundColor: colors.purpleDot,\n        showLine: false,\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'ft_pct trailing mean',\n        fill: false,\n        borderColor: colors.purpleLine,\n        pointBackgroundColor: colors.purpleLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ft_pct(playerStatsFiltered\n          .map(playerStat => ({\n            ...playerStat,\n            ft_pct: (playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct)\n          })), trailingAverage),\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'fga',\n        data: playerStatsFiltered.map(playerStat => playerStat.fga),\n        fill: false,\n        borderColor: colors.magentaDot,\n        pointBackgroundColor: colors.magentaDot,\n        showLine: false,\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fga trailing mean',\n        fill: false,\n        borderColor: colors.magentaLine,\n        pointBackgroundColor: colors.magentaLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fga(playerStatsFiltered,trailingAverage),\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fgm',\n        data: playerStatsFiltered.map(playerStat => playerStat.fgm),\n        fill: false,\n        borderColor: colors.greyDot,\n        pointBackgroundColor: colors.greyDot,\n        showLine: false,\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fgm trailing mean',\n        fill: false,\n        borderColor: colors.greyLine,\n        pointBackgroundColor: colors.greyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fgm(playerStatsFiltered,trailingAverage),\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fg3a',\n        data: playerStatsFiltered.map(playerStat => playerStat.fg3a),\n        fill: false,\n        borderColor: colors.pinkDot,\n        pointBackgroundColor: colors.pinkDot,\n        showLine: false,\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3a trailing mean',\n        fill: false,\n        borderColor: colors.pinkLine,\n        pointBackgroundColor: colors.pinkLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3a(playerStatsFiltered,trailingAverage),\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3m',\n        data: playerStatsFiltered.map(playerStat => playerStat.fg3m),\n        fill: false,\n        borderColor: colors.apricotDot,\n        pointBackgroundColor: colors.apricotDot,\n        showLine: false,\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fg3m trailing mean',\n        fill: false,\n        borderColor: colors.apricotLine,\n        pointBackgroundColor: colors.apricotLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3m(playerStatsFiltered,trailingAverage),\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fta',\n        data: playerStatsFiltered.map(playerStat => playerStat.fta),\n        fill: false,\n        borderColor: colors.beigeDot,\n        pointBackgroundColor: colors.beigeDot,\n        showLine: false,\n        hidden: !ftaSelected\n      },\n      {\n        label: 'fta trailing mean',\n        fill: false,\n        borderColor: colors.beigeLine,\n        pointBackgroundColor: colors.beigeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fta(playerStatsFiltered,trailingAverage),\n        hidden: !ftaSelected\n      },\n      {\n        label: 'ftm',\n        data: playerStatsFiltered.map(playerStat => playerStat.ftm),\n        fill: false,\n        borderColor: colors.mintDot,\n        pointBackgroundColor: colors.mintDot,\n        showLine: false,\n        hidden: !ftmSelected\n      },\n      {\n        label: 'ftm trailing mean',\n        fill: false,\n        borderColor: colors.mintLine,\n        pointBackgroundColor: colors.mintLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ftm(playerStatsFiltered,trailingAverage),\n        hidden: !ftmSelected\n      },\n    ],\n  }\n\n  return (\n    <div>\n      <Container style={{ color: 'white', paddingLeft: '30px' }}>\n        <Row>\n          {fetchingData\n            ? <Col>\n              <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n              <br></br>\n            </Col>\n            : <>\n              <Col>\n                <div>\n                  {playerStats[0].player.first_name} {playerStats[0].player.last_name}, {startSeasonToShow} - {endSeasonToShow}, {games} games\n              </div>\n              </Col>\n            </>}\n        </Row>\n      </Container>\n      <div className='chart'>\n        <Line\n          data={data}\n          options={options}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default PlayerStats","import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/stats'\nconst baseUrlDB = '/api/statsdb/statsfromdb'\n\nconst getPlayerStatsFromApi = async (seasons, playerId) => {\n  //console.log('seasons to api', seasons)\n  let seasonsVariable = ''\n\n  for (let i = 0; i < seasons.length; i++) {\n    seasonsVariable += '&seasons[]='\n    seasonsVariable += seasons[i]\n\n  }\n  //console.log('seasonsVariable', seasonsVariable)\n\n  const playerStats = await axios.get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100`)\n  //playerStats.sort((a, b) => a.game.date - b.game.date)\n  const totalPages = playerStats.data.meta.total_pages\n  console.log('totalPages', totalPages)\n\n  let playerStatsAllPages = []\n\n  for (let page = 1; page <= totalPages; page++) {\n    console.log('getting stats from page', page)\n    const playerStatsOnePage = await axios\n      .get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100&page=${page}`)\n    playerStatsAllPages = playerStatsAllPages.concat(playerStatsOnePage.data.data)\n  }\n  console.log(playerStatsAllPages)\n  //return playerStats.data\n  return playerStatsAllPages\n}\n\nconst getPlayerStatsFromDB = async (/* seasons, */ playerId/* , regularSeasonSelected, postSeasonSelected */) => {\n  /* let seasonHelper = ''\n  seasons.forEach(season => {\n    seasonHelper += `${season},`\n  }) */\n  \n  //console.log('seasonHelper', seasonHelper)\n  //const playerStats = await axios.get(`${baseUrlDB}/${playerId}/${seasonHelper}/${regularSeasonSelected}/${postSeasonSelected}`)\n  //const playerStats = await axios.get(`${baseUrlDB}/${playerId}/${seasonHelper}`)\n  const playerStats = await axios.get(`${baseUrlDB}/${playerId}`)\n  return playerStats\n}\n\nconst playerStatService = { getPlayerStatsFromApi, getPlayerStatsFromDB }\n\nexport default playerStatService\n","import Select from 'react-select'\nimport playerStatService from '../services/playerStats'\n\nconst SelectPlayer = ({ players, setSelectedPlayer, setPlayerStats, setFetchingData }) => {\n\n  const playerSelect = players.map(player => ({ label: player.fullName, value: player.fullName }))\n\n  const handleSelectedPlayerChange = (playerFullName) => {\n    setSelectedPlayer(playerFullName)\n    getPlayerStats(playerFullName)\n  }\n\n  const getPlayerStats = (playerFullName) => {\n    setFetchingData(true)\n    const searchedPlayer = players.find(player => player.fullName === playerFullName)\n    console.log('searched player', searchedPlayer)\n    playerStatService.getPlayerStatsFromDB(searchedPlayer.apiId)\n      .then((response) => {\n        setPlayerStats(response.data.sort((a, b) =>\n          new Date(a.game.date).getTime() - new Date(b.game.date).getTime())\n        )\n        setFetchingData(false)\n      })\n\n  }\n  return (\n    <div>\n      <Select\n        options={playerSelect}\n        onChange={(option) => handleSelectedPlayerChange(option.value)}\n        placeholder='Select player'\n      />\n    </div>\n  )\n}\n\nexport default SelectPlayer","import Select from 'react-select'\nimport { /* Container,  */Row, Col } from 'react-bootstrap'\n\nconst SelectSeasons = ({\n  selectedFirstSeason,\n  selectedLastSeason,\n  setSelectedFirstSeason,\n  setSelectedLastSeason\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  let seasonAscending = 1979\n  const seasonSelectAscending = []\n  while (seasonAscending <= 2020) {\n    seasonSelectAscending.push({ label: seasonAscending.toString(), value: seasonAscending.toString() })\n    seasonAscending++\n  }\n\n  const handleSelectedFirstSeasonChange = (event) => {\n    if (event.value > selectedLastSeason) {\n      setSelectedFirstSeason(selectedLastSeason)\n      setSelectedLastSeason(event.value)\n    } else {\n      setSelectedFirstSeason(event.value)\n    }\n  }\n\n  const handleSelectedLastSeasonChange = (event) => {\n    if (event.value < selectedFirstSeason) {\n      setSelectedLastSeason(selectedFirstSeason)\n      setSelectedFirstSeason(event.value)\n    } else {\n      setSelectedLastSeason(event.value)\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Col sm={4}></Col>\n        <Col sm={4}>\n          <Select\n            options={seasonSelectAscending}\n            /* onChange={(event) => setSelectedFirstSeason(event.value)} */\n            onChange={(event) => handleSelectedFirstSeasonChange(event)}\n            closeMenuOnSelect={true}\n            placeholder={selectedFirstSeason.toString()}\n          />\n        </Col>\n        <Col sm={4}></Col>\n      </Row>\n      <Row>\n        <Col sm={4}></Col>\n        <Col sm={4}>\n          <Select\n            options={seasonSelectDescending}\n            /* onChange={(event) => setSelectedLastSeason(event.value)} */\n            onChange={(event) => handleSelectedLastSeasonChange(event)}\n            closeMenuOnSelect={true}\n            placeholder={selectedLastSeason}\n          />\n        </Col>\n        <Col sm={4}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default SelectSeasons","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectRegularPost","import { Form } from 'react-bootstrap'\nimport React from 'react'\nimport colors from '../styling/colors'\n//import { AllCheckerCheckbox, Checkbox, CheckboxGroup } from '@createnl/grouped-checkboxes'\n\nconst SelectStats = (\n  {\n    ptsSelected,\n    setPtsSelected,\n    astSelected,\n    setAstSelected,\n    rebSelected,\n    setRebSelected,\n    drebSelected,\n    setDrebSelected,\n    orebSelected,\n    setOrebSelected,\n    blkSelected,\n    setBlkSelected,\n    stlSelected,\n    setStlSelected,\n    turnoverSelected,\n    setTurnoverSelected,\n    fgaSelected,\n    setFgaSelected,\n    fgmSelected,\n    setFgmSelected,\n    fg_pctSelected,\n    setFg_pctSelected,\n    fg3aSelected,\n    setFg3aSelected,\n    fg3mSelected,\n    setFg3mSelected,\n    fg3_pctSelected,\n    setFg3_pctSelected,\n    ftaSelected,\n    setFtaSelected,\n    ftmSelected,\n    setFtmSelected,\n    ft_pctSelected,\n    setFt_pctSelected,\n    pfSelected,\n    minSelected,\n    setMinSelected,\n    setPfSelected\n  }\n) => {\n\n  const cellWidth = 100\n\n  return (\n    <div style={{ color: 'white' }}>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.lightGreyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPtsSelected(!ptsSelected)}\n                  type=\"checkbox\"\n                  label=\"pts\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.brownLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setAstSelected(!astSelected)}\n                  type=\"checkbox\"\n                  label=\"ast\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.oliveLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setRebSelected(!rebSelected)}\n                  type=\"checkbox\"\n                  label=\"reb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.tealLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setBlkSelected(!blkSelected)}\n                  type=\"checkbox\"\n                  label=\"blk\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.navyLine/* , color:'black' */ }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setStlSelected(!stlSelected)}\n                  type=\"checkbox\"\n                  label=\"stl\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.redLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setTurnoverSelected(!turnoverSelected)}\n                  type=\"checkbox\"\n                  label=\"to\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.yellowLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPfSelected(!pfSelected)}\n                  type=\"checkbox\"\n                  label=\"pf\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.orangeLine }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setMinSelected(!minSelected)}\n                  type=\"checkbox\"\n                  label=\"min\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.cyanLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg_pctSelected(!fg_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.magentaLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgaSelected(!fgaSelected)}\n                  type=\"checkbox\"\n                  label=\"fga\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgmSelected(!fgmSelected)}\n                  type=\"checkbox\"\n                  label=\"fgm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.blueLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3_pctSelected(!fg3_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.pinkLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3aSelected(!fg3aSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3a\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.apricotLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3mSelected(!fg3mSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3m\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.purpleLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFt_pctSelected(!ft_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"ft_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.beigeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtaSelected(!ftaSelected)}\n                  type=\"checkbox\"\n                  label=\"fta\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.mintLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtmSelected(!ftmSelected)}\n                  type=\"checkbox\"\n                  label=\"ftm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.limeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setDrebSelected(!drebSelected)}\n                  type=\"checkbox\"\n                  label=\"dreb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greenLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setOrebSelected(!orebSelected)}\n                  type=\"checkbox\"\n                  label=\"oreb\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      <br></br>\n      {/* test to check that the states change correctly */}\n      {/* <p>pts: {ptsSelected.toString()}</p>\n      <p>ast:{astSelected.toString()}</p>\n      <p>reb:{rebSelected.toString()}</p>\n      <p>blk:{blkSelected.toString()}</p>\n      <p>stl:{stlSelected.toString()}</p>\n      <p>turnover:{turnoverSelected.toString()}</p>\n      <p>min:{minSelected.toString()}</p>\n      <p>pf:{pfSelected.toString()}</p>\n      <br></br>\n      <p>dreb:{drebSelected.toString()}</p>\n      <p>oreb:{orebSelected.toString()}</p>\n      <br></br>\n      <p>fg_pct:{fg_pctSelected.toString()}</p>\n      <p>fg3_pct:{fg3_pctSelected.toString()}</p>\n      <p>ft_pct:{ft_pctSelected.toString()}</p>\n      <br></br>\n      <p>fga:{fgaSelected.toString()}</p>\n      <p>fgm:{fgmSelected.toString()}</p>\n      <p>fg3a:{fg3aSelected.toString()}</p>\n      <p>fg3m:{fg3mSelected.toString()}</p>\n      <p>fta:{ftaSelected.toString()}</p>\n      <p>ftm:{ftmSelected.toString()}</p> */}\n    </div>\n  )\n}\n\nexport default SelectStats","export default __webpack_public_path__ + \"static/media/ball_logov3.965d973b.png\";","import ball_logo from '../images/ball_logov3.png'\n\n\nconst Logo = () => {\n\n\n  return (\n    <img\n      /* class=\"card-img-top mb-3 w-auto\" */\n      src={ball_logo}\n      alt='ball_logo'\n      style={{\n        width: '75px',\n        height: '75px'\n      }} />\n  )\n}\n\nexport default Logo","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectTrailingAverage = ({ setTrailingAverage }) => {\n\n  const [radioValue, setRadioValue] = useState('25');\n\n  const radios = [\n    { name: '5', value: '5' },\n    { name: '10', value: '10' },\n    { name: '25', value: '25' },\n    { name: '50', value: '50' },\n    { name: '100', value: '100' },\n  ];\n\n  const handleRegularPostChange = (e) => {\n    /* if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    } */\n    setRadioValue(e.currentTarget.value)\n    setTrailingAverage(Number(e.currentTarget.value))\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectTrailingAverage","const Instructions = () => {\n\n  return (\n    <div style={{ color: 'white' }}>\n      <strong>Instructions</strong>\n      <br></br>\n      <br></br>\n      <ul>\n        <li>Select a player, data starts loading</li>\n        <br></br>\n        <li>Select seasons. Default is 1979-2020</li>\n        <br></br>\n        <li>Select stats</li>\n        <br></br>\n        <li>Select the amount of games to be counted into the trailing average</li>\n        <br></br>\n        <li>Select regular or post season</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Instructions","const Tips = () => {\n\n  return (\n    <div style={{ color: 'white' }}>\n      <strong>Tips</strong>\n      <br></br>\n      <br></br>\n      <ul>\n        <li>\n          With a mouse you can hover over individual\n          data points to see more details. On a touch screen\n          you can click the data point.\n          </li>\n        <br></br>\n        <li>\n          To see trends in a player's statistics\n          you can change the amount of games that\n          are counted into the trailing average.\n          Play around and see how the line changes\n          with different values\n          </li>\n        <br></br>\n        <li>\n          To keep the chart readable you should have\n          only a couple of stats selected at a time\n          </li>\n        <br></br>\n        <li>\n          The best user experience comes with a large screen\n          such as a tablet, laptop or desktop pc\n          </li>\n        <br></br>\n        <li>\n          On a large screen you can open multiple windows in\n          your browser and select multiple players to compare\n          their statistics throughout their careers\n          </li>\n        <br></br>\n      </ul>\n    </div>\n  )\n}\n\nexport default Tips","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport teamService from './services/teams'\nimport playerService from './services/players'\nimport PlayerStats from './components/PlayerStats'\nimport SelectPlayer from './components/SelectPlayer'\nimport SelectSeasons from './components/SelectSeasons'\n//import NavigationBar from './components/NavigationBar'\n//import GetStats from './components/GetStats'\nimport SelectRegularPost from './components/SelectRegularPost'\nimport SelectStats from './components/SelectStats'\nimport Logo from './components/Logo'\nimport SelectTrailingAverage from './components/SelectTrailingAverage'\nimport Instructions from './components/Instructions'\nimport Tips from './components/Tips'\nimport Loader from 'react-loader-spinner'\n\n\n//import Teams from './components/Teams'\n\nimport {\n  BrowserRouter as Router,\n  /*Switch,\n  Route,\n  Link,\n  Redirect,\n  useRouteMatch,\n  Redirect,\n  useHistory */\n} from 'react-router-dom'\n\nfunction App() {\n  const [players, setPlayers] = useState([])\n  const [playerStats, setPlayerStats] = useState([])\n  const [teams, setTeams] = useState([])\n  const [/* selectedPlayer */, setSelectedPlayer] = useState('')\n  const [selectedFirstSeason, setSelectedFirstSeason] = useState(1979)\n  const [selectedLastSeason, setSelectedLastSeason] = useState(2020)\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n\n  const [ptsSelected, setPtsSelected] = useState(false)\n  const [astSelected, setAstSelected] = useState(false)\n  const [rebSelected, setRebSelected] = useState(false)\n  const [drebSelected, setDrebSelected] = useState(false)\n  const [orebSelected, setOrebSelected] = useState(false)\n  const [blkSelected, setBlkSelected] = useState(false)\n  const [stlSelected, setStlSelected] = useState(false)\n  const [turnoverSelected, setTurnoverSelected] = useState(false)\n  const [fgaSelected, setFgaSelected] = useState(false)\n  const [fgmSelected, setFgmSelected] = useState(false)\n  const [fg_pctSelected, setFg_pctSelected] = useState(false)\n  const [fg3aSelected, setFg3aSelected] = useState(false)\n  const [fg3mSelected, setFg3mSelected] = useState(false)\n  const [fg3_pctSelected, setFg3_pctSelected] = useState(false)\n  const [ftaSelected, setFtaSelected] = useState(false)\n  const [ftmSelected, setFtmSelected] = useState(false)\n  const [ft_pctSelected, setFt_pctSelected] = useState(false)\n  const [pfSelected, setPfSelected] = useState(false)\n  const [minSelected, setMinSelected] = useState(false)\n\n  const [fetchingData, setFetchingData] = useState(false)\n\n  const [trailingAverage, setTrailingAverage] = useState(25)\n\n  useEffect(() => {\n    teamService.getTeams()\n      .then((response) => {\n        setTeams(response.data)\n      })\n    //Player sorting should be done in the database query?\n    playerService.getPlayers()\n      .then((response) => {\n        setPlayers(response.map(player => ({ ...player, fullName: `${player.firstName} ${player.lastName}` }))\n          .sort((a, b) => (a.lastName > b.lastName) ? 1 : ((b.lastName > a.lastName) ? -1 : 0)))\n      })\n  }, [])\n\n  return (\n    <Router>\n      <div style={{\n        backgroundColor: \"#17202A\",\n        height: '130vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center'/* ,\n        textAlign: 'center' */\n      }}>\n        <div className=\"container\" style={{ paddingTop: '2vh', backgroundColor: \"#17202A\" }} >\n          <Container>\n            <Row>\n              <Col sm={4}></Col>\n              <Col sm={4}>\n                <SelectPlayer\n                  players={players}\n                  setSelectedPlayer={setSelectedPlayer}\n                  setPlayerStats={setPlayerStats}\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                />\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n            <SelectSeasons\n              setSelectedFirstSeason={setSelectedFirstSeason}\n              setSelectedLastSeason={setSelectedLastSeason}\n              selectedFirstSeason={selectedFirstSeason}\n              selectedLastSeason={selectedLastSeason}\n            />\n            <br></br>\n            {playerStats.length === 0 && !fetchingData\n              ? <>\n                <Row style={{ textAlign: 'center' }}>\n                  <Col sm={5} xs={1}></Col>\n                  <Col sm={2} xs={10}>\n                    <Logo />\n                  </Col>\n                  <Col sm={5} xs={1}></Col>\n                </Row>\n                <br></br>\n                {/* <Row float='center'>\n                  <Col sm={4} xs={1}></Col>\n                  <Col sm={8} xs={10}>\n                    <Instructions />\n                  </Col>\n                  <Col  xs={1}></Col>\n                </Row> */}\n              </>\n              : <></>}\n            {/* <Col sm={2}>\n                <NavigationBar />\n              </Col> */}\n            <Row style={{ textAlign: 'center' }}>\n              <Col sm={5} xs={4}></Col>\n              <Col sm={2} xs={4}>\n                {fetchingData && playerStats.length === 0\n                  ? <>\n                    <br></br>\n                    <Loader type=\"Grid\" color=\"white\" height=\"75\" width=\"75\" />\n                    <br></br>\n                    <br></br>\n                  </>\n                  : <></>}\n              </Col>\n              <Col sm={5} xs={4}></Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n              <Col>{/* <NavigationBar /> */}\n                {playerStats.length > 0\n                  ? <PlayerStats\n                    playerStats={playerStats}\n                    teams={teams}\n                    regularSeasonSelected={regularSeasonSelected}\n                    postSeasonSelected={postSeasonSelected}\n                    ptsSelected={ptsSelected}\n                    astSelected={astSelected}\n                    rebSelected={rebSelected}\n                    drebSelected={drebSelected}\n                    orebSelected={orebSelected}\n                    blkSelected={blkSelected}\n                    stlSelected={stlSelected}\n                    turnoverSelected={turnoverSelected}\n                    fgaSelected={fgaSelected}\n                    fgmSelected={fgmSelected}\n                    fg_pctSelected={fg_pctSelected}\n                    fg3aSelected={fg3aSelected}\n                    fg3mSelected={fg3mSelected}\n                    fg3_pctSelected={fg3_pctSelected}\n                    ftaSelected={ftaSelected}\n                    ftmSelected={ftmSelected}\n                    ft_pctSelected={ft_pctSelected}\n                    pfSelected={pfSelected}\n                    minSelected={minSelected}\n                    selectedFirstSeason={selectedFirstSeason}\n                    selectedLastSeason={selectedLastSeason}\n                    fetchingData={fetchingData}\n                    trailingAverage={trailingAverage}\n                  />\n                  : <></>}</Col>\n            </Row>\n            <br></br>\n            <Row >\n              <Col sm={4} ></Col>\n              <Col sm={4} >\n                <SelectStats\n                  ptsSelected={ptsSelected}\n                  setPtsSelected={setPtsSelected}\n                  astSelected={astSelected}\n                  setAstSelected={setAstSelected}\n                  rebSelected={rebSelected}\n                  setRebSelected={setRebSelected}\n                  drebSelected={drebSelected}\n                  setDrebSelected={setDrebSelected}\n                  orebSelected={orebSelected}\n                  setOrebSelected={setOrebSelected}\n                  blkSelected={blkSelected}\n                  setBlkSelected={setBlkSelected}\n                  stlSelected={stlSelected}\n                  setStlSelected={setStlSelected}\n                  turnoverSelected={turnoverSelected}\n                  setTurnoverSelected={setTurnoverSelected}\n                  fgaSelected={fgaSelected}\n                  setFgaSelected={setFgaSelected}\n                  fgmSelected={fgmSelected}\n                  setFgmSelected={setFgmSelected}\n                  fg_pctSelected={fg_pctSelected}\n                  setFg_pctSelected={setFg_pctSelected}\n                  fg3aSelected={fg3aSelected}\n                  setFg3aSelected={setFg3aSelected}\n                  fg3mSelected={fg3mSelected}\n                  setFg3mSelected={setFg3mSelected}\n                  fg3_pctSelected={fg3_pctSelected}\n                  setFg3_pctSelected={setFg3_pctSelected}\n                  ftaSelected={ftaSelected}\n                  setFtaSelected={setFtaSelected}\n                  ftmSelected={ftmSelected}\n                  setFtmSelected={setFtmSelected}\n                  ft_pctSelected={ft_pctSelected}\n                  setFt_pctSelected={setFt_pctSelected}\n                  pfSelected={pfSelected}\n                  setPfSelected={setPfSelected}\n                  minSelected={minSelected}\n                  setMinSelected={setMinSelected} />\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n            <Row>\n              <Col sm={4}></Col>\n              <Col sm={4}>\n                <div style={{ color: 'white' }}>trailing average</div>\n                <SelectTrailingAverage\n                  setTrailingAverage={setTrailingAverage} />\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n            <br></br>\n            <Row>\n              <Col sm={4}></Col>\n              <Col sm={4}>\n                <SelectRegularPost\n                  regularSeasonSelected={regularSeasonSelected}\n                  postSeasonSelected={postSeasonSelected}\n                  setRegularSeasonSelected={setRegularSeasonSelected}\n                  setPostSeasonSelected={setPostSeasonSelected}\n                />\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row float='center'>\n              <Col sm={2} xs={1}></Col>\n              <Col sm={8} xs={10}>\n                <Instructions />\n              </Col>\n              <Col sm={2} xs={1}></Col>\n            </Row>\n            <br></br>\n            <Row float='center'>\n              <Col sm={2} xs={1}></Col>\n              <Col sm={8} xs={10}>\n                <Tips />\n              </Col>\n              <Col sm={2} xs={1}></Col>\n            </Row>\n          </Container>\n        </div>\n      </div >\n    </Router >\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}