{"version":3,"sources":["services/trailingMeans.js","styling/colors.js","components/players/PlayerStats.js","services/playerStats.js","components/players/SelectPlayer.js","components/players/SelectSeasons.js","components/players/SelectRegularPost.js","components/players/SelectStats.js","components/players/DescriptionPlayers.js","images/ball_logov6.png","components/common/Logo.js","components/common/Title.js","components/common/Description.js","components/players/SelectTrailingAverage.js","components/players/Players.js","components/teams/SelectTeam.js","services/barChartData.js","services/barChartOptions.js","components/common/BarCharts.js","components/teams/TeamStats.js","components/teams/SelectSeason.js","components/common/SelectRegularPost.js","components/common/SelectPerTotal.js","components/teams/DescriptionTeams.js","components/teams/Teams.js","components/topTen/SelectSeason.js","components/topTen/TopTenStats.js","components/topTen/DescriptionTop20.js","components/topTen/SelectPlayerAmount.js","components/topTen/TopTen.js","components/contact/DescriptionContact.js","services/contact.js","components/contact/Contact.js","services/players.js","services/teams.js","App.js","index.js"],"names":["countTrailingMean","playerStats","statCategory","trailingGames","trailingAverage","i","length","statsInTrailingGames","j","mean","push","countTrailingMeanPct","attemptsInStatCategory","percentages","totalMadeBaskets","totalAttemptedBaskets","trailingPercentage","trailingMeanService","pts","ast","reb","blk","stl","turnover","min","map","playerStat","Number","split","pf","dreb","oreb","fg_pct","fg3_pct","ft_pct","fga","fgm","fg3a","fg3m","fta","ftm","colors","PlayerStats","startSeasonToShow","endSeasonToShow","teams","postSeasonSelected","ptsSelected","astSelected","rebSelected","drebSelected","orebSelected","blkSelected","stlSelected","turnoverSelected","fgaSelected","fgmSelected","fg_pctSelected","fg3aSelected","fg3mSelected","fg3_pctSelected","ftaSelected","ftmSelected","ft_pctSelected","pfSelected","minSelected","selectedFirstSeason","selectedLastSeason","fetchingData","playerStatsFiltered","filter","game","postseason","seasons","season","startOfCareerSeason","Math","apply","endOfCareerSeason","max","games","filteredDataToShow","data","labels","date","concat","find","team","apiId","visitor_team_id","abbreviation","home_team_id","datasets","label","fill","borderColor","lightGreyDot","pointBackgroundColor","showLine","hidden","lightGreyLine","pointRadius","brownDot","brownLine","oliveDot","oliveLine","tealDot","tealLine","navyDot","navyLine","redDot","redLine","orangeDot","orangeLine","yellowDot","yellowLine","limeDot","limeLine","greenDot","greenLine","cyanDot","cyanLine","blueDot","blueLine","purpleDot","purpleLine","magentaDot","magentaLine","greyDot","greyLine","pinkDot","pinkLine","apricotDot","apricotLine","beigeDot","beigeLine","mintDot","mintLine","Container","style","color","paddingLeft","Row","textAlign","Col","type","height","width","player","first_name","last_name","className","options","legend","onClick","e","stopPropagation","display","scales","xAxes","ticks","yAxes","beginAtZero","fontColor","fontSize","baseUrl","playerStatService","getPlayerStatsFromApi","playerId","a","seasonsVariable","axios","get","totalPages","meta","total_pages","console","log","playerStatsAllPages","page","playerStatsOnePage","getPlayerStatsFromDB","getTeamStatsFromDB","teamApiId","getPlayerStatsFromDBForASeason","getSummaryStatsFromDBForASeason","SelectPlayer","players","setSelectedPlayer","setPlayerStats","setFetchingData","playerSelect","fullName","value","getPlayerStats","playerFullName","searchedPlayer","then","response","sort","b","Date","getTime","onChange","option","placeholder","SelectSeasons","setSelectedFirstSeason","setSelectedLastSeason","seasonDescending","seasonSelectDescending","toString","seasonAscending","seasonSelectAscending","sm","event","handleSelectedFirstSeasonChange","closeMenuOnSelect","handleSelectedLastSeasonChange","SelectRegularPost","setRegularSeasonSelected","setPostSeasonSelected","useState","radioValue","setRadioValue","ButtonGroup","toggle","size","name","radio","idx","ToggleButton","variant","checked","currentTarget","handleRegularPostChange","SelectStats","setPtsSelected","setAstSelected","setRebSelected","setDrebSelected","setOrebSelected","setBlkSelected","setStlSelected","setTurnoverSelected","setFgaSelected","setFgmSelected","setFg_pctSelected","setFg3aSelected","setFg3mSelected","setFg3_pctSelected","setFtaSelected","setFtmSelected","setFt_pctSelected","setMinSelected","setPfSelected","cellWidth","Form","backgroundColor","Check","inline","DescriptionPlayers","Logo","logoSize","src","ball_logo","alt","Title","Description","SelectTrailingAverage","setTrailingAverage","require","config","Players","setPlayers","selectedPlayer","regularSeasonSelected","useEffect","ReactGa","initialize","process","pageview","window","location","pathname","search","xs","SelectTeam","setSelectedTeam","setTeamStats","selectedSeason","teamSelect","city","getTeamStats","teamName","searchedTeam","barChartDataService","fgPct","stats","playerAmount","stat","fga_total","slice","hoverOffset","fg3Pct","fg3a_total","ftPct","fta_total","totalPoints","pts_total","totalAssists","ast_total","totalRebounds","reb_total","totalBlocks","blk_total","totalSteals","stl_total","totalTurnovers","turnover_total","totalPF","pf_total","totalMinutes","min_total","totalFga","totalFgm","fgm_total","totalFg3a","totalFg3m","fg3m_total","totalFta","totalFtm","ftm_total","perGamePoints","pts_pergame","perGameAssists","ast_pergame","perGameRebounds","reb_pergame","perGameBlock","blk_pergame","perGameSteals","stl_pergame","perGameTurnovers","turnover_pergame","astToTurnover","ast_to_turnover","perGamePF","pf_pergame","perGameMinutes","min_pergame","perGameFga","fga_pergame","perGameFgm","fgm_pergame","perGameFg3a","fg3a_pergame","perGameFg3m","fg3m_pergame","perGameFta","fta_pergame","perGameFtm","ftm_pergame","per36Points","pts_per36","per36Assists","ast_per36","per36Rebounds","reb_per36","per36Blocks","blk_per36","per36Steals","stl_per36","per36Turnovers","turnover_per36","per36PF","pf_per36","per36Fga","fga_per36","per36Fgm","fgm_per36","per36Fg3a","fg3a_per36","per36Fg3m","fg3m_per36","per36Fta","fta_per36","per36Ftm","ftm_per36","position","plugins","barChartOptionsService","title","text","perGameBlocks","BarCharts","pctSelected","totalSelected","perGameSelected","per36Selected","statsFilteredByPostseason","postSeasonFilteringDone","dataFgPct","dataFg3Pct","dataFtPct","optionsFgPct","optionsFg3Pct","optionsFtPct","dataTotalPoints","dataTotalAssists","dataTotalRebounds","dataTotalBlocks","dataTotalSteals","dataTotalTurnovers","dataTotalPersonalFouls","dataTotalMinutes","dataTotalFga","dataTotalFgm","dataTotalFg3a","dataTotalFg3m","dataTotalFta","dataTotalFtm","optionsTotalPoints","optionsTotalAssists","optionsTotalRebounds","optionsTotalBlocks","optionsTotalSteals","optionsTotalTurnovers","optionsTotalPersonalFouls","optionsTotalMinutes","optionsTotalFga","optionsTotalFgm","optionsTotalFg3a","optionsTotalFg3m","optionsTotalFta","optionsTotalFtm","dataPerGamePoints","dataPerGameAssists","dataPerGameRebounds","dataPerGameBlocks","dataPerGameSteals","dataPerGameTurnovers","dataAstToTurnover","dataPerGamePersonalFouls","dataPerGameMinutes","dataPerGameFga","dataPerGameFgm","dataPerGameFg3a","dataPerGameFg3m","dataPerGameFta","dataPerGameFtm","optionsPerGamePoints","optionsPerGameAssists","optionsPerGameRebounds","optionsPerGameBlocks","optionsPerGameSteals","optionsPerGameTurnovers","optionsAstToTurnover","optionsPerGamePersonalFouls","optionsPerGameMinutes","optionsPerGameFga","optionsPerGameFgm","optionsPerGameFg3a","optionsPerGameFg3m","optionsPerGameFta","optionsPerGameFtm","dataPer36Points","dataPer36Assists","dataPer36Rebounds","dataPer36Blocks","dataPer36Steals","dataPer36Turnovers","dataPer36PersonalFouls","dataPer36Fga","dataPer36Fgm","dataPer36Fg3a","dataPer36Fg3m","dataPer36Fta","dataPer36Ftm","optionsPer36Points","optionsPer36Assists","optionsPer36Rebounds","optionsPer36Blocks","optionsPer36Steals","optionsPer36Turnovers","optionsPer36PersonalFouls","optionsPer36Fga","optionsPer36Fgm","optionsPer36Fg3a","optionsPer36Fg3m","optionsPer36Fta","optionsPer36Ftm","TeamStats","teamStats","teamStat","undefined","playerTotalStats","forEach","playerTotalStat","teamStatsFiltered","playedGames","playerStatsHelper","totalPts","reduce","accumulator","currentValue","totalAst","totalReb","totalStl","totalBlk","totalTurnover","totalPf","totalMin","minutes","timeSplit","seconds","round","isNaN","totalOreb","totalDreb","updatedPlayer","floor","oreb_total","dreb_total","oreb_pergame","dreb_pergame","oreb_per36","dreb_per36","played_games","s","SelectSeason","setSelectedSeason","selectedTeam","handleSelectedSeasonChange","SelectPerTotal","setPerGameSelected","setTotalSelected","setPer36Selected","setPctSelected","handlePerGameChange","DescriptionTeams","Teams","setTopTenStats","TopTenStats","topTenStats","DescriptionTop20","SelectPlayerAmount","setPlayerAmount","TopTen","contactService","sendMessage","email","message","post","Contact","setMessage","setEmail","messageSent","setMessageSent","sentEmptyMessage","setSentEmptyMessage","onSubmit","preventDefault","handleSubmit","Group","controlId","Control","target","handleEmailChange","as","rows","handleMessageChange","Button","DescriptionContact","playerService","getPlayers","getPlayersForASeason","teamService","getTeams","getTeamsFromDatabase","App","setTeams","firstName","lastName","flexDirection","alignContent","paddingTop","align","to","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88b1d078.chunk.js","sourcesContent":["\nconst countTrailingMean = (playerStats, statCategory, trailingGames) => {\n  let trailingAverage = []\n  for (let i = 0; i < trailingGames; i++) {\n    trailingAverage[i] = null\n  }\n  for (let i = trailingGames; i < playerStats.length; i++) {\n    let statsInTrailingGames = 0\n    for (let j = 1; j <= trailingGames; j++) {\n      statsInTrailingGames += playerStats[i - trailingGames + j][statCategory];\n    }\n    const mean = statsInTrailingGames / trailingGames\n    trailingAverage.push(mean)\n  }\n  return trailingAverage\n}\n\nconst countTrailingMeanPct = (playerStats, statCategory, attemptsInStatCategory, trailingGames) => {\n  let percentages = []\n  for (let i = 0; i < trailingGames; i++) {\n    percentages[i] = null\n  }\n\n  for (let i = trailingGames; i < playerStats.length; i++) {\n    let totalMadeBaskets = 0\n    let totalAttemptedBaskets = 0\n    if (playerStats[i][attemptsInStatCategory] === 0) {\n      percentages.push(percentages[i - 1])\n      //playerStats[i][statCategory] = percentages[i - 1]\n    } else {\n      for (let j = 1; j <= trailingGames; j++) {\n        if (playerStats[i - trailingGames + j][attemptsInStatCategory] === 0\n          || playerStats[i - trailingGames + j][attemptsInStatCategory] < playerStats[i - trailingGames + j][statCategory]) {\n          continue\n        }\n        totalMadeBaskets += playerStats[i - trailingGames + j][statCategory]\n        totalAttemptedBaskets += playerStats[i - trailingGames + j][attemptsInStatCategory]\n      }\n      const trailingPercentage = totalMadeBaskets / totalAttemptedBaskets * 100\n      percentages.push(trailingPercentage)\n    }\n\n  }\n  return percentages\n}\n\nconst pts = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'pts', trailingGames)\n}\nconst ast = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'ast', trailingGames)\n}\nconst reb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'reb', trailingGames)\n}\nconst blk = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'blk', trailingGames)\n}\nconst stl = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'stl', trailingGames)\n}\nconst turnover = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'turnover', trailingGames)\n}\nconst min = (playerStats, trailingGames) => {\n  playerStats = playerStats.map(playerStat => ({ ...playerStat, min: playerStat.min ? Number(playerStat.min.split(':')[0]) : null }))\n  return countTrailingMean(playerStats, 'min', trailingGames)\n}\nconst pf = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'pf', trailingGames)\n}\nconst dreb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'dreb', trailingGames)\n}\nconst oreb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'oreb', trailingGames)\n}\nconst fg_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'fgm', 'fga', trailingGames)\n}\nconst fg3_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'fg3m', 'fg3a', trailingGames)\n}\nconst ft_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'ftm', 'fta', trailingGames)\n}\n/* const fg_pct = (playerStats) => {\n  return countPct(playerStats, 'fgm', 'fga')\n}\nconst fg3_pct = (playerStats) => {\n  return countPct(playerStats, 'fg3m', 'fg3a')\n}\nconst ft_pct = (playerStats) => {\n  return countPct(playerStats, 'ftm', 'fta')\n} */\nconst fga = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fga', trailingGames)\n}\nconst fgm = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fgm', trailingGames)\n}\nconst fg3a = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fg3a', trailingGames)\n}\nconst fg3m = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fg3m', trailingGames)\n}\nconst fta = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fta', trailingGames)\n}\nconst ftm = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'ftm', trailingGames)\n}\n\n\nconst trailingMeanService = {\n  pts,\n  ast,\n  reb,\n  blk,\n  stl,\n  turnover,\n  min,\n  pf,\n  dreb,\n  oreb,\n  fg_pct,\n  fg3_pct,\n  ft_pct,\n  fga,\n  fgm,\n  fg3a,\n  fg3m,\n  fta,\n  ftm\n}\n\nexport default trailingMeanService","const colors = {\n  'maroonDot': 'rgba(128,0,0,0.3)',\n  'maroonLine': 'rgba(128,0,0,1.0)',\n  'brownDot': 'rgba(170,110,40,0.3)',\n  'brownLine': 'rgba(170,110,40,1.0)',\n  'oliveDot': 'rgba(128,128,0,0.3)',\n  'oliveLine': 'rgba(128,128,0,1.0)',\n  'tealDot': 'rgba(0,128,128,0.3)',\n  'tealLine': 'rgba(0,128,128,1.0)',\n  'navyDot': 'rgba(0,0,128,0.3)',\n  'navyLine': 'rgba(0,0,128,1.0)',\n  'redDot': 'rgba(230,25,75,0.3)',\n  'redLine': 'rgba(230,25,75,1.0)',\n  'orangeDot': 'rgba(245,130,48,0.3)',\n  'orangeLine': 'rgba(245,130,48,1.0)',\n  'yellowDot': 'rgba(255,225,25,0.3)',\n  'yellowLine': 'rgba(255,225,25,1.0)',\n  'limeDot': 'rgba(210,245,60,0.3)',\n  'limeLine': 'rgba(210,245,60,1.0)',\n  'greenDot': 'rgba(60,180,75,0.3)',\n  'greenLine': 'rgba(60,180,75,1.0)',\n  'cyanDot': 'rgba(70,240,240,0.3)',\n  'cyanLine': 'rgba(70,240,240,1.0)',\n  'blueDot': 'rgba(0,130,200,0.3)',\n  'blueLine': 'rgba(0,130,200,1.0)',\n  'purpleDot': 'rgba(145,30,180,0.3)',\n  'purpleLine': 'rgba(145,30,180,1.0)',\n  'magentaDot': 'rgba(240,50,230,0.3)',\n  'magentaLine': 'rgba(240,50,230,1.0)',\n  'greyDot': 'rgba(128,128,128,0.3)',\n  'greyLine': 'rgba(128,128,128,1.0)',\n  'pinkDot': 'rgba(250,190,212,0.3)',\n  'pinkLine': 'rgba(250,190,212,1.0)',\n  'apricotDot': 'rgba(255,215,180,0.3)',\n  'apricotLine': 'rgba(255,215,180,1.0)',\n  'beigeDot': 'rgba(255,250,200,0.3)',\n  'beigeLine': 'rgba(255,250,200,1.0)',\n  'mintDot': 'rgba(170,255,195,0.3)',\n  'mintLine': 'rgba(170,255,195,1.0)',\n  'lavenderDot': 'rgba(220,190,255,0.3)',\n  'lavenderLine': 'rgba(220,190,255,1.0)',\n  'whiteDot': 'rgba(255,255,255,0.3)',\n  'whiteLine': 'rgba(255,255,255,1.0)',\n  'lightGreyDot': 'rgba(211,211,211,0.3)',\n  'lightGreyLine': 'rgba(211,211,211,1.0)'\n}\n\nexport default colors","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Line } from 'react-chartjs-2'\nimport trailingMeanService from '../../services/trailingMeans'\nimport colors from '../../styling/colors'\nimport Loader from 'react-loader-spinner'\n//import Logo from '../components/Logo'\n\nconst PlayerStats = (\n  {\n    playerStats,\n    teams,\n    postSeasonSelected,\n    ptsSelected,\n    astSelected,\n    rebSelected,\n    drebSelected,\n    orebSelected,\n    blkSelected,\n    stlSelected,\n    turnoverSelected,\n    fgaSelected,\n    fgmSelected,\n    fg_pctSelected,\n    fg3aSelected,\n    fg3mSelected,\n    fg3_pctSelected,\n    ftaSelected,\n    ftmSelected,\n    ft_pctSelected,\n    pfSelected,\n    minSelected,\n    selectedFirstSeason,\n    selectedLastSeason,\n    fetchingData,\n    trailingAverage\n  }\n) => {\n\n  const options = {\n    //responsive: true,\n    /* maintainAspectRatio: false, */\n    //aspectRatio: 1,\n    legend: {\n      onClick: (e) => e.stopPropagation(),\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        ticks: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          fontColor: 'white',\n          fontSize: 14,\n        }\n      }]\n    }\n  }\n\n  const playerStatsFiltered = playerStats.filter(playerStat => playerStat.game.postseason === postSeasonSelected)\n\n  const seasons = playerStatsFiltered.map(playerStat => playerStat.game.season)\n  const startOfCareerSeason = Math.min.apply(Math, seasons)\n  const endOfCareerSeason = Math.max.apply(Math, seasons)\n\n  let startSeasonToShow\n  let endSeasonToShow\n\n  if (selectedFirstSeason > startOfCareerSeason) {\n    startSeasonToShow = selectedFirstSeason\n  } else {\n    startSeasonToShow = startOfCareerSeason\n  }\n\n  if (selectedLastSeason < endOfCareerSeason) {\n    endSeasonToShow = selectedLastSeason\n  } else {\n    endSeasonToShow = endOfCareerSeason\n  }\n\n\n  const games = playerStatsFiltered.filter(playerStat => playerStat.game.season >= selectedFirstSeason && playerStat.game.season <= selectedLastSeason).length\n  const filteredDataToShow = playerStats.filter(\n    playerStat =>\n      playerStat.game.postseason === postSeasonSelected\n      && playerStat.game.season >= selectedFirstSeason\n      && playerStat.game.season <= selectedLastSeason\n  )\n\n  const data = {\n    labels: filteredDataToShow\n      .map(playerStat => playerStat.game.date.split('T')[0]\n        .concat('\\n')\n        .concat(teams.find(team => team.apiId === playerStat.game.visitor_team_id).abbreviation)\n        .concat('@')\n        .concat(teams.find(team => team.apiId === playerStat.game.home_team_id).abbreviation)\n        .concat(playerStat.game.postseason ? ' POST' : ' REG')),\n    datasets: [\n      {\n        label: 'pts',\n        data: filteredDataToShow.map(playerStat => playerStat.pts),\n        fill: false,\n        borderColor: colors.lightGreyDot,\n        pointBackgroundColor: colors.lightGreyDot,\n        showLine: false,\n        hidden: !ptsSelected\n      },\n      {\n        label: 'pts trailing mean',\n\n        fill: false,\n        borderColor: colors.lightGreyLine,\n        pointBackgroundColor: colors.lightGreyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pts(filteredDataToShow, trailingAverage),\n        hidden: !ptsSelected\n      },\n      {\n        label: 'ast',\n        data: filteredDataToShow.map(playerStat => playerStat.ast),\n        fill: false,\n        borderColor: colors.brownDot,\n        pointBackgroundColor: colors.brownDot,\n        showLine: false,\n        hidden: !astSelected\n      },\n      {\n        label: 'ast trailing mean',\n\n        fill: false,\n        borderColor: colors.brownLine,\n        pointBackgroundColor: colors.brownLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ast(filteredDataToShow, trailingAverage),\n        hidden: !astSelected\n      },\n      {\n        label: 'reb',\n        data: filteredDataToShow.map(playerStat => playerStat.reb),\n        fill: false,\n        borderColor: colors.oliveDot,\n        pointBackgroundColor: colors.oliveDot,\n        showLine: false,\n        hidden: !rebSelected\n      },\n      {\n        label: 'reb trailing mean',\n\n        fill: false,\n        borderColor: colors.oliveLine,\n        pointBackgroundColor: colors.oliveLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.reb(filteredDataToShow, trailingAverage),\n        hidden: !rebSelected\n      },\n      {\n        label: 'blk',\n        data: filteredDataToShow.map(playerStat => playerStat.blk),\n        fill: false,\n        borderColor: colors.tealDot,\n        pointBackgroundColor: colors.tealDot,\n        showLine: false,\n        hidden: !blkSelected\n      },\n      {\n        label: 'blk trailing mean',\n\n        fill: false,\n        borderColor: colors.tealLine,\n        pointBackgroundColor: colors.tealLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.blk(filteredDataToShow, trailingAverage),\n        hidden: !blkSelected\n      },\n      {\n        label: 'stl',\n        data: filteredDataToShow.map(playerStat => playerStat.stl),\n        fill: false,\n        borderColor: colors.navyDot,\n        pointBackgroundColor: colors.navyDot,\n        showLine: false,\n        hidden: !stlSelected\n      },\n      {\n        label: 'stl trailing mean',\n\n        fill: false,\n        borderColor: colors.navyLine,\n        pointBackgroundColor: colors.navyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.stl(filteredDataToShow, trailingAverage),\n        hidden: !stlSelected\n      },\n      {\n        label: 'turnover',\n        data: filteredDataToShow.map(playerStat => playerStat.turnover),\n        fill: false,\n        borderColor: colors.redDot,\n        pointBackgroundColor: colors.redDot,\n        showLine: false,\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'turnover trailing mean',\n        fill: false,\n        borderColor: colors.redLine,\n        pointBackgroundColor: colors.redLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.turnover(filteredDataToShow, trailingAverage),\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'min',\n        data: filteredDataToShow.map(playerStat => playerStat.min ? Number(playerStat.min.split(':')[0]) : null),\n        fill: false,\n        borderColor: colors.orangeDot,\n        pointBackgroundColor: colors.orangeDot,\n        showLine: false,\n        hidden: !minSelected\n      },\n      {\n        label: 'min trailing mean',\n        fill: false,\n        borderColor: colors.orangeLine,\n        pointBackgroundColor: colors.orangeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.min(filteredDataToShow, trailingAverage),\n        hidden: !minSelected\n      },\n      {\n        label: 'pf',\n        data: filteredDataToShow.map(playerStat => playerStat.pf),\n        fill: false,\n        borderColor: colors.yellowDot,\n        pointBackgroundColor: colors.yellowDot,\n        showLine: false,\n        hidden: !pfSelected\n      },\n      {\n        label: 'pf trailing mean',\n        fill: false,\n        borderColor: colors.yellowLine,\n        pointBackgroundColor: colors.yellowLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pf(filteredDataToShow, trailingAverage),\n        hidden: !pfSelected\n      },\n      {\n        label: 'dreb',\n        data: filteredDataToShow.map(playerStat => playerStat.dreb),\n        fill: false,\n        borderColor: colors.limeDot,\n        pointBackgroundColor: colors.limeDot,\n        showLine: false,\n        hidden: !drebSelected\n      },\n      {\n        label: 'dreb trailing mean',\n        fill: false,\n        borderColor: colors.limeLine,\n        pointBackgroundColor: colors.limeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.dreb(filteredDataToShow, trailingAverage),\n        hidden: !drebSelected\n      },\n      {\n        label: 'oreb',\n        data: filteredDataToShow.map(playerStat => playerStat.oreb),\n        fill: false,\n        borderColor: colors.greenDot,\n        pointBackgroundColor: colors.greenDot,\n        showLine: false,\n        hidden: !orebSelected\n      },\n      {\n        label: 'oreb trailing mean',\n        fill: false,\n        borderColor: colors.greenLine,\n        pointBackgroundColor: colors.greenLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.oreb(filteredDataToShow, trailingAverage),\n        hidden: !orebSelected\n      },\n      {\n        label: 'fg_pct',\n        data: filteredDataToShow.map(playerStat => playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct),\n        fill: false,\n        borderColor: colors.cyanDot,\n        pointBackgroundColor: colors.cyanDot,\n        showLine: false,\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg_pct trailing mean',\n        fill: false,\n        borderColor: colors.cyanLine,\n        pointBackgroundColor: colors.cyanLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg_pct(filteredDataToShow\n          .map(playerStat => ({ ...playerStat, fg_pct: playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct })), trailingAverage),\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg3_pct',\n        data: filteredDataToShow.map(playerStat => playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct),\n        fill: false,\n        borderColor: colors.blueDot,\n        pointBackgroundColor: colors.blueDot,\n        showLine: false,\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'fg3_pct trailing mean',\n        fill: false,\n        borderColor: colors.blueLine,\n        pointBackgroundColor: colors.blueLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3_pct(filteredDataToShow\n          .map(playerStat => ({ ...playerStat, fg3_pct: playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct })), trailingAverage),\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'ft_pct',\n        data: filteredDataToShow.map(playerStat => playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct),\n        fill: false,\n        borderColor: colors.purpleDot,\n        pointBackgroundColor: colors.purpleDot,\n        showLine: false,\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'ft_pct trailing mean',\n        fill: false,\n        borderColor: colors.purpleLine,\n        pointBackgroundColor: colors.purpleLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ft_pct(filteredDataToShow\n          .map(playerStat => ({\n            ...playerStat,\n            ft_pct: (playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct)\n          })), trailingAverage),\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'fga',\n        data: filteredDataToShow.map(playerStat => playerStat.fga),\n        fill: false,\n        borderColor: colors.magentaDot,\n        pointBackgroundColor: colors.magentaDot,\n        showLine: false,\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fga trailing mean',\n        fill: false,\n        borderColor: colors.magentaLine,\n        pointBackgroundColor: colors.magentaLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fga(filteredDataToShow, trailingAverage),\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fgm',\n        data: filteredDataToShow.map(playerStat => playerStat.fgm),\n        fill: false,\n        borderColor: colors.greyDot,\n        pointBackgroundColor: colors.greyDot,\n        showLine: false,\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fgm trailing mean',\n        fill: false,\n        borderColor: colors.greyLine,\n        pointBackgroundColor: colors.greyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fgm(filteredDataToShow, trailingAverage),\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fg3a',\n        data: filteredDataToShow.map(playerStat => playerStat.fg3a),\n        fill: false,\n        borderColor: colors.pinkDot,\n        pointBackgroundColor: colors.pinkDot,\n        showLine: false,\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3a trailing mean',\n        fill: false,\n        borderColor: colors.pinkLine,\n        pointBackgroundColor: colors.pinkLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3a(filteredDataToShow, trailingAverage),\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3m',\n        data: filteredDataToShow.map(playerStat => playerStat.fg3m),\n        fill: false,\n        borderColor: colors.apricotDot,\n        pointBackgroundColor: colors.apricotDot,\n        showLine: false,\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fg3m trailing mean',\n        fill: false,\n        borderColor: colors.apricotLine,\n        pointBackgroundColor: colors.apricotLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3m(filteredDataToShow, trailingAverage),\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fta',\n        data: filteredDataToShow.map(playerStat => playerStat.fta),\n        fill: false,\n        borderColor: colors.beigeDot,\n        pointBackgroundColor: colors.beigeDot,\n        showLine: false,\n        hidden: !ftaSelected\n      },\n      {\n        label: 'fta trailing mean',\n        fill: false,\n        borderColor: colors.beigeLine,\n        pointBackgroundColor: colors.beigeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fta(filteredDataToShow, trailingAverage),\n        hidden: !ftaSelected\n      },\n      {\n        label: 'ftm',\n        data: filteredDataToShow.map(playerStat => playerStat.ftm),\n        fill: false,\n        borderColor: colors.mintDot,\n        pointBackgroundColor: colors.mintDot,\n        showLine: false,\n        hidden: !ftmSelected\n      },\n      {\n        label: 'ftm trailing mean',\n        fill: false,\n        borderColor: colors.mintLine,\n        pointBackgroundColor: colors.mintLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ftm(filteredDataToShow, trailingAverage),\n        hidden: !ftmSelected\n      },\n    ],\n  }\n\n  return (\n    <div>\n      <Container style={{ color: 'white', paddingLeft: '30px' }}>\n        <Row style={{ textAlign: 'center' }}>\n          {fetchingData\n            ? <Col>\n              <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n              <br></br>\n            </Col>\n            : <>\n              <Col>\n                {games !== 0\n                  ? <div>\n                    {playerStats[0].player.first_name} {playerStats[0].player.last_name}, {startSeasonToShow} - {endSeasonToShow}, {games} games\n                    </div>\n                  : <div>\n                    {playerStats[0].player.first_name} {playerStats[0].player.last_name}, {games} games\n                  </div>}\n              </Col>\n            </>}\n        </Row>\n      </Container>\n      <div className='chart'>\n        <Line\n          data={data}\n          options={options}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default PlayerStats","import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/stats'\nconst baseUrlDB = '/api/statsdb/statsfromdb'\nconst baseUrlDBTeam = '/api/statsdb/teamstatsfromdb'\nconst baseUrlDBPlayerStatsForASeason = '/api/statsdb/playerstatsforaseasonfromdb'\nconst baseUrlDBSummaryStatsForASeason = '/api/statsdb/summarystatsforaseasonfromdb'\n\nconst getPlayerStatsFromApi = async (seasons, playerId) => {\n  let seasonsVariable = ''\n  for (let i = 0; i < seasons.length; i++) {\n    seasonsVariable += '&seasons[]='\n    seasonsVariable += seasons[i]\n  }\n  const playerStats = await axios.get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100`)\n  const totalPages = playerStats.data.meta.total_pages\n  console.log('totalPages', totalPages)\n\n  let playerStatsAllPages = []\n\n  for (let page = 1; page <= totalPages; page++) {\n    console.log('getting stats from page', page)\n    const playerStatsOnePage = await axios\n      .get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100&page=${page}`)\n    playerStatsAllPages = playerStatsAllPages.concat(playerStatsOnePage.data.data)\n  }\n  console.log(playerStatsAllPages)\n  return playerStatsAllPages\n}\n\nconst getPlayerStatsFromDB = async (playerId) => {\n  const playerStats = await axios.get(`${baseUrlDB}/${playerId}`)\n  return playerStats\n}\n\nconst getTeamStatsFromDB = async (teamApiId, season) => {\n  const playerStats = await axios.get(`${baseUrlDBTeam}/${teamApiId}/${season}`)\n  return playerStats\n}\n\nconst getPlayerStatsFromDBForASeason = async (playerId, season) => {\n  const playerStats = await axios.get(`${baseUrlDBPlayerStatsForASeason}/${playerId}/${season}`)\n  return playerStats\n}\n\nconst getSummaryStatsFromDBForASeason = async (season) => {\n  const playerStats = await axios.get(`${baseUrlDBSummaryStatsForASeason}/${season}`)\n  return playerStats\n}\n\nconst playerStatService = {\n  getPlayerStatsFromApi,\n  getPlayerStatsFromDB,\n  getTeamStatsFromDB,\n  getPlayerStatsFromDBForASeason,\n  getSummaryStatsFromDBForASeason\n}\n\nexport default playerStatService\n","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n//import { useHistory } from 'react-router-dom'\n\nconst SelectPlayer = ({ players, setSelectedPlayer, setPlayerStats, setFetchingData }) => {\n\n  //const history = useHistory()\n  const playerSelect = players.map(player => ({ label: player.fullName, value: player.fullName }))\n\n  const handleSelectedPlayerChange = (playerFullName) => {\n    setSelectedPlayer(playerFullName)\n    getPlayerStats(playerFullName)\n  }\n\n  const getPlayerStats = (playerFullName) => {\n    setFetchingData(true)\n    const searchedPlayer = players.find(player => player.fullName === playerFullName)\n    //console.log('searched player', searchedPlayer)\n    playerStatService.getPlayerStatsFromDB(searchedPlayer.apiId, playerFullName)\n      .then((response) => {\n        //history.push(`/players/${playerFullName}`)\n        setPlayerStats(response.data.sort((a, b) =>\n          new Date(a.game.date).getTime() - new Date(b.game.date).getTime())\n        )\n        setFetchingData(false)\n      })\n\n  }\n  return (\n    <div>\n      <Select\n        options={playerSelect}\n        onChange={(option) => handleSelectedPlayerChange(option.value)}\n        placeholder='Select player'\n      />\n    </div>\n  )\n}\n\nexport default SelectPlayer","import Select from 'react-select'\nimport { /* Container,  */Row, Col } from 'react-bootstrap'\n\nconst SelectSeasons = ({\n  selectedFirstSeason,\n  selectedLastSeason,\n  setSelectedFirstSeason,\n  setSelectedLastSeason\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  let seasonAscending = 1979\n  const seasonSelectAscending = []\n  while (seasonAscending <= 2020) {\n    seasonSelectAscending.push({ label: seasonAscending.toString(), value: seasonAscending.toString() })\n    seasonAscending++\n  }\n\n  const handleSelectedFirstSeasonChange = (event) => {\n    console.log('event.value:', event.value)\n    console.log('Number(event.value):', Number(event.value))\n    console.log('selectedLastSeason:', selectedLastSeason)\n    if (Number(event.value) > selectedLastSeason) {\n      setSelectedFirstSeason(selectedLastSeason)\n      setSelectedLastSeason(Number(event.value))\n    } else {\n      setSelectedFirstSeason(Number(event.value))\n    }\n  }\n\n  const handleSelectedLastSeasonChange = (event) => {\n    if (Number(event.value) < selectedFirstSeason) {\n      setSelectedLastSeason(selectedFirstSeason)\n      setSelectedFirstSeason(Number(event.value))\n    } else {\n      setSelectedLastSeason(Number(event.value))\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Col sm={4}></Col>\n        <Col sm={4}>\n          <Select\n            options={seasonSelectAscending}\n            /* onChange={(event) => setSelectedFirstSeason(event.value)} */\n            onChange={(event) => handleSelectedFirstSeasonChange(event)}\n            closeMenuOnSelect={true}\n            placeholder={selectedFirstSeason.toString()}\n          />\n        </Col>\n        <Col sm={4}></Col>\n      </Row>\n      <Row>\n        <Col sm={4}></Col>\n        <Col sm={4}>\n          <Select\n            options={seasonSelectDescending}\n            /* onChange={(event) => setSelectedLastSeason(event.value)} */\n            onChange={(event) => handleSelectedLastSeasonChange(event)}\n            closeMenuOnSelect={true}\n            placeholder={selectedLastSeason}\n          />\n        </Col>\n        <Col sm={4}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default SelectSeasons","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectRegularPost","import { Form } from 'react-bootstrap'\nimport React from 'react'\nimport colors from '../../styling/colors'\n//import { AllCheckerCheckbox, Checkbox, CheckboxGroup } from '@createnl/grouped-checkboxes'\n\nconst SelectStats = (\n  {\n    ptsSelected,\n    setPtsSelected,\n    astSelected,\n    setAstSelected,\n    rebSelected,\n    setRebSelected,\n    drebSelected,\n    setDrebSelected,\n    orebSelected,\n    setOrebSelected,\n    blkSelected,\n    setBlkSelected,\n    stlSelected,\n    setStlSelected,\n    turnoverSelected,\n    setTurnoverSelected,\n    fgaSelected,\n    setFgaSelected,\n    fgmSelected,\n    setFgmSelected,\n    fg_pctSelected,\n    setFg_pctSelected,\n    fg3aSelected,\n    setFg3aSelected,\n    fg3mSelected,\n    setFg3mSelected,\n    fg3_pctSelected,\n    setFg3_pctSelected,\n    ftaSelected,\n    setFtaSelected,\n    ftmSelected,\n    setFtmSelected,\n    ft_pctSelected,\n    setFt_pctSelected,\n    pfSelected,\n    minSelected,\n    setMinSelected,\n    setPfSelected\n  }\n) => {\n\n  const cellWidth = 100\n\n  return (\n    <div style={{ color: 'white' }}>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.lightGreyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPtsSelected(!ptsSelected)}\n                  type=\"checkbox\"\n                  label=\"pts\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.brownLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setAstSelected(!astSelected)}\n                  type=\"checkbox\"\n                  label=\"ast\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.oliveLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setRebSelected(!rebSelected)}\n                  type=\"checkbox\"\n                  label=\"reb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.tealLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setBlkSelected(!blkSelected)}\n                  type=\"checkbox\"\n                  label=\"blk\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.navyLine/* , color:'black' */ }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setStlSelected(!stlSelected)}\n                  type=\"checkbox\"\n                  label=\"stl\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.redLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setTurnoverSelected(!turnoverSelected)}\n                  type=\"checkbox\"\n                  label=\"to\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.yellowLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPfSelected(!pfSelected)}\n                  type=\"checkbox\"\n                  label=\"pf\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.orangeLine }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setMinSelected(!minSelected)}\n                  type=\"checkbox\"\n                  label=\"min\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.cyanLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg_pctSelected(!fg_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.magentaLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgaSelected(!fgaSelected)}\n                  type=\"checkbox\"\n                  label=\"fga\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgmSelected(!fgmSelected)}\n                  type=\"checkbox\"\n                  label=\"fgm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.blueLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3_pctSelected(!fg3_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.pinkLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3aSelected(!fg3aSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3a\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.apricotLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3mSelected(!fg3mSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3m\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.purpleLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFt_pctSelected(!ft_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"ft_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.beigeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtaSelected(!ftaSelected)}\n                  type=\"checkbox\"\n                  label=\"fta\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.mintLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtmSelected(!ftmSelected)}\n                  type=\"checkbox\"\n                  label=\"ftm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.limeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setDrebSelected(!drebSelected)}\n                  type=\"checkbox\"\n                  label=\"dreb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greenLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setOrebSelected(!orebSelected)}\n                  type=\"checkbox\"\n                  label=\"oreb\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      <br></br>\n      {/* test to check that the states change correctly */}\n      {/* <p>pts: {ptsSelected.toString()}</p>\n      <p>ast:{astSelected.toString()}</p>\n      <p>reb:{rebSelected.toString()}</p>\n      <p>blk:{blkSelected.toString()}</p>\n      <p>stl:{stlSelected.toString()}</p>\n      <p>turnover:{turnoverSelected.toString()}</p>\n      <p>min:{minSelected.toString()}</p>\n      <p>pf:{pfSelected.toString()}</p>\n      <br></br>\n      <p>dreb:{drebSelected.toString()}</p>\n      <p>oreb:{orebSelected.toString()}</p>\n      <br></br>\n      <p>fg_pct:{fg_pctSelected.toString()}</p>\n      <p>fg3_pct:{fg3_pctSelected.toString()}</p>\n      <p>ft_pct:{ft_pctSelected.toString()}</p>\n      <br></br>\n      <p>fga:{fgaSelected.toString()}</p>\n      <p>fgm:{fgmSelected.toString()}</p>\n      <p>fg3a:{fg3aSelected.toString()}</p>\n      <p>fg3m:{fg3mSelected.toString()}</p>\n      <p>fta:{ftaSelected.toString()}</p>\n      <p>ftm:{ftmSelected.toString()}</p> */}\n    </div>\n  )\n}\n\nexport default SelectStats","\nconst DescriptionPlayers = () => {\n  return (\n    <div style={{color:'white', textAlign:'left',}}>\n      <br></br>\n      <br></br>\n      <p>This page shows player stats throughout his career in line chart form.\n        You can select the stats, seasons, regular or post season, and how many\n        games are counted into the trailing average.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionPlayers\n","export default __webpack_public_path__ + \"static/media/ball_logov6.16f028e6.png\";","//import ball_logo from '../../images/ball_logov6.png'\nimport ball_logo from '../../images/ball_logov6.png'\n\nconst Logo = () => {\n\n  const logoSize = '150px'\n\n  return (\n    <img\n      /* class=\"card-img-top mb-3 w-auto\" */\n      src={ball_logo}\n      alt='ball_logo'\n      style={{\n        width: logoSize,\n        height: logoSize\n      }} />\n\n  )\n}\n\nexport default Logo","const Title = () => {\n\n  return (\n    <>\n      <div style={{ color: 'white' }}>\n        <h2>BBALLCHART</h2>\n      </div>\n    </>\n  )\n}\n\nexport default Title","const Description = () => {\n\n  return (\n    <>\n      <div style={{ color: 'white' }}>\n        <h5>Visualizing NBA stats</h5>\n      </div>\n    </>\n  )\n}\n\nexport default Description","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectTrailingAverage = ({ setTrailingAverage }) => {\n\n  const [radioValue, setRadioValue] = useState('25');\n\n  const radios = [\n    { name: '5', value: '5' },\n    { name: '10', value: '10' },\n    { name: '25', value: '25' },\n    { name: '50', value: '50' },\n    { name: '100', value: '100' },\n  ];\n\n  const handleRegularPostChange = (e) => {\n    /* if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    } */\n    setRadioValue(e.currentTarget.value)\n    setTrailingAverage(Number(e.currentTarget.value))\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectTrailingAverage","import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport PlayerStats from './PlayerStats'\nimport SelectPlayer from './SelectPlayer'\nimport SelectSeasons from './SelectSeasons'\nimport SelectRegularPost from './SelectRegularPost'\nimport SelectStats from './SelectStats'\nimport DescriptionPlayers from './DescriptionPlayers'\nimport Logo from '../common/Logo'\nimport Title from '../common/Title'\nimport Description from '../common/Description'\nimport SelectTrailingAverage from './SelectTrailingAverage'\nimport Loader from 'react-loader-spinner'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\n\nconst Players = ({ fetchingData, setFetchingData, players, setPlayers, teams }) => {\n\n  const [playerStats, setPlayerStats] = useState([])\n  const [selectedPlayer, setSelectedPlayer] = useState('')\n  const [selectedFirstSeason, setSelectedFirstSeason] = useState(1979)\n  const [selectedLastSeason, setSelectedLastSeason] = useState(2020)\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(false)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [ptsSelected, setPtsSelected] = useState(false)\n  const [astSelected, setAstSelected] = useState(false)\n  const [rebSelected, setRebSelected] = useState(false)\n  const [drebSelected, setDrebSelected] = useState(false)\n  const [orebSelected, setOrebSelected] = useState(false)\n  const [blkSelected, setBlkSelected] = useState(false)\n  const [stlSelected, setStlSelected] = useState(false)\n  const [turnoverSelected, setTurnoverSelected] = useState(false)\n  const [fgaSelected, setFgaSelected] = useState(false)\n  const [fgmSelected, setFgmSelected] = useState(false)\n  const [fg_pctSelected, setFg_pctSelected] = useState(false)\n  const [fg3aSelected, setFg3aSelected] = useState(false)\n  const [fg3mSelected, setFg3mSelected] = useState(false)\n  const [fg3_pctSelected, setFg3_pctSelected] = useState(false)\n  const [ftaSelected, setFtaSelected] = useState(false)\n  const [ftmSelected, setFtmSelected] = useState(false)\n  const [ft_pctSelected, setFt_pctSelected] = useState(false)\n  const [pfSelected, setPfSelected] = useState(false)\n  const [minSelected, setMinSelected] = useState(false)\n  const [trailingAverage, setTrailingAverage] = useState(25)\n\n  useEffect(() => {\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  return (\n    <>\n      <Row>\n        <Col sm={4}></Col>\n        <Col sm={4}>\n          <SelectPlayer\n            players={players}\n            setSelectedPlayer={setSelectedPlayer}\n            setPlayerStats={setPlayerStats}\n            fetchingData={fetchingData}\n            setFetchingData={setFetchingData}\n          />\n        </Col>\n        <Col sm={4}></Col>\n      </Row>\n      {selectedPlayer !== ''\n        ? <>\n          <SelectSeasons\n            setSelectedFirstSeason={setSelectedFirstSeason}\n            setSelectedLastSeason={setSelectedLastSeason}\n            selectedFirstSeason={selectedFirstSeason}\n            selectedLastSeason={selectedLastSeason}\n          />\n        </>\n        : <></>}\n      <br></br>\n      {playerStats.length === 0 && !fetchingData\n        ? <>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={5} xs={1}></Col>\n            <Col sm={2} xs={10}>\n              <br></br>\n              <Logo />\n            </Col>\n            <Col sm={5} xs={1}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Title />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Description />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <DescriptionPlayers />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n        </>\n        : <></>}\n      <Row style={{ textAlign: 'center' }}>\n        <Col sm={5} xs={4}></Col>\n        <Col sm={2} xs={4}>\n          {fetchingData && playerStats.length === 0\n            ? <>\n              <br></br>\n              <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n              <br></br>\n              <br></br>\n            </>\n            : <></>}\n        </Col>\n        <Col sm={5} xs={4}></Col>\n      </Row>\n      {selectedPlayer !== ''\n        ? <>\n          <Row className=\"justify-content-md-center\">\n            <Col>\n              {playerStats.length > 0\n                ? <PlayerStats\n                  playerStats={playerStats}\n                  teams={teams}\n                  regularSeasonSelected={regularSeasonSelected}\n                  postSeasonSelected={postSeasonSelected}\n                  ptsSelected={ptsSelected}\n                  astSelected={astSelected}\n                  rebSelected={rebSelected}\n                  drebSelected={drebSelected}\n                  orebSelected={orebSelected}\n                  blkSelected={blkSelected}\n                  stlSelected={stlSelected}\n                  turnoverSelected={turnoverSelected}\n                  fgaSelected={fgaSelected}\n                  fgmSelected={fgmSelected}\n                  fg_pctSelected={fg_pctSelected}\n                  fg3aSelected={fg3aSelected}\n                  fg3mSelected={fg3mSelected}\n                  fg3_pctSelected={fg3_pctSelected}\n                  ftaSelected={ftaSelected}\n                  ftmSelected={ftmSelected}\n                  ft_pctSelected={ft_pctSelected}\n                  pfSelected={pfSelected}\n                  minSelected={minSelected}\n                  selectedFirstSeason={selectedFirstSeason}\n                  selectedLastSeason={selectedLastSeason}\n                  fetchingData={fetchingData}\n                  trailingAverage={trailingAverage}\n                />\n                : <></>}</Col>\n          </Row>\n          <br></br>\n          <Row >\n            <Col sm={4} ></Col>\n            <Col sm={4} >\n              <SelectStats\n                ptsSelected={ptsSelected}\n                setPtsSelected={setPtsSelected}\n                astSelected={astSelected}\n                setAstSelected={setAstSelected}\n                rebSelected={rebSelected}\n                setRebSelected={setRebSelected}\n                drebSelected={drebSelected}\n                setDrebSelected={setDrebSelected}\n                orebSelected={orebSelected}\n                setOrebSelected={setOrebSelected}\n                blkSelected={blkSelected}\n                setBlkSelected={setBlkSelected}\n                stlSelected={stlSelected}\n                setStlSelected={setStlSelected}\n                turnoverSelected={turnoverSelected}\n                setTurnoverSelected={setTurnoverSelected}\n                fgaSelected={fgaSelected}\n                setFgaSelected={setFgaSelected}\n                fgmSelected={fgmSelected}\n                setFgmSelected={setFgmSelected}\n                fg_pctSelected={fg_pctSelected}\n                setFg_pctSelected={setFg_pctSelected}\n                fg3aSelected={fg3aSelected}\n                setFg3aSelected={setFg3aSelected}\n                fg3mSelected={fg3mSelected}\n                setFg3mSelected={setFg3mSelected}\n                fg3_pctSelected={fg3_pctSelected}\n                setFg3_pctSelected={setFg3_pctSelected}\n                ftaSelected={ftaSelected}\n                setFtaSelected={setFtaSelected}\n                ftmSelected={ftmSelected}\n                setFtmSelected={setFtmSelected}\n                ft_pctSelected={ft_pctSelected}\n                setFt_pctSelected={setFt_pctSelected}\n                pfSelected={pfSelected}\n                setPfSelected={setPfSelected}\n                minSelected={minSelected}\n                setMinSelected={setMinSelected} />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n          <Row>\n            <Col sm={4}></Col>\n            <Col sm={4}>\n              <div style={{ color: 'white' }}>trailing average</div>\n              <SelectTrailingAverage\n                setTrailingAverage={setTrailingAverage} />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n          <br></br>\n          <Row>\n            <Col sm={4}></Col>\n            <Col sm={4}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n        </>\n        : <></>}\n    </>\n  )\n}\n\nexport default Players","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\nconst SelectTeam = ({ teams, setSelectedTeam, setTeamStats, setFetchingData, selectedSeason }) => {\n\n  //const playerSelect = players.map(player => ({ label: player.fullName, value: player.fullName }))\n\n  const teamSelect = teams.map(team => ({ label: `${team.city} ${team.name}`, value: team.name }))\n\n  const handleSelectedTeamChange = (teamName) => {\n    setSelectedTeam(teamName)\n    getTeamStats(teamName)\n  }\n\n  const getTeamStats = (teamName) => {\n    setFetchingData(true)\n    const searchedTeam = teams.find(team => team.name === teamName)\n    playerStatService.getTeamStatsFromDB(searchedTeam.apiId, selectedSeason)\n      .then((response) => {\n        setTeamStats(response.data.sort((a, b) =>\n          new Date(a.game.date).getTime() - new Date(b.game.date).getTime())\n        )\n        setFetchingData(false)\n      })\n\n  }\n  return (\n    <div>\n      <Select\n        options={teamSelect}\n        onChange={(option) => handleSelectedTeamChange(option.value)}\n        placeholder='Select team'\n      />\n    </div>\n  )\n}\n\nexport default SelectTeam","import colors from '../styling/colors'\n\nconst backgroundColor =\n  [\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n  ]\n\n\n// Pct //////////////////////////////////////////////////////////\nconst fgPct = (stats, playerAmount) => {\n  const dataFgPct = {\n    labels: stats\n      .filter(stat => stat.fga_total >= 50)\n      .sort((a, b) => b.fg_pct - a.fg_pct)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg %',\n      data: stats\n        .filter(stat => stat.fga_total >= 50)\n        .sort((a, b) => b.fg_pct - a.fg_pct)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg_pct),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataFgPct\n}\n\nconst fg3Pct = (stats, playerAmount) => {\n  const dataFg3Pct = {\n    labels: stats\n      .filter(stat => stat.fg3a_total >= 50)\n      .sort((a, b) => b.fg3_pct - a.fg3_pct)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3 %',\n      data: stats\n        .filter(stat => stat.fg3a_total >= 50)\n        .sort((a, b) => b.fg3_pct - a.fg3_pct)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3_pct),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataFg3Pct\n}\n\nconst ftPct = (stats, playerAmount) => {\n  const dataFtPct = {\n    labels: stats\n      .filter(stat => stat.fta_total >= 50)\n      .sort((a, b) => b.ft_pct - a.ft_pct)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Ft %',\n      data: stats\n        .filter(stat => stat.fta_total >= 50)\n        .sort((a, b) => b.ft_pct - a.ft_pct)\n        .slice(0, playerAmount)\n        .map(stat => stat.ft_pct),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataFtPct\n}\n\n\n\n\n\n// Ast/turnover //////////////////////////////////////////////////////////\nconst astToTurnover = (stats, playerAmount) => {\n  const dataAstToTurnover = {\n    labels: stats\n      .filter(stat => stat.ast_total >= 50)\n      .sort((a, b) => b.ast_to_turnover - a.ast_to_turnover)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Ast/Turnover ratio',\n      data: stats\n        .filter(stat => stat.ast_total >= 50)\n        .sort((a, b) => b.ast_to_turnover - a.ast_to_turnover)\n        .slice(0, playerAmount)\n        .map(stat => stat.ast_to_turnover),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataAstToTurnover\n}\n\n// Total //////////////////////////////////////////////////////////\nconst totalPoints = (stats, playerAmount) => {\n  const dataTotalPoints = {\n    labels: stats\n      .sort((a, b) => b.pts_total - a.pts_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total points',\n      data: stats\n        .sort((a, b) => b.pts_total - a.pts_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.pts_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalPoints\n}\n\nconst totalAssists = (stats, playerAmount) => {\n  const dataTotalAssists = {\n    labels: stats\n      .sort((a, b) => b.ast_total - a.ast_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total assists',\n      data: stats\n        .sort((a, b) => b.ast_total - a.ast_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.ast_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalAssists\n}\n\nconst totalRebounds = (stats, playerAmount) => {\n  const dataTotalRebounds = {\n    labels: stats\n      .sort((a, b) => b.reb_total - a.reb_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total rebounds',\n      data: stats\n        .sort((a, b) => b.reb_total - a.reb_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.reb_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalRebounds\n}\n\nconst totalBlocks = (stats, playerAmount) => {\n  const dataTotalBlocks = {\n    labels: stats\n      .sort((a, b) => b.blk_total - a.blk_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total blocks',\n      data: stats\n        .sort((a, b) => b.blk_total - a.blk_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.blk_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalBlocks\n}\n\nconst totalSteals = (stats, playerAmount) => {\n  const dataTotalSteals = {\n    labels: stats\n      .sort((a, b) => b.stl_total - a.stl_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total steals',\n      data: stats\n        .sort((a, b) => b.stl_total - a.stl_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.stl_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalSteals\n}\n\nconst totalTurnovers = (stats, playerAmount) => {\n  const dataTotalTurnovers = {\n    labels: stats\n      .sort((a, b) => b.turnover_total - a.turnover_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total turnovers',\n      data: stats\n        .sort((a, b) => b.turnover_total - a.turnover_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.turnover_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalTurnovers\n}\n\nconst totalPF = (stats, playerAmount) => {\n  const dataTotalPF = {\n    labels: stats\n      .sort((a, b) => b.pf_total - a.pf_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total personal fouls',\n      data: stats\n        .sort((a, b) => b.pf_total - a.pf_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.pf_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalPF\n}\n\nconst totalMinutes = (stats, playerAmount) => {\n  const dataTotalMinutes = {\n    labels: stats\n      .sort((a, b) => b.min_total - a.min_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total minutes',\n      data: stats\n        .sort((a, b) => b.min_total - a.min_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.min_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalMinutes\n}\n\nconst totalFga = (stats, playerAmount) => {\n  const dataTotalFga = {\n    labels: stats\n      .sort((a, b) => b.fga_total - a.fga_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fga',\n      data: stats\n        .sort((a, b) => b.fga_total - a.fga_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fga_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFga\n}\n\nconst totalFgm = (stats, playerAmount) => {\n  const dataTotalFgm = {\n    labels: stats\n      .sort((a, b) => b.fgm_total - a.fgm_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fgm',\n      data: stats\n        .sort((a, b) => b.fgm_total - a.fgm_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fgm_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFgm\n}\n\nconst totalFg3a = (stats, playerAmount) => {\n  const dataTotalFg3a = {\n    labels: stats\n      .sort((a, b) => b.fg3a_total - a.fg3a_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fg3a',\n      data: stats\n        .sort((a, b) => b.fg3a_total - a.fg3a_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3a_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3a\n}\n\nconst totalFg3m = (stats, playerAmount) => {\n  const dataTotalFg3m = {\n    labels: stats\n      .sort((a, b) => b.fg3m_total - a.fg3m_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fg3m',\n      data: stats\n        .sort((a, b) => b.fg3m_total - a.fg3m_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3m_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3m\n}\n\nconst totalFta = (stats, playerAmount) => {\n  const dataTotalFta = {\n    labels: stats\n      .sort((a, b) => b.fta_total - a.fta_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fta',\n      data: stats\n        .sort((a, b) => b.fta_total - a.fta_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fta_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFta\n}\n\nconst totalFtm = (stats, playerAmount) => {\n  const dataTotalFtm = {\n    labels: stats\n      .sort((a, b) => b.ftm_total - a.ftm_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total ftm',\n      data: stats\n        .sort((a, b) => b.ftm_total - a.ftm_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.ftm_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFtm\n}\n\n// Per game //////////////////////////////////////////////////////////\nconst perGamePoints = (stats, playerAmount) => {\n  const dataPerGamePoints = {\n    labels: stats\n      .sort((a, b) => b.pts_pergame - a.pts_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Points per game',\n      data: stats\n        .sort((a, b) => b.pts_pergame - a.pts_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.pts_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGamePoints\n}\n\nconst perGameAssists = (stats, playerAmount) => {\n  const dataPerGameAssists = {\n    labels: stats\n      .sort((a, b) => b.ast_pergame - a.ast_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Assists per game',\n      data: stats\n        .sort((a, b) => b.ast_pergame - a.ast_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.ast_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameAssists\n}\n\nconst perGameRebounds = (stats, playerAmount) => {\n  const dataPerGameRebounds = {\n    labels: stats\n      .sort((a, b) => b.reb_pergame - a.reb_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Rebounds per game',\n      data: stats\n        .sort((a, b) => b.reb_pergame - a.reb_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.reb_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameRebounds\n}\n\nconst perGameBlock = (stats, playerAmount) => {\n  const dataPerGameBlocks = {\n    labels: stats\n      .sort((a, b) => b.blk_pergame - a.blk_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Blocks per game',\n      data: stats\n        .sort((a, b) => b.blk_pergame - a.blk_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.blk_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameBlocks\n}\n\nconst perGameSteals = (stats, playerAmount) => {\n  const dataPerGameSteals = {\n    labels: stats\n      .sort((a, b) => b.stl_pergame - a.stl_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Steals per game',\n      data: stats\n        .sort((a, b) => b.stl_pergame - a.stl_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.stl_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameSteals\n}\n\nconst perGameTurnovers = (stats, playerAmount) => {\n  const dataPerGameTurnovers = {\n    labels: stats\n      .sort((a, b) => b.turnover_pergame - a.turnover_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Turnovers per game',\n      data: stats\n        .sort((a, b) => b.turnover_pergame - a.turnover_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.turnover_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameTurnovers\n}\n\nconst perGamePF = (stats, playerAmount) => {\n  const dataPerGamePF = {\n    labels: stats\n      .sort((a, b) => b.pf_pergame - a.pf_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Personal fouls per game',\n      data: stats\n        .sort((a, b) => b.pf_pergame - a.pf_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.pf_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGamePF\n}\n\nconst perGameMinutes = (stats, playerAmount) => {\n  const dataPerGameMinutes = {\n    labels: stats\n      .sort((a, b) => b.min_pergame - a.min_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Minutes per game',\n      data: stats\n        .sort((a, b) => b.min_pergame - a.min_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.min_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameMinutes\n}\n\nconst perGameFga = (stats, playerAmount) => {\n  const dataTotalFga = {\n    labels: stats\n      .sort((a, b) => b.fga_pergame - a.fga_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fga per game',\n      data: stats\n        .sort((a, b) => b.fga_pergame - a.fga_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fga_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFga\n}\n\nconst perGameFgm = (stats, playerAmount) => {\n  const dataTotalFgm = {\n    labels: stats\n      .sort((a, b) => b.fgm_pergame - a.fgm_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fgm per game',\n      data: stats\n        .sort((a, b) => b.fgm_pergame - a.fgm_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fgm_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFgm\n}\n\nconst perGameFg3a = (stats, playerAmount) => {\n  const dataTotalFg3a = {\n    labels: stats\n      .sort((a, b) => b.fg3a_pergame - a.fg3a_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3a per game',\n      data: stats\n        .sort((a, b) => b.fg3a_pergame - a.fg3a_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3a_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3a\n}\n\nconst perGameFg3m = (stats, playerAmount) => {\n  const dataTotalFg3m = {\n    labels: stats\n      .sort((a, b) => b.fg3m_pergame - a.fg3m_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3m per game',\n      data: stats\n        .sort((a, b) => b.fg3m_pergame - a.fg3m_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3m_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3m\n}\n\nconst perGameFta = (stats, playerAmount) => {\n  const dataTotalFta = {\n    labels: stats\n      .sort((a, b) => b.fta_pergame - a.fta_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fta per game',\n      data: stats\n        .sort((a, b) => b.fta_pergame - a.fta_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fta_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFta\n}\n\nconst perGameFtm = (stats, playerAmount) => {\n  const dataTotalFtm = {\n    labels: stats\n      .sort((a, b) => b.ftm_pergame - a.ftm_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Ftm per game',\n      data: stats\n        .sort((a, b) => b.ftm_pergame - a.ftm_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.ftm_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFtm\n}\n\n// Per 36 minutes //////////////////////////////////////////////////////////\nconst per36Points = (stats, playerAmount) => {\n  const dataPer36Points = {\n    labels: stats\n      .sort((a, b) => b.pts_per36 - a.pts_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Points per 36 min',\n      data: stats\n        .sort((a, b) => b.pts_per36 - a.pts_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.pts_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Points\n}\n\nconst per36Assists = (stats, playerAmount) => {\n  const dataPer36Assists = {\n    labels: stats\n      .sort((a, b) => b.ast_per36 - a.ast_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Assists per 36 min',\n      data: stats\n        .sort((a, b) => b.ast_per36 - a.ast_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.ast_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Assists\n}\n\nconst per36Rebounds = (stats, playerAmount) => {\n  const dataPer36Rebounds = {\n    labels: stats\n      .sort((a, b) => b.reb_per36 - a.reb_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Rebounds per 36 min',\n      data: stats\n        .sort((a, b) => b.reb_per36 - a.reb_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.reb_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Rebounds\n}\n\nconst per36Blocks = (stats, playerAmount) => {\n  const dataPer36Blocks = {\n    labels: stats\n      .sort((a, b) => b.blk_per36 - a.blk_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Blocks per 36 min',\n      data: stats\n        .sort((a, b) => b.blk_per36 - a.blk_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.blk_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Blocks\n}\n\nconst per36Steals = (stats, playerAmount) => {\n  const dataPer36Steals = {\n    labels: stats\n      .sort((a, b) => b.stl_per36 - a.stl_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Steals per 36 min',\n      data: stats\n        .sort((a, b) => b.stl_per36 - a.stl_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.stl_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Steals\n}\n\nconst per36Turnovers = (stats, playerAmount) => {\n  const dataPer36Turnovers = {\n    labels: stats\n      .sort((a, b) => b.turnover_per36 - a.turnover_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Turnovers per 36 min',\n      data: stats\n        .sort((a, b) => b.turnover_per36 - a.turnover_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.turnover_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Turnovers\n}\n\nconst per36PF = (stats, playerAmount) => {\n  const dataPer36PF = {\n    labels: stats\n      .sort((a, b) => b.pf_per36 - a.pf_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Personal fouls per 36 min',\n      data: stats\n        .sort((a, b) => b.pf_per36 - a.pf_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.pf_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36PF\n}\n\nconst per36Fga = (stats, playerAmount) => {\n  const dataTotalFga = {\n    labels: stats\n      .sort((a, b) => b.fga_per36 - a.fga_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fga per game',\n      data: stats\n        .sort((a, b) => b.fga_per36 - a.fga_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fga_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFga\n}\n\nconst per36Fgm = (stats, playerAmount) => {\n  const dataTotalFgm = {\n    labels: stats\n      .sort((a, b) => b.fgm_per36 - a.fgm_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fgm per game',\n      data: stats\n        .sort((a, b) => b.fgm_per36 - a.fgm_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fgm_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFgm\n}\n\nconst per36Fg3a = (stats, playerAmount) => {\n  const dataTotalFg3a = {\n    labels: stats\n      .sort((a, b) => b.fg3a_per36 - a.fg3a_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3a per game',\n      data: stats\n        .sort((a, b) => b.fg3a_per36 - a.fg3a_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3a_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3a\n}\n\nconst per36Fg3m = (stats, playerAmount) => {\n  const dataTotalFg3m = {\n    labels: stats\n      .sort((a, b) => b.fg3m_per36 - a.fg3m_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3m per game',\n      data: stats\n        .sort((a, b) => b.fg3m_per36 - a.fg3m_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3m_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3m\n}\n\nconst per36Fta = (stats, playerAmount) => {\n  const dataTotalFta = {\n    labels: stats\n      .sort((a, b) => b.fta_per36 - a.fta_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fta per game',\n      data: stats\n        .sort((a, b) => b.fta_per36 - a.fta_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fta_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFta\n}\n\nconst per36Ftm = (stats, playerAmount) => {\n  const dataTotalFtm = {\n    labels: stats\n      .sort((a, b) => b.ftm_per36 - a.ftm_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Ftm per game',\n      data: stats\n        .sort((a, b) => b.ftm_per36 - a.ftm_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.ftm_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFtm\n}\n\nconst barChartDataService = {\n  fgPct,\n  fg3Pct,\n  ftPct,\n  totalPoints,\n  totalAssists,\n  totalRebounds,\n  totalBlocks,\n  totalSteals,\n  totalTurnovers,\n  totalPF,\n  totalMinutes,\n  totalFga,\n  totalFgm,\n  totalFg3a,\n  totalFg3m,\n  totalFta,\n  totalFtm,\n  perGamePoints,\n  perGameAssists,\n  perGameRebounds,\n  perGameBlock,\n  perGameSteals,\n  perGameTurnovers,\n  astToTurnover,\n  perGamePF,\n  perGameMinutes,\n  perGameFga,\n  perGameFgm,\n  perGameFg3a,\n  perGameFg3m,\n  perGameFta,\n  perGameFtm,\n  per36Points,\n  per36Assists,\n  per36Rebounds,\n  per36Blocks,\n  per36Steals,\n  per36Turnovers,\n  per36PF,\n  per36Fga,\n  per36Fgm,\n  per36Fg3a,\n  per36Fg3m,\n  per36Fta,\n  per36Ftm\n}\n\nexport default barChartDataService","\nconst legend = {\n  labels: {\n    fontColor: 'white',\n    fontSize: 12\n  },\n  position: 'right',\n  display: false\n}\n\nconst plugins = {\n  labels: false\n}\n\nconst scales = {\n  yAxes: [{\n    ticks: {\n      beginAtZero: true,\n      fontColor: 'white',\n      fontSize: 14\n    }\n  }],\n  xAxes: [{\n    ticks: {\n      fontColor: 'white',\n      fontSize: 14\n    }\n  }]\n}\n\n\n// Options pct //////////////////////////////////////////////////////////////////\nconst fgPct = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg %, min 50 fgm',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst fg3Pct = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3 %, min 50 fg3m',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst ftPct = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Ft %, min 50 ftm',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\n// Options ast/turnover //////////////////////////////////////////////////////////////////\nconst astToTurnover = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Assists to turnovers, min 50 assists',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\n// Options total //////////////////////////////////////////////////////////////////\nconst totalPoints = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total points',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalAssists = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total assists',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalRebounds = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total rebounds',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalBlocks = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total blocks',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalSteals = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total steals',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalTurnovers = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total turnovers',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalPF = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fouls',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalMinutes = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total minutes',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\nconst totalFga = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fga',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFgm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fgm',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFg3a = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fg3a',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFg3m = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fg3m',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFta = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fta',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFtm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total ftm',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\n\n// Options per game //////////////////////////////////////////////////////////////////\nconst perGamePoints = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Points per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameAssists = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Assists per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameRebounds = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Rebounds per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameBlocks = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Blocks per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameSteals = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Steals per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameTurnovers = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Turnovers per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGamePF = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fouls per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameMinutes = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFga = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fga per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFgm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fgm per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFg3a = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3a per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFg3m = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3m per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFta = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fta per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFtm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Ftm per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\n\n// Options per 36 minutes //////////////////////////////////////////////////////////////////\nconst per36Points = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Points per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Assists = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Assists per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Rebounds = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Rebounds per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Blocks = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Blocks per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Steals = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Steals per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Turnovers = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Turnovers per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36PF = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fouls per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fga = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fga per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fgm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fgm per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fg3a = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3a per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fg3m = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3m per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fta = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fta per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Ftm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Ftm per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\nconst barChartOptionsService = {\n  fgPct,\n  fg3Pct,\n  ftPct,\n  totalPoints,\n  totalAssists,\n  totalRebounds,\n  totalBlocks,\n  totalSteals,\n  totalTurnovers,\n  totalPF,\n  totalMinutes,\n  totalFga,\n  totalFgm,\n  totalFg3a,\n  totalFg3m,\n  totalFta,\n  totalFtm,\n  perGamePoints,\n  perGameAssists,\n  perGameRebounds,\n  perGameBlocks,\n  perGameSteals,\n  perGameTurnovers,\n  astToTurnover,\n  perGamePF,\n  perGameMinutes,\n  perGameFga,\n  perGameFgm,\n  perGameFg3a,\n  perGameFg3m,\n  perGameFta,\n  perGameFtm,\n  per36Points,\n  per36Assists,\n  per36Rebounds,\n  per36Blocks,\n  per36Steals,\n  per36Turnovers,\n  per36PF,\n  per36Fga,\n  per36Fgm,\n  per36Fg3a,\n  per36Fg3m,\n  per36Fta,\n  per36Ftm\n}\n\nexport default barChartOptionsService","import React from 'react'\nimport { Row } from 'react-bootstrap'\nimport barChartDataService from '../../services/barChartData'\nimport barChartOptionsService from '../../services/barChartOptions'\nimport { Bar } from 'react-chartjs-2'\n\nconst BarCharts = (\n  {\n    stats,\n    pctSelected,\n    totalSelected,\n    perGameSelected,\n    per36Selected,\n    postSeasonSelected,\n    playerAmount,\n    postSeasonFilteringDone\n  }) => {\n\n  //console.log(topTenStats)\n  let statsFilteredByPostseason = []\n  if (!postSeasonFilteringDone) {\n    statsFilteredByPostseason = stats.filter(stat => stat.postseason === postSeasonSelected)\n  } else {\n    statsFilteredByPostseason = stats\n  }\n\n  //filter out bad data where player is not defined\n  //topTenStatsFiltered = topTenStatsFiltered.filter(topTenStat => topTenStat.player !== undefined)\n\n  //Pct\n  const dataFgPct = barChartDataService.fgPct(statsFilteredByPostseason, playerAmount)\n  const dataFg3Pct = barChartDataService.fg3Pct(statsFilteredByPostseason, playerAmount)\n  const dataFtPct = barChartDataService.ftPct(statsFilteredByPostseason, playerAmount)\n  const optionsFgPct = barChartOptionsService.fgPct\n  const optionsFg3Pct = barChartOptionsService.fg3Pct\n  const optionsFtPct = barChartOptionsService.ftPct\n\n  //Total\n  const dataTotalPoints = barChartDataService.totalPoints(statsFilteredByPostseason, playerAmount)\n  const dataTotalAssists = barChartDataService.totalAssists(statsFilteredByPostseason, playerAmount)\n  const dataTotalRebounds = barChartDataService.totalRebounds(statsFilteredByPostseason, playerAmount)\n  const dataTotalBlocks = barChartDataService.totalBlocks(statsFilteredByPostseason, playerAmount)\n  const dataTotalSteals = barChartDataService.totalSteals(statsFilteredByPostseason, playerAmount)\n  const dataTotalTurnovers = barChartDataService.totalTurnovers(statsFilteredByPostseason, playerAmount)\n  const dataTotalPersonalFouls = barChartDataService.totalPF(statsFilteredByPostseason, playerAmount)\n  const dataTotalMinutes = barChartDataService.totalMinutes(statsFilteredByPostseason, playerAmount)\n  const dataTotalFga = barChartDataService.totalFga(statsFilteredByPostseason, playerAmount)\n  const dataTotalFgm = barChartDataService.totalFgm(statsFilteredByPostseason, playerAmount)\n  const dataTotalFg3a = barChartDataService.totalFg3a(statsFilteredByPostseason, playerAmount)\n  const dataTotalFg3m = barChartDataService.totalFg3m(statsFilteredByPostseason, playerAmount)\n  const dataTotalFta = barChartDataService.totalFta(statsFilteredByPostseason, playerAmount)\n  const dataTotalFtm = barChartDataService.totalFtm(statsFilteredByPostseason, playerAmount)\n  const optionsTotalPoints = barChartOptionsService.totalPoints\n  const optionsTotalAssists = barChartOptionsService.totalAssists\n  const optionsTotalRebounds = barChartOptionsService.totalRebounds\n  const optionsTotalBlocks = barChartOptionsService.totalBlocks\n  const optionsTotalSteals = barChartOptionsService.totalSteals\n  const optionsTotalTurnovers = barChartOptionsService.totalTurnovers\n  const optionsTotalPersonalFouls = barChartOptionsService.totalPF\n  const optionsTotalMinutes = barChartOptionsService.totalMinutes\n  const optionsTotalFga = barChartOptionsService.totalFga\n  const optionsTotalFgm = barChartOptionsService.totalFgm\n  const optionsTotalFg3a = barChartOptionsService.totalFg3a\n  const optionsTotalFg3m = barChartOptionsService.totalFg3m\n  const optionsTotalFta = barChartOptionsService.totalFta\n  const optionsTotalFtm = barChartOptionsService.totalFtm\n\n  //Per game\n  const dataPerGamePoints = barChartDataService.perGamePoints(statsFilteredByPostseason, playerAmount)\n  const dataPerGameAssists = barChartDataService.perGameAssists(statsFilteredByPostseason, playerAmount)\n  const dataPerGameRebounds = barChartDataService.perGameRebounds(statsFilteredByPostseason, playerAmount)\n  const dataPerGameBlocks = barChartDataService.perGameBlock(statsFilteredByPostseason, playerAmount)\n  const dataPerGameSteals = barChartDataService.perGameSteals(statsFilteredByPostseason, playerAmount)\n  const dataPerGameTurnovers = barChartDataService.perGameTurnovers(statsFilteredByPostseason, playerAmount)\n  const dataAstToTurnover = barChartDataService.astToTurnover(statsFilteredByPostseason, playerAmount)\n  const dataPerGamePersonalFouls = barChartDataService.perGamePF(statsFilteredByPostseason, playerAmount)\n  const dataPerGameMinutes = barChartDataService.perGameMinutes(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFga = barChartDataService.perGameFga(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFgm = barChartDataService.perGameFgm(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFg3a = barChartDataService.perGameFg3a(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFg3m = barChartDataService.perGameFg3m(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFta = barChartDataService.perGameFta(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFtm = barChartDataService.perGameFtm(statsFilteredByPostseason, playerAmount)\n  const optionsPerGamePoints = barChartOptionsService.perGamePoints\n  const optionsPerGameAssists = barChartOptionsService.perGameAssists\n  const optionsPerGameRebounds = barChartOptionsService.perGameRebounds\n  const optionsPerGameBlocks = barChartOptionsService.perGameBlocks\n  const optionsPerGameSteals = barChartOptionsService.perGameSteals\n  const optionsPerGameTurnovers = barChartOptionsService.perGameTurnovers\n  const optionsAstToTurnover = barChartOptionsService.astToTurnover\n  const optionsPerGamePersonalFouls = barChartOptionsService.perGamePF\n  const optionsPerGameMinutes = barChartOptionsService.perGameMinutes\n  const optionsPerGameFga = barChartOptionsService.perGameFga\n  const optionsPerGameFgm = barChartOptionsService.perGameFgm\n  const optionsPerGameFg3a = barChartOptionsService.perGameFg3a\n  const optionsPerGameFg3m = barChartOptionsService.perGameFg3m\n  const optionsPerGameFta = barChartOptionsService.perGameFta\n  const optionsPerGameFtm = barChartOptionsService.perGameFtm\n\n\n  //Per 36 minutes\n  const dataPer36Points = barChartDataService.per36Points(statsFilteredByPostseason, playerAmount)\n  const dataPer36Assists = barChartDataService.per36Assists(statsFilteredByPostseason, playerAmount)\n  const dataPer36Rebounds = barChartDataService.per36Rebounds(statsFilteredByPostseason, playerAmount)\n  const dataPer36Blocks = barChartDataService.per36Blocks(statsFilteredByPostseason, playerAmount)\n  const dataPer36Steals = barChartDataService.per36Steals(statsFilteredByPostseason, playerAmount)\n  const dataPer36Turnovers = barChartDataService.per36Turnovers(statsFilteredByPostseason, playerAmount)\n  const dataPer36PersonalFouls = barChartDataService.per36PF(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fga = barChartDataService.per36Fga(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fgm = barChartDataService.per36Fgm(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fg3a = barChartDataService.per36Fg3a(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fg3m = barChartDataService.per36Fg3m(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fta = barChartDataService.per36Fta(statsFilteredByPostseason, playerAmount)\n  const dataPer36Ftm = barChartDataService.per36Ftm(statsFilteredByPostseason, playerAmount)\n  const optionsPer36Points = barChartOptionsService.per36Points\n  const optionsPer36Assists = barChartOptionsService.per36Assists\n  const optionsPer36Rebounds = barChartOptionsService.per36Rebounds\n  const optionsPer36Blocks = barChartOptionsService.per36Blocks\n  const optionsPer36Steals = barChartOptionsService.per36Steals\n  const optionsPer36Turnovers = barChartOptionsService.per36Turnovers\n  const optionsPer36PersonalFouls = barChartOptionsService.per36PF\n  const optionsPer36Fga = barChartOptionsService.per36Fga\n  const optionsPer36Fgm = barChartOptionsService.per36Fgm\n  const optionsPer36Fg3a = barChartOptionsService.per36Fg3a\n  const optionsPer36Fg3m = barChartOptionsService.per36Fg3m\n  const optionsPer36Fta = barChartOptionsService.per36Fta\n  const optionsPer36Ftm = barChartOptionsService.per36Ftm\n\n  return (\n    <div className='chart'>\n      {statsFilteredByPostseason.length > 0 && pctSelected\n        ? <>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataFgPct}\n              options={optionsFgPct}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataFg3Pct}\n              options={optionsFg3Pct}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataFtPct}\n              options={optionsFtPct}\n            />\n          </Row>\n        </>\n        : <></>}\n\n      {statsFilteredByPostseason.length > 0 && totalSelected\n        ? <>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalPoints}\n              options={optionsTotalPoints}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Bar\n              data={dataTotalAssists}\n              options={optionsTotalAssists}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalRebounds}\n              options={optionsTotalRebounds}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Bar\n              data={dataTotalBlocks}\n              options={optionsTotalBlocks}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalSteals}\n              options={optionsTotalSteals}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalTurnovers}\n              options={optionsTotalTurnovers}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalPersonalFouls}\n              options={optionsTotalPersonalFouls}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalMinutes}\n              options={optionsTotalMinutes}\n            />\n          </Row>\n\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFga}\n              options={optionsTotalFga}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFgm}\n              options={optionsTotalFgm}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFg3a}\n              options={optionsTotalFg3a}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFg3m}\n              options={optionsTotalFg3m}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFta}\n              options={optionsTotalFta}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFtm}\n              options={optionsTotalFtm}\n            />\n          </Row>\n        </>\n        : <></>}\n\n\n      {statsFilteredByPostseason.length > 0 && perGameSelected\n        ? <>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGamePoints}\n              options={optionsPerGamePoints}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameAssists}\n              options={optionsPerGameAssists}\n            />\n\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameRebounds}\n              options={optionsPerGameRebounds}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameBlocks}\n              options={optionsPerGameBlocks}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameSteals}\n              options={optionsPerGameSteals}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameTurnovers}\n              options={optionsPerGameTurnovers}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataAstToTurnover}\n              options={optionsAstToTurnover}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGamePersonalFouls}\n              options={optionsPerGamePersonalFouls}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameMinutes}\n              options={optionsPerGameMinutes}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFga}\n              options={optionsPerGameFga}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFgm}\n              options={optionsPerGameFgm}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFg3a}\n              options={optionsPerGameFg3a}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFg3m}\n              options={optionsPerGameFg3m}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFta}\n              options={optionsPerGameFta}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFtm}\n              options={optionsPerGameFtm}\n            />\n          </Row>\n        </>\n        : <></>}\n\n      {statsFilteredByPostseason.length > 0 && per36Selected\n        ? <>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Points}\n              options={optionsPer36Points}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n\n            <Bar\n              data={dataPer36Assists}\n              options={optionsPer36Assists}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Rebounds}\n              options={optionsPer36Rebounds}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Blocks}\n              options={optionsPer36Blocks}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Steals}\n              options={optionsPer36Steals}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Turnovers}\n              options={optionsPer36Turnovers}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36PersonalFouls}\n              options={optionsPer36PersonalFouls}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fga}\n              options={optionsPer36Fga}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fgm}\n              options={optionsPer36Fgm}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fg3a}\n              options={optionsPer36Fg3a}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fg3m}\n              options={optionsPer36Fg3m}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fta}\n              options={optionsPer36Fta}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Ftm}\n              options={optionsPer36Ftm}\n            />\n          </Row>\n        </>\n        : <></>}\n\n\n    </div>\n  )\n}\n\nexport default BarCharts\n","import React from 'react'\nimport BarCharts from '../common/BarCharts'\nimport 'chartjs-plugin-labels'\n\nconst TeamStats = (\n  {\n    teamStats,\n    postSeasonSelected,\n    perGameSelected,\n    totalSelected,\n    per36Selected,\n    pctSelected\n  }\n) => {\n\n  const playerAmount = 20\n\n  //filter out bad data where player is not defined\n  teamStats = teamStats.filter(teamStat => teamStat.player !== undefined)\n\n  let playerTotalStats = []\n\n  teamStats.forEach(teamStat => {\n    const playerFullName = `${teamStat.player.first_name} ${teamStat.player.last_name}`\n    if (playerTotalStats.find(playerTotalStat => playerTotalStat.name === playerFullName) === undefined) {\n      const player = { name: playerFullName }\n      playerTotalStats.push(player)\n    }\n  })\n\n  const teamStatsFiltered = teamStats.filter(teamStat => teamStat.game.postseason === postSeasonSelected)\n\n  playerTotalStats.forEach(playerStat => {\n    let playedGames = 0\n    const playerStatsHelper = teamStatsFiltered\n      .filter(teamStat => `${teamStat.player.first_name} ${teamStat.player.last_name}` === playerStat.name)\n\n    const totalPts = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pts\n    }, 0)\n    const totalAst = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.ast\n    }, 0)\n    const totalReb = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.reb\n    }, 0)\n    const totalStl = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.stl\n    }, 0)\n    const totalBlk = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.blk\n    }, 0)\n    const totalTurnover = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.turnover\n    }, 0)\n    const totalPf = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pf\n    }, 0)\n    const totalMin = playerStatsHelper.reduce((accumulator, currentValue) => {\n      let minutes = 0\n      const timeSplit = currentValue.min.split(':')\n      if (timeSplit.length === 1) {\n        minutes = Number(currentValue.min)\n      } else {\n        const seconds = Number(timeSplit[0]) * 60 + Number(timeSplit[1])\n        //minutes = Math.floor(seconds / 60)\n        minutes = Math.round(seconds / 60 * 10) / 10\n      }\n      if (isNaN(minutes)) {\n        minutes = 0\n      }\n      if (minutes !== 0) {\n        playedGames++\n      }\n      return accumulator + minutes\n    }, 0)\n    const totalFga = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fga\n    }, 0)\n    const totalFgm = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fgm\n    }, 0)\n    const totalFg3a = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fg3a\n    }, 0)\n    const totalFg3m = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fg3m\n    }, 0)\n    const totalFta = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fta\n    }, 0)\n    const totalFtm = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.ftm\n    }, 0)\n    const totalOreb = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.oreb\n    }, 0)\n    const totalDreb = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.dreb\n    }, 0)\n\n    //console.log(playerStat/* .playerId */)\n    let updatedPlayer = {}\n    if (playedGames > 0) {\n      //const updatedPlayer = playerStat\n\n\n      //updatedPlayer.playerId = playerStat.player.id\n      updatedPlayer.name = playerStat.name\n      updatedPlayer.playerId = playerStat.playerId\n      /* updatedPlayer.postseason = postseason\n      updatedPlayer.season = Number(season) */\n\n      updatedPlayer.pts_total = totalPts\n      updatedPlayer.ast_total = totalAst\n      updatedPlayer.reb_total = totalReb\n      updatedPlayer.stl_total = totalStl\n      updatedPlayer.blk_total = totalBlk\n      updatedPlayer.turnover_total = totalTurnover\n      updatedPlayer.pf_total = totalPf\n      updatedPlayer.min_total = Math.floor(totalMin)\n\n      updatedPlayer.fga_total = totalFga\n      updatedPlayer.fgm_total = totalFgm\n      updatedPlayer.fg3a_total = totalFg3a\n      updatedPlayer.fg3m_total = totalFg3m\n      updatedPlayer.fta_total = totalFta\n      updatedPlayer.ftm_total = totalFtm\n\n      updatedPlayer.oreb_total = totalOreb\n      updatedPlayer.dreb_total = totalDreb\n\n      if (totalFga > 0) {\n        updatedPlayer.fg_pct = Math.floor(totalFgm / totalFga * 100 * 10) / 10\n      } else {\n        updatedPlayer.fg_pct = 0\n      }\n      if (totalFg3a > 0) {\n        updatedPlayer.fg3_pct = Math.floor(totalFg3m / totalFg3a * 100 * 10) / 10\n      } else {\n        updatedPlayer.fg3_pct = 0\n      }\n      if (totalFta > 0) {\n        updatedPlayer.ft_pct = Math.floor(totalFtm / totalFta * 100 * 10) / 10\n      } else {\n        updatedPlayer.ft_pct = 0\n      }\n      if (totalTurnover > 0) {\n        updatedPlayer.ast_to_turnover = Math.floor(totalAst / totalTurnover * 10) / 10\n      } else {\n        updatedPlayer.ast_to_turnover = 0\n      }\n      updatedPlayer.pts_pergame = Math.round(totalPts / playedGames * 10) / 10\n      updatedPlayer.ast_pergame = Math.round(totalAst / playedGames * 10) / 10\n      updatedPlayer.reb_pergame = Math.round(totalReb / playedGames * 10) / 10\n      updatedPlayer.stl_pergame = Math.round(totalStl / playedGames * 10) / 10\n      updatedPlayer.blk_pergame = Math.round(totalBlk / playedGames * 10) / 10\n      updatedPlayer.turnover_pergame = Math.round(totalTurnover / playedGames * 10) / 10\n      updatedPlayer.pf_pergame = Math.round(totalPf / playedGames * 10) / 10\n      updatedPlayer.min_pergame = Math.round(totalMin / playedGames * 10) / 10\n\n      updatedPlayer.fga_pergame = Math.round(totalFga / playedGames * 10) / 10\n      updatedPlayer.fgm_pergame = Math.round(totalFgm / playedGames * 10) / 10\n      updatedPlayer.fg3a_pergame = Math.round(totalFg3a / playedGames * 10) / 10\n      updatedPlayer.fg3m_pergame = Math.round(totalFg3m / playedGames * 10) / 10\n      updatedPlayer.fta_pergame = Math.round(totalFta / playedGames * 10) / 10\n      updatedPlayer.ftm_pergame = Math.round(totalFtm / playedGames * 10) / 10\n\n      updatedPlayer.oreb_pergame = Math.round(totalOreb / playedGames * 10) / 10\n      updatedPlayer.dreb_pergame = Math.round(totalDreb / playedGames * 10) / 10\n\n      //Don't calculate per 36 min stats if minutes per game is too low\n      if (updatedPlayer.min_pergame >= 10) {\n        updatedPlayer.pts_per36 = Math.round(updatedPlayer.pts_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.ast_per36 = Math.round(updatedPlayer.ast_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.reb_per36 = Math.round(updatedPlayer.reb_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.stl_per36 = Math.round(updatedPlayer.stl_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.blk_per36 = Math.round(updatedPlayer.blk_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.turnover_per36 = Math.round(updatedPlayer.turnover_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.pf_per36 = Math.round(updatedPlayer.pf_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n\n        updatedPlayer.fga_per36 = Math.round(updatedPlayer.fga_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.fgm_per36 = Math.round(updatedPlayer.fgm_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.fg3a_per36 = Math.round(updatedPlayer.fg3a_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.fg3m_per36 = Math.round(updatedPlayer.fg3m_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.fta_per36 = Math.round(updatedPlayer.fta_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.ftm_per36 = Math.round(updatedPlayer.ftm_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n\n        updatedPlayer.oreb_per36 = Math.round(updatedPlayer.oreb_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.dreb_per36 = Math.round(updatedPlayer.dreb_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n      }\n    } else {\n      updatedPlayer.playerId = playerStat.playerId\n    }\n    updatedPlayer.played_games = playedGames\n    playerTotalStats = playerTotalStats.map(s => s.name === playerStat.name ? updatedPlayer : s)\n  })\n  //Pct\n  /* const dataFgPct = barChartDataService.fgPct(playerTotalStats, playerAmount)\n  const dataFg3Pct = barChartDataService.fg3Pct(playerTotalStats, playerAmount)\n  const dataFtPct = barChartDataService.ftPct(playerTotalStats, playerAmount)\n  const optionsFgPct = barChartOptionsService.fgPct\n  const optionsFg3Pct = barChartOptionsService.fg3Pct\n  const optionsFtPct = barChartOptionsService.ftPct */\n  /* \n    //Total\n    const dataTotalPoints = barChartDataService.totalPoints(playerTotalStats, playerAmount)\n    const dataTotalAssists = barChartDataService.totalAssists(playerTotalStats, playerAmount)\n    const dataTotalRebounds = barChartDataService.totalRebounds(playerTotalStats, playerAmount)\n    const dataTotalBlocks = barChartDataService.totalBlocks(playerTotalStats, playerAmount)\n    const dataTotalSteals = barChartDataService.totalSteals(playerTotalStats, playerAmount)\n    const dataTotalTurnovers = barChartDataService.totalTurnovers(playerTotalStats, playerAmount)\n    const dataTotalPersonalFouls = barChartDataService.totalPF(playerTotalStats, playerAmount)\n    const dataTotalMinutes = barChartDataService.totalMinutes(playerTotalStats, playerAmount)\n    const optionsTotalPoints = barChartOptionsService.totalPoints\n    const optionsTotalAssists = barChartOptionsService.totalAssists\n    const optionsTotalRebounds = barChartOptionsService.totalRebounds\n    const optionsTotalBlocks = barChartOptionsService.totalBlocks\n    const optionsTotalSteals = barChartOptionsService.totalSteals\n    const optionsTotalTurnovers = barChartOptionsService.totalTurnovers\n    const optionsTotalPersonalFouls = barChartOptionsService.totalPF\n    const optionsTotalMinutes = barChartOptionsService.totalMinutes\n  \n    //Per game\n    const dataPerGamePoints = barChartDataService.perGamePoints(playerTotalStats, playerAmount)\n    const dataPerGameAssists = barChartDataService.perGameAssists(playerTotalStats, playerAmount)\n    const dataPerGameRebounds = barChartDataService.perGameRebounds(playerTotalStats, playerAmount)\n    const dataPerGameBlocks = barChartDataService.perGameBlock(playerTotalStats, playerAmount)\n    const dataPerGameSteals = barChartDataService.perGameSteals(playerTotalStats, playerAmount)\n    const dataPerGameTurnovers = barChartDataService.perGameTurnovers(playerTotalStats, playerAmount)\n    const dataAstToTurnover = barChartDataService.astToTurnover(playerTotalStats, playerAmount)\n    const dataPerGamePersonalFouls = barChartDataService.perGamePF(playerTotalStats, playerAmount)\n    const dataPerGameMinutes = barChartDataService.perGameMinutes(playerTotalStats, playerAmount)\n    const optionsPerGamePoints = barChartOptionsService.perGamePoints\n    const optionsPerGameAssists = barChartOptionsService.perGameAssists\n    const optionsPerGameRebounds = barChartOptionsService.perGameRebounds\n    const optionsPerGameBlocks = barChartOptionsService.perGameBlocks\n    const optionsPerGameSteals = barChartOptionsService.perGameSteals\n    const optionsPerGameTurnovers = barChartOptionsService.perGameTurnovers\n    const optionsAstToTurnover = barChartOptionsService.astToTurnover\n    const optionsPerGamePersonalFouls = barChartOptionsService.perGamePF\n    const optionsPerGameMinutes = barChartOptionsService.perGameMinutes\n  \n    //Per 36 minutes\n    const dataPer36Points = barChartDataService.per36Points(playerTotalStats, playerAmount)\n    const dataPer36Assists = barChartDataService.per36Assists(playerTotalStats, playerAmount)\n    const dataPer36Rebounds = barChartDataService.per36Rebounds(playerTotalStats, playerAmount)\n    const dataPer36Blocks = barChartDataService.per36Blocks(playerTotalStats, playerAmount)\n    const dataPer36Steals = barChartDataService.per36Steals(playerTotalStats, playerAmount)\n    const dataPer36Turnovers = barChartDataService.per36Turnovers(playerTotalStats, playerAmount)\n    const dataPer36PersonalFouls = barChartDataService.per36PF(playerTotalStats, playerAmount)\n    const optionsPer36Points = barChartOptionsService.per36Points\n    const optionsPer36Assists = barChartOptionsService.per36Assists\n    const optionsPer36Rebounds = barChartOptionsService.per36Rebounds\n    const optionsPer36Blocks = barChartOptionsService.per36Blocks\n    const optionsPer36Steals = barChartOptionsService.per36Steals\n    const optionsPer36Turnovers = barChartOptionsService.per36Turnovers\n    const optionsPer36PersonalFouls = barChartOptionsService.per36PF\n   */\n\n\n  return (\n    <div>\n      <BarCharts\n        stats={playerTotalStats}\n        pctSelected={pctSelected}\n        totalSelected={totalSelected}\n        perGameSelected={perGameSelected}\n        per36Selected={per36Selected}\n        postSeasonSelected={postSeasonSelected}\n        playerAmount={playerAmount}\n        postSeasonFilteringDone={true}\n      />\n\n      {/* <div>\n      <div className='chart'>\n        {teamStats.length > 0 && totalSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalPoints}\n                  options={optionsTotalPoints}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalAssists}\n                  options={optionsTotalAssists}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalRebounds}\n                  options={optionsTotalRebounds}\n                />\n              </Col>\n\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalBlocks}\n                  options={optionsTotalBlocks}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalSteals}\n                  options={optionsTotalSteals}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalTurnovers}\n                  options={optionsTotalTurnovers}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalPersonalFouls}\n                  options={optionsTotalPersonalFouls}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalMinutes}\n                  options={optionsTotalMinutes}\n                />\n              </Col>\n            </Row>\n          </>\n          : <></>}\n\n\n        {teamStats.length > 0 && perGameSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGamePoints}\n                  options={optionsPerGamePoints}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameAssists}\n                  options={optionsPerGameAssists}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameRebounds}\n                  options={optionsPerGameRebounds}\n                />\n              </Col>\n\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameBlocks}\n                  options={optionsPerGameBlocks}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameSteals}\n                  options={optionsPerGameSteals}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameTurnovers}\n                  options={optionsPerGameTurnovers}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGamePersonalFouls}\n                  options={optionsPerGamePersonalFouls}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameMinutes}\n                  options={optionsPerGameMinutes}\n                />\n              </Col>\n            </Row>\n          </>\n          : <></>}\n\n        {teamStats.length > 0 && per36Selected\n          ? <>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Points}\n                  options={optionsPer36Points}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Assists}\n                  options={optionsPer36Assists}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Rebounds}\n                  options={optionsPer36Rebounds}\n                />\n              </Col>\n\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Blocks}\n                  options={optionsPer36Blocks}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Steals}\n                  options={optionsPer36Steals}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Turnovers}\n                  options={optionsPer36Turnovers}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36PersonalFouls}\n                  options={optionsPer36PersonalFouls}\n                />\n              </Col>\n            </Row>\n          </>\n          : <></>}\n\n\n      </div>\n    </div > */}\n    </div >\n  )\n}\n\nexport default TeamStats","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\n\nconst SelectSeason = ({\n  selectedSeason,\n  setSelectedSeason,\n  selectedTeam,\n  setTeamStats,\n  teams,\n  fetchingData,\n  setFetchingData\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n\n\n  const handleSelectedSeasonChange = (event) => {\n    setSelectedSeason(event.value)\n    setFetchingData(true)\n    const searchedTeam = teams.find(team => team.name === selectedTeam)\n    playerStatService.getTeamStatsFromDB(searchedTeam.apiId, event.value)\n      .then((response) => {\n        setTeamStats(response.data.sort((a, b) =>\n          new Date(a.game.date).getTime() - new Date(b.game.date).getTime())\n        )\n        setFetchingData(false)\n      })\n  }\n\n  return (\n    <>\n      <Select\n        options={seasonSelectDescending}\n        //onChange={(event) => setSelectedSeason(event.value)}\n        onChange={(event) => handleSelectedSeasonChange(event)}\n        closeMenuOnSelect={true}\n        placeholder={selectedSeason}\n      />\n\n    </>\n  )\n}\n\nexport default SelectSeason","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectRegularPost","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectPerTotal = ({ setPerGameSelected, setTotalSelected, setPer36Selected, setPctSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'pg', value: '1' },\n    { name: 'p36m', value: '3' },\n    { name: 'total', value: '2' },\n    { name: '%', value: '4' }\n\n  ];\n\n  const handlePerGameChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setPerGameSelected(true)\n      setTotalSelected(false)\n      setPer36Selected(false)\n      setPctSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setPerGameSelected(false)\n      setTotalSelected(true)\n      setPer36Selected(false)\n      setPctSelected(false)\n    }\n    if (e.currentTarget.value === '3') {\n      setPerGameSelected(false)\n      setTotalSelected(false)\n      setPer36Selected(true)\n      setPctSelected(false)\n    }\n    if (e.currentTarget.value === '4') {\n      setPerGameSelected(false)\n      setTotalSelected(false)\n      setPer36Selected(false)\n      setPctSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handlePerGameChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectPerTotal","\nconst DescriptionTeams = () => {\n  return (\n    <div style={{color:'white', textAlign:'left',}}>\n      <br></br>\n      <br></br>\n      <p>\n        This page shows how stats are distributed among players in a team.\n        Only stats that a player has gotten in the selected team are shown,\n        ie. if a player has been traded mid season his stats from the \n        previous team are not included. \n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionTeams\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport SelectTeam from './SelectTeam'\nimport TeamStats from './TeamStats'\nimport SelectSeason from './SelectSeason'\n/* import SelectRegularPost from './SelectRegularPost'\nimport SelectPerTotal from './SelectPerTotal' */\nimport SelectRegularPost from '../common/SelectRegularPost'\nimport SelectPerTotal from '../common/SelectPerTotal'\nimport DescriptionTeams from './DescriptionTeams'\nimport Title from '../common/Title'\nimport Description from '../common/Description'\n//import teamService from '../../services/teams'\nimport Loader from 'react-loader-spinner'\nimport Logo from '../common/Logo'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\nconst Teams = ({ fetchingData, setFetchingData, teams }) => {\n\n  //const [teams, setTeams] = useState([])\n  const [selectedTeam, setSelectedTeam] = useState('')\n  const [teamStats, setTeamStats] = useState([])\n  const [selectedSeason, setSelectedSeason] = useState(2020)\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [perGameSelected, setPerGameSelected] = useState(true)\n  const [totalSelected, setTotalSelected] = useState(false)\n  const [per36Selected, setPer36Selected] = useState(false)\n  const [pctSelected, setPctSelected] = useState(false)\n\n  useEffect(() => {\n\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n\n  return (\n    <div>\n      {selectedTeam !== ''\n        ? <>\n          <Row>\n            <Col sm={2} xs={1}></Col>\n            <Col sm={8} xs={10} style={{ textAlign: 'center' }}>\n              <SelectPerTotal\n                setPerGameSelected={setPerGameSelected}\n                setTotalSelected={setTotalSelected}\n                setPer36Selected={setPer36Selected}\n                setPctSelected={setPctSelected}\n              />\n            </Col>\n            <Col sm={2} xs={1}></Col>\n          </Row>\n          <Row>\n            <Col sm={2} xs={1}></Col>\n            <Col sm={8} xs={10} style={{ textAlign: 'center' }}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n            <Col sm={2} xs={1}></Col>\n          </Row>\n          <br></br>\n        </>\n        : <></>}\n      <Row>\n        <Col sm={4} style={{ textAlign: 'center' }}>\n        </Col>\n        <Col sm={4}>\n          <SelectTeam\n            teams={teams}\n            setSelectedTeam={setSelectedTeam}\n            setTeamStats={setTeamStats}\n            setFetchingData={setFetchingData}\n            selectedSeason={selectedSeason}\n          />\n        </Col>\n      </Row>\n      {selectedTeam === ''\n        ?\n        <>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4}></Col>\n            <Col sm={4}>\n              <Logo />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Title />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Description />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <DescriptionTeams />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n        </>\n        : <>\n          <Row>\n            <Col sm={4} style={{ textAlign: 'center' }}>\n            </Col>\n            <Col sm={4}>\n              <SelectSeason\n                selectedSeason={selectedSeason}\n                setSelectedSeason={setSelectedSeason}\n                selectedTeam={selectedTeam}\n                setTeamStats={setTeamStats}\n                teams={teams}\n                setFetchingData={setFetchingData}\n              />\n            </Col>\n          </Row>\n        </>}\n      {fetchingData ? <>\n        <Row style={{ textAlign: 'center' }}>\n          <Col sm={4}></Col>\n          <Col sm={4}>\n            <br></br>\n            <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n          </Col>\n          <Col sm={4}></Col>\n        </Row>\n      </>\n        : <></>}\n      <TeamStats\n        selectedTeam={selectedTeam}\n        teamStats={teamStats}\n        postSeasonSelected={postSeasonSelected}\n        perGameSelected={perGameSelected}\n        totalSelected={totalSelected}\n        per36Selected={per36Selected}\n        pctSelected={pctSelected}\n      />\n    </div>\n  )\n}\n\nexport default Teams","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\n\nconst SelectSeason = ({\n  selectedSeason,\n  setSelectedSeason,\n  setFetchingData,\n  setTopTenStats\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  const handleSelectedSeasonChange = (event) => {\n    setSelectedSeason(event.value)\n    setFetchingData(true)\n    playerStatService.getSummaryStatsFromDBForASeason(event.value)\n      .then((response) => {\n        setTopTenStats(response.data)\n        setFetchingData(false)\n      })\n  }\n\n  return (\n    <>\n      <Select\n        options={seasonSelectDescending}\n        //onChange={(event) => setSelectedSeason(event.value)}\n        onChange={(event) => handleSelectedSeasonChange(event)}\n        closeMenuOnSelect={true}\n        placeholder='Select season'\n      />\n\n    </>\n  )\n}\n\nexport default SelectSeason","import React from 'react'\nimport BarCharts from '../common/BarCharts'\nimport 'chartjs-plugin-labels'\n\nconst TopTenStats = (\n  {\n    topTenStats,\n    postSeasonSelected,\n    perGameSelected,\n    totalSelected,\n    per36Selected,\n    pctSelected,\n    playerAmount\n  }\n) => {\n\n  return (\n    <div>\n      <BarCharts\n        stats={topTenStats}\n        pctSelected={pctSelected}\n        totalSelected={totalSelected}\n        perGameSelected={perGameSelected}\n        per36Selected={per36Selected}\n        postSeasonSelected={postSeasonSelected}\n        playerAmount={playerAmount}\n        postSeasonFilteringDone={false}\n      />\n    </div >\n  )\n}\n\nexport default TopTenStats","\nconst DescriptionTop20 = () => {\n  return (\n    <div style={{ color: 'white', textAlign: 'left', }}>\n      <br></br>\n      <br></br>\n      <p>\n        This page charts players in order on each stat.\n        Start by selecting season.\n        You can select how many players are shown in the chart.\n        Per 36 minutes and % charts show only players who are\n        eligible for those stats, ie. minutes per game and\n        shot attempts are high enough.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionTop20\n","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectPlayerAmount = ({ setPlayerAmount }) => {\n\n  const [radioValue, setRadioValue] = useState('10');\n\n  const radios = [\n    { name: '10', value: '10' },\n    { name: '25', value: '25' },\n    { name: '50', value: '50' },\n    { name: '100', value: '100' },\n    { name: '250', value: '250' },\n    { name: 'all', value: '1000' }\n  ];\n\n  const handlePerGameChange = (e) => {\n    if (e.currentTarget.value === '10') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '25') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '50') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '100') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '250') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '1000') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handlePerGameChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectPlayerAmount","import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport 'chartjs-plugin-labels'\nimport Title from '../common/Title'\nimport Description from '../common/Description'\nimport Loader from 'react-loader-spinner'\nimport Logo from '../common/Logo'\nimport SelectSeason from './SelectSeason'\nimport SelectRegularPost from '../common/SelectRegularPost'\nimport SelectPerTotal from '../common/SelectPerTotal'\nimport TopTenStats from './TopTenStats'\nimport DescriptionTop20 from './DescriptionTop20'\nimport SelectPlayerAmount from './SelectPlayerAmount'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\nconst TopTen = ({ fetchingData, setFetchingData }) => {\n\n  const [selectedSeason, setSelectedSeason] = useState('')\n  const [topTenStats, setTopTenStats] = useState([])\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [perGameSelected, setPerGameSelected] = useState(true)\n  const [totalSelected, setTotalSelected] = useState(false)\n  const [per36Selected, setPer36Selected] = useState(false)\n  const [pctSelected, setPctSelected] = useState(false)\n  const [playerAmount, setPlayerAmount] = useState(10)\n\n  useEffect(() => {\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  return (\n    <>\n      {selectedSeason !== ''\n        ? <>\n          <Row>\n            <Col sm={2} xs={1}></Col>\n            <Col sm={8} xs={10} style={{ textAlign: 'center' }}>\n              <SelectPerTotal\n                setPerGameSelected={setPerGameSelected}\n                setTotalSelected={setTotalSelected}\n                setPer36Selected={setPer36Selected}\n                setPctSelected={setPctSelected}\n              />\n            </Col>\n            <Col sm={2} xs={1}></Col>\n          </Row>\n          <Row>\n            <Col sm={2} xs={1}></Col>\n            <Col sm={8} xs={10} style={{ textAlign: 'center' }}>\n              <SelectPlayerAmount\n                setPlayerAmount={setPlayerAmount}\n              />\n            </Col>\n            <Col sm={2} xs={1}></Col>\n          </Row>\n          <Row>\n            <Col sm={2} xs={1}></Col>\n            <Col sm={8} xs={10} style={{ textAlign: 'center' }}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n            <Col sm={2} xs={1}></Col>\n          </Row>\n          <br></br>\n        </>\n        : <></>}\n      <Row>\n        <Col sm={4} style={{ textAlign: 'center' }}>\n        </Col>\n        <Col sm={4}>\n          <SelectSeason\n            selectedSeason={selectedSeason}\n            setSelectedSeason={setSelectedSeason}\n            setFetchingData={setFetchingData}\n            setTopTenStats={setTopTenStats}\n          />\n        </Col>\n        {/* <Col sm={4}>\n          {selectedSeason !== ''\n            ? <SelectPerTotal\n              setPerGameSelected={setPerGameSelected}\n              setTotalSelected={setTotalSelected}\n              setPer36Selected={setPer36Selected}\n              setPctSelected={setPctSelected}\n            />\n            : <></>}\n        </Col> */}\n      </Row>\n      {selectedSeason === ''\n        ? <>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4}></Col>\n            <Col sm={4}>\n              <Logo />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Title />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Description />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <DescriptionTop20 />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n        </>\n        : <>\n        </>}\n      {fetchingData ? <>\n        <Row style={{ textAlign: 'center' }}>\n          <Col sm={4}></Col>\n          <Col sm={4}>\n            <br></br>\n            <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n          </Col>\n          <Col sm={4}></Col>\n        </Row>\n      </>\n        : <></>}\n      <TopTenStats\n        topTenStats={topTenStats}\n        postSeasonSelected={postSeasonSelected}\n        perGameSelected={perGameSelected}\n        totalSelected={totalSelected}\n        per36Selected={per36Selected}\n        pctSelected={pctSelected}\n        playerAmount={playerAmount}\n      />\n\n    </>\n  )\n\n\n\n\n\n\n\n\n\n\n\n}\n\nexport default TopTen","\nconst DescriptionPlayers = () => {\n  return (\n    <div style={{color:'white', textAlign:'left',}}>\n      <br></br>\n      <br></br>\n      <p>\n        Here you can contact us. Please write your feedback, comments, questions etc.\n        and click send. If you want you can give your email address for us to respond to.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionPlayers\n","import axios from 'axios'\n//const baseUrl = 'https://www.balldontlie.io/api/v1/players'\nconst baseUrl = '/api/contact'\n\nconst sendMessage = async (email, message) => {\n  await axios.post(baseUrl, {\n    email: email,\n    message: message\n  })\n}\n\nconst contactService = { sendMessage }\n\nexport default contactService","import React, { useState, useEffect } from 'react'\n/* import Logo from '../common/Logo'\nimport Title from '../common/Title'\nimport Description from '../common/Description' */\nimport DescriptionContact from './DescriptionContact'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport contactService from '../../services/contact'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\nconst Contact = () => {\n\n  useEffect(() => {\n\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  const [message, setMessage] = useState('')\n  const [email, setEmail] = useState('')\n  const [messageSent, setMessageSent] = useState(false)\n  const [sentEmptyMessage, setSentEmptyMessage] = useState(false)\n\n  const handleMessageChange = (event) => {\n    setMessage(event.target.value)\n    //console.log(message)\n  }\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value)\n    //console.log(email)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if (message === '') {\n      setSentEmptyMessage(true)\n      return\n    }\n    setMessageSent(true)\n    contactService.sendMessage(email, message)\n    console.log('message send')\n    console.log(message)\n    console.log(email)\n  }\n\n  return (\n    <div>\n      {!messageSent\n        ? <>\n          <Form onSubmit={(event) => handleSubmit(event)}>\n            <Row>\n              <Col sm={4}></Col>\n              <Col sm={4}>\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"optional email address\"\n                    onChange={(event) => handleEmailChange(event)} />\n                </Form.Group>\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n            <Row>\n              <Col sm={4}></Col>\n              <Col sm={4}>\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                  <Form.Control\n                    as=\"textarea\"\n                    placeholder='Please write your message here'\n                    rows={3}\n                    onChange={(event) => handleMessageChange(event)} />\n                </Form.Group>\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n            {sentEmptyMessage\n              ? <>\n                <Row>\n                  <Col sm={4}></Col>\n                  <Col sm={4}>\n                    <div style={{ color: 'white' }}>\n                      <p>Before sending, please write your message.</p>\n                    </div>\n\n                  </Col>\n                  <Col sm={4}></Col>\n                </Row>\n              </>\n              : <></>}\n\n            <Row>\n              <Col sm={4}></Col>\n              <Col sm={4}>\n                <Button type='submit'>\n                  Send\n                </Button>\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n          </Form>\n          <Row >\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <DescriptionContact />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n        </>\n        : <>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4}></Col>\n            <Col sm={4}>\n              <p style={{ color: 'white' }}>Thank you for your message.</p>\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default Contact\n","import axios from 'axios'\n//const baseUrl = 'https://www.balldontlie.io/api/v1/players'\nconst baseUrl = '/api/players'\n\nconst getPlayers = async () => {\n  const players = await axios.get(baseUrl)\n  \n  return players.data\n}\n\nconst getPlayersForASeason = async (season) => {\n  const players = await axios.get(`${baseUrl}/${season}`)\n  \n  return players.data\n}\n\nconst playerService = { getPlayers, getPlayersForASeason }\n\nexport default playerService","import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/teams'\nconst baseUrlDB = '/api/teamsdb'\n\nconst getTeams = async () => {\n  const teams = await axios.get(`${baseUrl}`)\n  return teams.data\n}\n\nconst getTeamsFromDatabase = async () => {\n  const teams = await axios.get(`${baseUrlDB}`)\n  return teams.data\n}\n\nconst teamService = {getTeams, getTeamsFromDatabase}\n\nexport default teamService","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n//import NavigationBar from './components/NavigationBar'\nimport Players from './components/players/Players'\nimport Teams from './components/teams/Teams'\nimport TopTen from './components/topTen/TopTen'\nimport Contact from './components/contact/Contact'\n//import ComparePlayers from './components/ComparePlayers/ComparePlayers'\nimport playerService from './services/players'\nimport teamService from './services/teams'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n  /*  Redirect,\n   useRouteMatch,\n   Redirect,\n   useHistory */\n} from 'react-router-dom'\n\nfunction App() {\n\n  const [fetchingData, setFetchingData] = useState(false)\n  const [players, setPlayers] = useState([])\n  const [teams, setTeams] = useState([])\n\n  useEffect(() => {\n    //Player sorting should be done in the database query?\n    playerService.getPlayers()\n      .then((response) => {\n        setPlayers(response.map(player => ({ ...player, fullName: `${player.firstName} ${player.lastName}` }))\n          .sort((a, b) => (a.lastName > b.lastName) ? 1 : ((b.lastName > a.lastName) ? -1 : 0)))\n      })\n    teamService.getTeamsFromDatabase()\n      .then((response) => {\n        setTeams(response.sort((a, b) => (a.city > b.city) ? 1 : ((b.city > a.city) ? -1 : 0)))\n      })\n  }, [])\n\n\n  return (\n    <Router>\n      <div style={{\n        backgroundColor: \"#17202A\",\n        height: '1500vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center'/* ,\n        textAlign: 'center' */\n      }}>\n        <div className=\"container\" style={{ paddingTop: '2vh', backgroundColor: \"#17202A\" }} >\n          <Container>\n            {/* <Row>\n              <Col sm={2}></Col>\n              <Col sm={8}>\n                <NavigationBar />\n              </Col>\n              <Col sm={2}></Col>\n            </Row> */}\n            {/* <div style={{ backgroundColor:'white' }}> */}\n            <Row align=\"left\">\n              <Col sm={2}></Col>\n              <Col sm={2} xs={3}>\n                <Link to='/players'>player career</Link>\n              </Col>\n\n              <Col sm={2} xs={3}>\n                <Link to='/topplayers'>top players</Link>\n              </Col>\n              {/* <Col sm={2} xs={3}>\n                <Link to='/compareplayers'>compare players</Link>\n              </Col> */}\n              <Col sm={2} xs={3} align=\"left\">\n                <Link to='/teams'>teams</Link>\n              </Col>\n\n              <Col sm={2} xs={3} align=\"left\">\n                <Link to='/contactus'>contact us</Link>\n              </Col>\n              <Col sm={2}></Col>\n            </Row>\n            {/* </div> */}\n            <br></br>\n            <Switch>\n              <Route path='/players'>\n                <Players\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                  players={players}\n                  setPlayers={setPlayers}\n                  teams={teams}\n                />\n              </Route>\n              <Route path='/teams'>\n                <Teams\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                  teams={teams}\n                />\n              </Route>\n              <Route path='/topplayers'>\n                <TopTen\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                />\n              </Route>\n              <Route path='/contactus'>\n                <Contact\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                />\n              </Route>\n              {/* <Route path='/compareplayers'>\n                <ComparePlayers\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                  players={players}\n                />\n              </Route> */}\n              <Route path='/'>\n                <Redirect to='/players' />\n              </Route>\n            </Switch>\n            <br></br>\n\n          </Container>\n        </div>\n      </div >\n    </Router >\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}