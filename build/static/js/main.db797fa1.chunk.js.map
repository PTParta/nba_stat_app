{"version":3,"sources":["services/teams.js","services/players.js","services/trailingMeans.js","styling/colors.js","components/PlayerStats.js","services/playerStats.js","components/SelectPlayer.js","components/SelectSeasons.js","components/SelectRegularPost.js","components/SelectStats.js","images/ball_logov3.png","components/Logo.js","App.js","index.js"],"names":["teamService","getTeams","a","axios","get","teams","data","playerService","getPlayers","players","trailingGames","countTrailingMean","playerStats","statCategory","trailingAverage","i","length","statsInTrailingGames","j","mean","push","countTrailingMeanPct","attemptsInStatCategory","trailingMeanService","pts","ast","reb","blk","stl","turnover","min","map","playerStat","Number","split","pf","dreb","oreb","fg_pct","fg3_pct","ft_pct","fga","fgm","fg3a","fg3m","fta","ftm","colors","PlayerStats","startSeasonToShow","endSeasonToShow","postSeasonSelected","ptsSelected","astSelected","rebSelected","drebSelected","orebSelected","blkSelected","stlSelected","turnoverSelected","fgaSelected","fgmSelected","fg_pctSelected","fg3aSelected","fg3mSelected","fg3_pctSelected","ftaSelected","ftmSelected","ft_pctSelected","pfSelected","minSelected","selectedFirstSeason","selectedLastSeason","playerStatsFiltered","filter","game","postseason","seasons","season","startOfCareerSeason","Math","apply","endOfCareerSeason","max","games","labels","date","concat","find","team","id","visitor_team_id","abbreviation","home_team_id","datasets","label","fill","borderColor","lightGreyDot","pointBackgroundColor","showLine","hidden","lightGreyLine","pointRadius","brownDot","brownLine","oliveDot","oliveLine","tealDot","tealLine","navyDot","navyLine","redDot","redLine","orangeDot","orangeLine","yellowDot","yellowLine","limeDot","limeLine","greenDot","greenLine","cyanDot","cyanLine","blueDot","blueLine","purpleDot","purpleLine","magentaDot","magentaLine","greyDot","greyLine","pinkDot","pinkLine","apricotDot","apricotLine","beigeDot","beigeLine","mintDot","mintLine","Container","style","color","paddingLeft","Row","Col","player","first_name","last_name","className","options","legend","onClick","e","stopPropagation","display","scales","xAxes","ticks","baseUrl","playerStatService","getPlayerStatsFromApi","playerId","seasonsVariable","totalPages","meta","total_pages","console","log","playerStatsAllPages","page","playerStatsOnePage","getPlayerStatsFromDB","SelectPlayer","setSelectedPlayer","setPlayerStats","setFetchingData","playerSelect","fullName","value","getPlayerStats","playerFullName","searchedPlayer","apiId","then","response","sort","b","Date","getTime","onChange","option","placeholder","SelectSeasons","setSelectedFirstSeason","setSelectedLastSeason","seasonDescending","seasonSelectDescending","toString","seasonAscending","seasonSelectAscending","sm","event","closeMenuOnSelect","SelectRegularPost","setRegularSeasonSelected","setPostSeasonSelected","useState","radioValue","setRadioValue","ButtonGroup","toggle","size","name","radio","idx","ToggleButton","type","variant","checked","currentTarget","handleRegularPostChange","SelectStats","setPtsSelected","setAstSelected","setRebSelected","setDrebSelected","setOrebSelected","setBlkSelected","setStlSelected","setTurnoverSelected","setFgaSelected","setFgmSelected","setFg_pctSelected","setFg3aSelected","setFg3mSelected","setFg3_pctSelected","setFtaSelected","setFtmSelected","setFt_pctSelected","setMinSelected","setPfSelected","cellWidth","Form","width","backgroundColor","Check","inline","Logo","src","ball_logo","alt","height","App","setPlayers","setTeams","regularSeasonSelected","fetchingData","useEffect","firstName","lastName","flexDirection","alignContent","textAlign","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db797fa1.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/teams'\n\nconst getTeams = async () => {\n  const teams = await axios.get(`${baseUrl}`)\n  return teams.data\n}\n\nconst teamService = {getTeams}\n\nexport default teamService","import axios from 'axios'\n//const baseUrl = 'https://www.balldontlie.io/api/v1/players'\nconst baseUrl = '/api/players'\n\nconst getPlayers = async () => {\n  const players = await axios.get(baseUrl)\n  \n  return players.data\n}\n\nconst playerService = { getPlayers }\n\nexport default playerService","\nconst trailingGames = 20\n\nconst countTrailingMean = (playerStats, statCategory) => {\n  let trailingAverage = []\n  for (let i = 0; i < trailingGames; i++) {\n    trailingAverage[i] = null\n  }\n  for (let i = trailingGames; i < playerStats.length; i++) {\n    let statsInTrailingGames = 0\n    for (let j = 1; j <= trailingGames; j++) {\n      statsInTrailingGames += playerStats[i - trailingGames + j][statCategory];\n    }\n    const mean = statsInTrailingGames / trailingGames\n    trailingAverage.push(mean)\n  }\n  return trailingAverage\n}\nconst countTrailingMeanPct = (playerStats, statCategory, attemptsInStatCategory) => {\n  let trailingAverage = []\n  for (let i = 0; i < trailingGames; i++) {\n    trailingAverage[i] = null\n  }\n  for (let i = trailingGames; i < playerStats.length; i++) {\n\n    if (playerStats[i][attemptsInStatCategory] === 0) {\n      trailingAverage.push(trailingAverage[i - 1])\n      playerStats[i][statCategory] = trailingAverage[i - 1]\n    } else {\n      let statsInTrailingGames = 0\n      for (let j = 1; j <= trailingGames; j++) {\n        statsInTrailingGames += playerStats[i - trailingGames + j][statCategory];\n      }\n      const mean = statsInTrailingGames / trailingGames\n      trailingAverage.push(mean)\n    }\n  }\n\n  return trailingAverage\n}\nconst pts = (playerStats) => {\n  return countTrailingMean(playerStats, 'pts')\n}\nconst ast = (playerStats) => {\n  return countTrailingMean(playerStats, 'ast')\n}\nconst reb = (playerStats) => {\n  return countTrailingMean(playerStats, 'reb')\n}\nconst blk = (playerStats) => {\n  return countTrailingMean(playerStats, 'blk')\n}\nconst stl = (playerStats) => {\n  return countTrailingMean(playerStats, 'stl')\n}\nconst turnover = (playerStats) => {\n  return countTrailingMean(playerStats, 'turnover')\n}\nconst min = (playerStats) => {\n  playerStats = playerStats.map(playerStat => ({ ...playerStat, min: playerStat.min ? Number(playerStat.min.split(':')[0]) : null }))\n  return countTrailingMean(playerStats, 'min')\n}\nconst pf = (playerStats) => {\n  return countTrailingMean(playerStats, 'pf')\n}\nconst dreb = (playerStats) => {\n  return countTrailingMean(playerStats, 'dreb')\n}\nconst oreb = (playerStats) => {\n  return countTrailingMean(playerStats, 'oreb')\n}\nconst fg_pct = (playerStats) => {\n  return countTrailingMeanPct(playerStats, 'fg_pct', 'fga')\n}\nconst fg3_pct = (playerStats) => {\n  return countTrailingMeanPct(playerStats, 'fg3_pct', 'fg3a')\n}\nconst ft_pct = (playerStats) => {\n  return countTrailingMeanPct(playerStats, 'ft_pct', 'fta')\n}\nconst fga = (playerStats) => {\n  return countTrailingMean(playerStats, 'fga')\n}\nconst fgm = (playerStats) => {\n  return countTrailingMean(playerStats, 'fgm')\n}\nconst fg3a = (playerStats) => {\n  return countTrailingMean(playerStats, 'fg3a')\n}\nconst fg3m = (playerStats) => {\n  return countTrailingMean(playerStats, 'fg3m')\n}\nconst fta = (playerStats) => {\n  return countTrailingMean(playerStats, 'fta')\n}\nconst ftm = (playerStats) => {\n  return countTrailingMean(playerStats, 'ftm')\n}\n\n\nconst trailingMeanService = {\n  pts,\n  ast,\n  reb,\n  blk,\n  stl,\n  turnover,\n  min,\n  pf,\n  dreb,\n  oreb,\n  fg_pct,\n  fg3_pct,\n  ft_pct,\n  fga,\n  fgm,\n  fg3a,\n  fg3m,\n  fta,\n  ftm\n}\n\nexport default trailingMeanService","const colors = {\n  'maroonDot': 'rgba(128,0,0,0.3)',\n  'maroonLine': 'rgba(128,0,0,1.0)',\n  'brownDot': 'rgba(170,110,40,0.3)',\n  'brownLine': 'rgba(170,110,40,1.0)',\n  'oliveDot': 'rgba(128,128,0,0.3)',\n  'oliveLine': 'rgba(128,128,0,1.0)',\n  'tealDot': 'rgba(0,128,128,0.3)',\n  'tealLine': 'rgba(0,128,128,1.0)',\n  'navyDot': 'rgba(0,0,128,0.3)',\n  'navyLine': 'rgba(0,0,128,1.0)',\n  'redDot': 'rgba(230,25,75,0.3)',\n  'redLine': 'rgba(230,25,75,1.0)',\n  'orangeDot': 'rgba(245,130,48,0.3)',\n  'orangeLine': 'rgba(245,130,48,1.0)',\n  'yellowDot': 'rgba(255,225,25,0.3)',\n  'yellowLine': 'rgba(255,225,25,1.0)',\n  'limeDot': 'rgba(210,245,60,0.3)',\n  'limeLine': 'rgba(210,245,60,1.0)',\n  'greenDot': 'rgba(60,180,75,0.3)',\n  'greenLine': 'rgba(60,180,75,1.0)',\n  'cyanDot': 'rgba(70,240,240,0.3)',\n  'cyanLine': 'rgba(70,240,240,1.0)',\n  'blueDot': 'rgba(0,130,200,0.3)',\n  'blueLine': 'rgba(0,130,200,1.0)',\n  'purpleDot': 'rgba(145,30,180,0.3)',\n  'purpleLine': 'rgba(145,30,180,1.0)',\n  'magentaDot': 'rgba(240,50,230,0.3)',\n  'magentaLine': 'rgba(240,50,230,1.0)',\n  'greyDot': 'rgba(128,128,128,0.3)',\n  'greyLine': 'rgba(128,128,128,1.0)',\n  'pinkDot': 'rgba(250,190,212,0.3)',\n  'pinkLine': 'rgba(250,190,212,1.0)',\n  'apricotDot': 'rgba(255,215,180,0.3)',\n  'apricotLine': 'rgba(255,215,180,1.0)',\n  'beigeDot': 'rgba(255,250,200,0.3)',\n  'beigeLine': 'rgba(255,250,200,1.0)',\n  'mintDot': 'rgba(170,255,195,0.3)',\n  'mintLine': 'rgba(170,255,195,1.0)',\n  'lavenderDot': 'rgba(220,190,255,0.3)',\n  'lavenderLine': 'rgba(220,190,255,1.0)',\n  'whiteDot': 'rgba(255,255,255,0.3)',\n  'whiteLine': 'rgba(255,255,255,1.0)',\n  'lightGreyDot': 'rgba(211,211,211,0.3)',\n  'lightGreyLine': 'rgba(211,211,211,1.0)'\n}\n\nexport default colors","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Line } from 'react-chartjs-2'\nimport trailingMeanService from '../services/trailingMeans'\nimport colors from '../styling/colors'\n//import Logo from '../components/Logo'\n\nconst PlayerStats = (\n  {\n    playerStats,\n    teams,\n    postSeasonSelected,\n    ptsSelected,\n    astSelected,\n    rebSelected,\n    drebSelected,\n    orebSelected,\n    blkSelected,\n    stlSelected,\n    turnoverSelected,\n    fgaSelected,\n    fgmSelected,\n    fg_pctSelected,\n    fg3aSelected,\n    fg3mSelected,\n    fg3_pctSelected,\n    ftaSelected,\n    ftmSelected,\n    ft_pctSelected,\n    pfSelected,\n    minSelected,\n    selectedFirstSeason,\n    selectedLastSeason\n  }\n) => {\n\n  const options = {\n    //responsive: true,\n    /* maintainAspectRatio: false, */\n    //aspectRatio: 1,\n    legend: {\n      onClick: (e) => e.stopPropagation(),\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        ticks: {\n          display: false\n        }\n      }]\n    }\n  }\n\n  const playerStatsFiltered = playerStats.filter(playerStat => playerStat.game.postseason === postSeasonSelected)\n\n  const seasons = playerStatsFiltered.map(playerStat => playerStat.game.season)\n  const startOfCareerSeason = Math.min.apply(Math, seasons)\n  const endOfCareerSeason = Math.max.apply(Math, seasons)\n\n  let startSeasonToShow\n  let endSeasonToShow\n\n  if (selectedFirstSeason > startOfCareerSeason) {\n    startSeasonToShow = selectedFirstSeason\n  } else {\n    startSeasonToShow = startOfCareerSeason\n  }\n\n  if (selectedLastSeason < endOfCareerSeason) {\n    endSeasonToShow = selectedLastSeason\n  } else {\n    endSeasonToShow = endOfCareerSeason\n  }\n\n\n  const games = playerStatsFiltered.filter(playerStat => playerStat.game.season >= selectedFirstSeason && playerStat.game.season <= selectedLastSeason).length\n\n  //const postSeasonGames = playerStatsFiltered.filter(playerStat => playerStat.game.postseason === true).length\n\n  const data = {\n    labels: playerStatsFiltered\n      .filter(playerStat => playerStat.game.season >= selectedFirstSeason && playerStat.game.season <= selectedLastSeason)\n      .map(playerStat => playerStat.game.date.split('T')[0]\n        .concat('\\n')\n        .concat(teams.find(team => team.id === playerStat.game.visitor_team_id).abbreviation)\n        .concat('@')\n        .concat(teams.find(team => team.id === playerStat.game.home_team_id).abbreviation)\n        .concat(playerStat.game.postseason ? ' POST' : ' REG')),\n    datasets: [\n      {\n        //data: playerStats.map(playerStat => (playerStat.pts && playerStat.game.postseason === true)),\n        label: 'pts',\n        data: playerStatsFiltered.map(playerStat => playerStat.pts),\n        fill: false,\n        borderColor: colors.lightGreyDot,\n        pointBackgroundColor: colors.lightGreyDot,\n        showLine: false,\n        hidden: !ptsSelected\n      },\n      {\n        label: 'pts trailing mean',\n\n        fill: false,\n        borderColor: colors.lightGreyLine,\n        pointBackgroundColor: colors.lightGreyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pts(playerStatsFiltered),\n        hidden: !ptsSelected\n      },\n      {\n        label: 'ast',\n        data: playerStatsFiltered.map(playerStat => playerStat.ast),\n        fill: false,\n        borderColor: colors.brownDot,\n        pointBackgroundColor: colors.brownDot,\n        showLine: false,\n        hidden: !astSelected\n      },\n      {\n        label: 'ast trailing mean',\n\n        fill: false,\n        borderColor: colors.brownLine,\n        pointBackgroundColor: colors.brownLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ast(playerStatsFiltered),\n        hidden: !astSelected\n      },\n      {\n        label: 'reb',\n        data: playerStatsFiltered.map(playerStat => playerStat.reb),\n        fill: false,\n        borderColor: colors.oliveDot,\n        pointBackgroundColor: colors.oliveDot,\n        showLine: false,\n        hidden: !rebSelected\n      },\n      {\n        label: 'reb trailing mean',\n\n        fill: false,\n        borderColor: colors.oliveLine,\n        pointBackgroundColor: colors.oliveLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.reb(playerStatsFiltered),\n        hidden: !rebSelected\n      },\n      {\n        label: 'blk',\n        data: playerStatsFiltered.map(playerStat => playerStat.blk),\n        fill: false,\n        borderColor: colors.tealDot,\n        pointBackgroundColor: colors.tealDot,\n        showLine: false,\n        hidden: !blkSelected\n      },\n      {\n        label: 'blk trailing mean',\n\n        fill: false,\n        borderColor: colors.tealLine,\n        pointBackgroundColor: colors.tealLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.blk(playerStatsFiltered),\n        hidden: !blkSelected\n      },\n      {\n        label: 'stl',\n        data: playerStatsFiltered.map(playerStat => playerStat.stl),\n        fill: false,\n        borderColor: colors.navyDot,\n        pointBackgroundColor: colors.navyDot,\n        showLine: false,\n        hidden: !stlSelected\n      },\n      {\n        label: 'stl trailing mean',\n\n        fill: false,\n        borderColor: colors.navyLine,\n        pointBackgroundColor: colors.navyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.stl(playerStatsFiltered),\n        hidden: !stlSelected\n      },\n      {\n        label: 'turnover',\n        data: playerStatsFiltered.map(playerStat => playerStat.turnover),\n        fill: false,\n        borderColor: colors.redDot,\n        pointBackgroundColor: colors.redDot,\n        showLine: false,\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'turnover trailing mean',\n        fill: false,\n        borderColor: colors.redLine,\n        pointBackgroundColor: colors.redLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.turnover(playerStatsFiltered),\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'min',\n        data: playerStatsFiltered.map(playerStat => playerStat.min ? Number(playerStat.min.split(':')[0]) : null),\n        fill: false,\n        borderColor: colors.orangeDot,\n        pointBackgroundColor: colors.orangeDot,\n        showLine: false,\n        hidden: !minSelected\n      },\n      {\n        label: 'min trailing mean',\n        fill: false,\n        borderColor: colors.orangeLine,\n        pointBackgroundColor: colors.orangeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.min(playerStatsFiltered),\n        hidden: !minSelected\n      },\n      {\n        label: 'pf',\n        data: playerStatsFiltered.map(playerStat => playerStat.pf),\n        fill: false,\n        borderColor: colors.yellowDot,\n        pointBackgroundColor: colors.yellowDot,\n        showLine: false,\n        hidden: !pfSelected\n      },\n      {\n        label: 'pf trailing mean',\n        fill: false,\n        borderColor: colors.yellowLine,\n        pointBackgroundColor: colors.yellowLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pf(playerStatsFiltered),\n        hidden: !pfSelected\n      },\n      {\n        label: 'dreb',\n        data: playerStatsFiltered.map(playerStat => playerStat.dreb),\n        fill: false,\n        borderColor: colors.limeDot,\n        pointBackgroundColor: colors.limeDot,\n        showLine: false,\n        hidden: !drebSelected\n      },\n      {\n        label: 'dreb trailing mean',\n        fill: false,\n        borderColor: colors.limeLine,\n        pointBackgroundColor: colors.limeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.dreb(playerStatsFiltered),\n        hidden: !drebSelected\n      },\n      {\n        label: 'oreb',\n        data: playerStatsFiltered.map(playerStat => playerStat.oreb),\n        fill: false,\n        borderColor: colors.greenDot,\n        pointBackgroundColor: colors.greenDot,\n        showLine: false,\n        hidden: !orebSelected\n      },\n      {\n        label: 'oreb trailing mean',\n        fill: false,\n        borderColor: colors.greenLine,\n        pointBackgroundColor: colors.greenLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.oreb(playerStatsFiltered),\n        hidden: !orebSelected\n      },\n      {\n        label: 'fg_pct',\n        data: playerStatsFiltered.map(playerStat => playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct),\n        fill: false,\n        borderColor: colors.cyanDot,\n        pointBackgroundColor: colors.cyanDot,\n        showLine: false,\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg_pct trailing mean',\n        fill: false,\n        borderColor: colors.cyanLine,\n        pointBackgroundColor: colors.cyanLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg_pct(playerStatsFiltered\n          .map(playerStat => ({ ...playerStat, fg_pct: playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct }))),\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg3_pct',\n        data: playerStatsFiltered.map(playerStat => playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct),\n        fill: false,\n        borderColor: colors.blueDot,\n        pointBackgroundColor: colors.blueDot,\n        showLine: false,\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'fg3_pct trailing mean',\n        fill: false,\n        borderColor: colors.blueLine,\n        pointBackgroundColor: colors.blueLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3_pct(playerStatsFiltered\n          .map(playerStat => ({ ...playerStat, fg3_pct: playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct }))),\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'ft_pct',\n        data: playerStatsFiltered.map(playerStat => playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct),\n        fill: false,\n        borderColor: colors.purpleDot,\n        pointBackgroundColor: colors.purpleDot,\n        showLine: false,\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'ft_pct trailing mean',\n        fill: false,\n        borderColor: colors.purpleLine,\n        pointBackgroundColor: colors.purpleLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ft_pct(playerStatsFiltered\n          .map(playerStat => ({\n            ...playerStat,\n            ft_pct: (playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct)\n          }))),\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'fga',\n        data: playerStatsFiltered.map(playerStat => playerStat.fga),\n        fill: false,\n        borderColor: colors.magentaDot,\n        pointBackgroundColor: colors.magentaDot,\n        showLine: false,\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fga trailing mean',\n        fill: false,\n        borderColor: colors.magentaLine,\n        pointBackgroundColor: colors.magentaLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fga(playerStatsFiltered),\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fgm',\n        data: playerStatsFiltered.map(playerStat => playerStat.fgm),\n        fill: false,\n        borderColor: colors.greyDot,\n        pointBackgroundColor: colors.greyDot,\n        showLine: false,\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fgm trailing mean',\n        fill: false,\n        borderColor: colors.greyLine,\n        pointBackgroundColor: colors.greyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fgm(playerStatsFiltered),\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fg3a',\n        data: playerStatsFiltered.map(playerStat => playerStat.fg3a),\n        fill: false,\n        borderColor: colors.pinkDot,\n        pointBackgroundColor: colors.pinkDot,\n        showLine: false,\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3a trailing mean',\n        fill: false,\n        borderColor: colors.pinkLine,\n        pointBackgroundColor: colors.pinkLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3a(playerStatsFiltered),\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3m',\n        data: playerStatsFiltered.map(playerStat => playerStat.fg3m),\n        fill: false,\n        borderColor: colors.apricotDot,\n        pointBackgroundColor: colors.apricotDot,\n        showLine: false,\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fg3m trailing mean',\n        fill: false,\n        borderColor: colors.apricotLine,\n        pointBackgroundColor: colors.apricotLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3m(playerStatsFiltered),\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fta',\n        data: playerStatsFiltered.map(playerStat => playerStat.fta),\n        fill: false,\n        borderColor: colors.beigeDot,\n        pointBackgroundColor: colors.beigeDot,\n        showLine: false,\n        hidden: !ftaSelected\n      },\n      {\n        label: 'fta trailing mean',\n        fill: false,\n        borderColor: colors.beigeLine,\n        pointBackgroundColor: colors.beigeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fta(playerStatsFiltered),\n        hidden: !ftaSelected\n      },\n      {\n        label: 'ftm',\n        data: playerStatsFiltered.map(playerStat => playerStat.ftm),\n        fill: false,\n        borderColor: colors.mintDot,\n        pointBackgroundColor: colors.mintDot,\n        showLine: false,\n        hidden: !ftmSelected\n      },\n      {\n        label: 'ftm trailing mean',\n        fill: false,\n        borderColor: colors.mintLine,\n        pointBackgroundColor: colors.mintLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ftm(playerStatsFiltered),\n        hidden: !ftmSelected\n      },\n    ],\n  }\n\n  return (\n    <div>\n      <Container style={{ color: 'white', paddingLeft: '30px' }}>\n        <Row>\n          <Col><h5>\n            {playerStats[0].player.first_name} {playerStats[0].player.last_name}\n          </h5>\n            <h5>\n              {startSeasonToShow} - {endSeasonToShow}\n            </h5>\n            {!postSeasonSelected\n              ? <h5>\n                {games} games\n        </h5>\n              : <h5>\n                {games} games\n        </h5>}</Col>\n        </Row>\n      </Container>\n      {/* <br></br> */}\n      <div className='chart'>\n        <Line\n          data={data}\n          options={options}\n        />\n      </div>\n      <div>\n      </div>\n    </div>\n  )\n}\n\nexport default PlayerStats","import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/stats'\nconst baseUrlDB = '/api/statsdb/statsfromdb'\n\nconst getPlayerStatsFromApi = async (seasons, playerId) => {\n  //console.log('seasons to api', seasons)\n  let seasonsVariable = ''\n\n  for (let i = 0; i < seasons.length; i++) {\n    seasonsVariable += '&seasons[]='\n    seasonsVariable += seasons[i]\n\n  }\n  //console.log('seasonsVariable', seasonsVariable)\n\n  const playerStats = await axios.get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100`)\n  //playerStats.sort((a, b) => a.game.date - b.game.date)\n  const totalPages = playerStats.data.meta.total_pages\n  console.log('totalPages', totalPages)\n\n  let playerStatsAllPages = []\n\n  for (let page = 1; page <= totalPages; page++) {\n    console.log('getting stats from page', page)\n    const playerStatsOnePage = await axios\n      .get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100&page=${page}`)\n    playerStatsAllPages = playerStatsAllPages.concat(playerStatsOnePage.data.data)\n  }\n  console.log(playerStatsAllPages)\n  //return playerStats.data\n  return playerStatsAllPages\n}\n\nconst getPlayerStatsFromDB = async (/* seasons, */ playerId/* , regularSeasonSelected, postSeasonSelected */) => {\n  /* let seasonHelper = ''\n  seasons.forEach(season => {\n    seasonHelper += `${season},`\n  }) */\n  \n  //console.log('seasonHelper', seasonHelper)\n  //const playerStats = await axios.get(`${baseUrlDB}/${playerId}/${seasonHelper}/${regularSeasonSelected}/${postSeasonSelected}`)\n  //const playerStats = await axios.get(`${baseUrlDB}/${playerId}/${seasonHelper}`)\n  const playerStats = await axios.get(`${baseUrlDB}/${playerId}`)\n  return playerStats\n}\n\nconst playerStatService = { getPlayerStatsFromApi, getPlayerStatsFromDB }\n\nexport default playerStatService\n","import Select from 'react-select'\nimport playerStatService from '../services/playerStats'\n\nconst SelectPlayer = ({ players, setSelectedPlayer, setPlayerStats, setFetchingData }) => {\n\n  const playerSelect = players.map(player => ({ label: player.fullName, value: player.fullName }))\n\n  const handleSelectedPlayerChange = (playerFullName) => {\n    setSelectedPlayer(playerFullName)\n    getPlayerStats(playerFullName)\n  }\n\n  const getPlayerStats = (playerFullName) => {\n    setFetchingData('loading...')\n    const searchedPlayer = players.find(player => player.fullName === playerFullName)\n    console.log('searched player', searchedPlayer)\n    playerStatService.getPlayerStatsFromDB(searchedPlayer.apiId)\n      .then((response) => {\n        setPlayerStats(response.data.sort((a, b) =>\n          new Date(a.game.date).getTime() - new Date(b.game.date).getTime())\n        )\n        setFetchingData('idle')\n      })\n\n  }\n  return (\n    <div>\n      <Select\n        options={playerSelect}\n        onChange={(option) => handleSelectedPlayerChange(option.value)}\n        placeholder='Select player'\n      />\n    </div>\n  )\n}\n\nexport default SelectPlayer","import Select from 'react-select'\nimport { /* Container,  */Row, Col } from 'react-bootstrap'\n\nconst SelectSeasons = ({\n  setSelectedFirstSeason,\n  setSelectedLastSeason,\n  selectedFirstSeason,\n  selectedLastSeason }) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1980) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  let seasonAscending = 1980\n  const seasonSelectAscending = []\n  while (seasonAscending <= 2020) {\n    seasonSelectAscending.push({ label: seasonAscending.toString(), value: seasonAscending.toString() })\n    seasonAscending++\n  }\n\n  return (\n    <>\n      <Row>\n        <Col sm={2}></Col>\n        <Col sm={4}>\n          <Select\n            options={seasonSelectAscending}\n            onChange={(event) => setSelectedFirstSeason(event.value)}\n            closeMenuOnSelect={true}\n            placeholder={selectedFirstSeason.toString()}\n          />\n        </Col>\n        <Col sm={2}></Col>\n      </Row>\n      <Row>\n        <Col sm={2}></Col>\n        <Col sm={4}>\n          <Select\n            options={seasonSelectDescending}\n            onChange={(event) => setSelectedLastSeason(event.value)}\n            closeMenuOnSelect={true}\n            placeholder={selectedLastSeason}\n          />\n        </Col>\n        <Col sm={2}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default SelectSeasons","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectRegularPost","import { Form } from 'react-bootstrap'\nimport React from 'react'\nimport colors from '../styling/colors'\n//import { AllCheckerCheckbox, Checkbox, CheckboxGroup } from '@createnl/grouped-checkboxes'\n\nconst SelectStats = (\n  {\n    ptsSelected,\n    setPtsSelected,\n    astSelected,\n    setAstSelected,\n    rebSelected,\n    setRebSelected,\n    drebSelected,\n    setDrebSelected,\n    orebSelected,\n    setOrebSelected,\n    blkSelected,\n    setBlkSelected,\n    stlSelected,\n    setStlSelected,\n    turnoverSelected,\n    setTurnoverSelected,\n    fgaSelected,\n    setFgaSelected,\n    fgmSelected,\n    setFgmSelected,\n    fg_pctSelected,\n    setFg_pctSelected,\n    fg3aSelected,\n    setFg3aSelected,\n    fg3mSelected,\n    setFg3mSelected,\n    fg3_pctSelected,\n    setFg3_pctSelected,\n    ftaSelected,\n    setFtaSelected,\n    ftmSelected,\n    setFtmSelected,\n    ft_pctSelected,\n    setFt_pctSelected,\n    pfSelected,\n    minSelected,\n    setMinSelected,\n    setPfSelected\n  }\n) => {\n\n  const cellWidth = 100\n\n  return (\n    <div style={{ color: 'white' }}>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.lightGreyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPtsSelected(!ptsSelected)}\n                  type=\"checkbox\"\n                  label=\"pts\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.brownLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setAstSelected(!astSelected)}\n                  type=\"checkbox\"\n                  label=\"ast\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.oliveLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setRebSelected(!rebSelected)}\n                  type=\"checkbox\"\n                  label=\"reb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.tealLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setBlkSelected(!blkSelected)}\n                  type=\"checkbox\"\n                  label=\"blk\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.navyLine/* , color:'black' */ }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setStlSelected(!stlSelected)}\n                  type=\"checkbox\"\n                  label=\"stl\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.redLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setTurnoverSelected(!turnoverSelected)}\n                  type=\"checkbox\"\n                  label=\"to\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.yellowLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPfSelected(!pfSelected)}\n                  type=\"checkbox\"\n                  label=\"pf\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.orangeLine }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setMinSelected(!minSelected)}\n                  type=\"checkbox\"\n                  label=\"min\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.cyanLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg_pctSelected(!fg_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.magentaLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgaSelected(!fgaSelected)}\n                  type=\"checkbox\"\n                  label=\"fga\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgmSelected(!fgmSelected)}\n                  type=\"checkbox\"\n                  label=\"fgm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.blueLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3_pctSelected(!fg3_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.pinkLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3aSelected(!fg3aSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3a\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.apricotLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3mSelected(!fg3mSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3m\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.purpleLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFt_pctSelected(!ft_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"ft_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.beigeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtaSelected(!ftaSelected)}\n                  type=\"checkbox\"\n                  label=\"fta\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.mintLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtmSelected(!ftmSelected)}\n                  type=\"checkbox\"\n                  label=\"ftm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.limeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setDrebSelected(!drebSelected)}\n                  type=\"checkbox\"\n                  label=\"dreb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greenLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setOrebSelected(!orebSelected)}\n                  type=\"checkbox\"\n                  label=\"oreb\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      <br></br>\n      {/* test to check that the states change correctly */}\n      {/* <p>pts: {ptsSelected.toString()}</p>\n      <p>ast:{astSelected.toString()}</p>\n      <p>reb:{rebSelected.toString()}</p>\n      <p>blk:{blkSelected.toString()}</p>\n      <p>stl:{stlSelected.toString()}</p>\n      <p>turnover:{turnoverSelected.toString()}</p>\n      <p>min:{minSelected.toString()}</p>\n      <p>pf:{pfSelected.toString()}</p>\n      <br></br>\n      <p>dreb:{drebSelected.toString()}</p>\n      <p>oreb:{orebSelected.toString()}</p>\n      <br></br>\n      <p>fg_pct:{fg_pctSelected.toString()}</p>\n      <p>fg3_pct:{fg3_pctSelected.toString()}</p>\n      <p>ft_pct:{ft_pctSelected.toString()}</p>\n      <br></br>\n      <p>fga:{fgaSelected.toString()}</p>\n      <p>fgm:{fgmSelected.toString()}</p>\n      <p>fg3a:{fg3aSelected.toString()}</p>\n      <p>fg3m:{fg3mSelected.toString()}</p>\n      <p>fta:{ftaSelected.toString()}</p>\n      <p>ftm:{ftmSelected.toString()}</p> */}\n    </div>\n  )\n}\n\nexport default SelectStats","export default __webpack_public_path__ + \"static/media/ball_logov3.965d973b.png\";","import ball_logo from '../images/ball_logov3.png'\n\n\nconst Logo = () => {\n\n\n  return (\n    <img\n      /* class=\"card-img-top mb-3 w-auto\" */\n      src={ball_logo}\n      alt='ball_logo'\n      style={{\n        width: '150px',\n        height: '150px'\n      }} />\n  )\n}\n\nexport default Logo","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport teamService from './services/teams'\nimport playerService from './services/players'\nimport PlayerStats from './components/PlayerStats'\nimport SelectPlayer from './components/SelectPlayer'\nimport SelectSeasons from './components/SelectSeasons'\n//import NavigationBar from './components/NavigationBar'\n//import GetStats from './components/GetStats'\nimport SelectRegularPost from './components/SelectRegularPost'\nimport SelectStats from './components/SelectStats'\nimport Logo from './components/Logo'\nimport Loader from 'react-loader-spinner'\n\n\n//import Teams from './components/Teams'\n\nimport {\n  BrowserRouter as Router,\n  /*Switch,\n  Route,\n  Link,\n  Redirect,\n  useRouteMatch,\n  Redirect,\n  useHistory */\n} from 'react-router-dom'\n\nfunction App() {\n  const [players, setPlayers] = useState([])\n  const [playerStats, setPlayerStats] = useState([])\n  const [teams, setTeams] = useState([])\n  const [selectedPlayer, setSelectedPlayer] = useState('')\n  const [selectedFirstSeason, setSelectedFirstSeason] = useState(1980)\n  const [selectedLastSeason, setSelectedLastSeason] = useState(2020)\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n\n  const [ptsSelected, setPtsSelected] = useState(false)\n  const [astSelected, setAstSelected] = useState(false)\n  const [rebSelected, setRebSelected] = useState(false)\n  const [drebSelected, setDrebSelected] = useState(false)\n  const [orebSelected, setOrebSelected] = useState(false)\n  const [blkSelected, setBlkSelected] = useState(false)\n  const [stlSelected, setStlSelected] = useState(false)\n  const [turnoverSelected, setTurnoverSelected] = useState(false)\n  const [fgaSelected, setFgaSelected] = useState(false)\n  const [fgmSelected, setFgmSelected] = useState(false)\n  const [fg_pctSelected, setFg_pctSelected] = useState(false)\n  const [fg3aSelected, setFg3aSelected] = useState(false)\n  const [fg3mSelected, setFg3mSelected] = useState(false)\n  const [fg3_pctSelected, setFg3_pctSelected] = useState(false)\n  const [ftaSelected, setFtaSelected] = useState(false)\n  const [ftmSelected, setFtmSelected] = useState(false)\n  const [ft_pctSelected, setFt_pctSelected] = useState(false)\n  const [pfSelected, setPfSelected] = useState(false)\n  const [minSelected, setMinSelected] = useState(false)\n\n  const [fetchingData, setFetchingData] = useState('idle')\n\n  useEffect(() => {\n    teamService.getTeams()\n      .then((response) => {\n        setTeams(response.data)\n      })\n    //Player sorting should be done in the database query?\n    playerService.getPlayers()\n      .then((response) => {\n        setPlayers(response.map(player => ({ ...player, fullName: `${player.firstName} ${player.lastName}` }))\n          .sort((a, b) => (a.lastName > b.lastName) ? 1 : ((b.lastName > a.lastName) ? -1 : 0)))\n      })\n  }, [])\n\n  return (\n\n    <Router>\n      <div style={{\n        backgroundColor: \"#17202A\",\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center',\n        textAlign: 'center'\n      }}>\n        <div className=\"container\" style={{ paddingTop: '2vh', backgroundColor: \"#17202A\" }} >\n          <Container>\n            <Row>\n              <Col sm={2}></Col>\n              <Col sm={2}>\n                {/* <NavigationBar /> */}\n              </Col>\n              <Col sm={4}>\n                {playerStats.length === 0\n                  ? <Logo />\n                  : <></>}\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n            {/* <br></br> */}\n            <Row className=\"justify-content-md-center\">\n              <Col>{/* <NavigationBar /> */}\n                {playerStats.length > 0\n                  ? <PlayerStats\n                    playerStats={playerStats}\n                    teams={teams}\n                    regularSeasonSelected={regularSeasonSelected}\n                    postSeasonSelected={postSeasonSelected}\n                    ptsSelected={ptsSelected}\n                    astSelected={astSelected}\n                    rebSelected={rebSelected}\n                    drebSelected={drebSelected}\n                    orebSelected={orebSelected}\n                    blkSelected={blkSelected}\n                    stlSelected={stlSelected}\n                    turnoverSelected={turnoverSelected}\n                    fgaSelected={fgaSelected}\n                    fgmSelected={fgmSelected}\n                    fg_pctSelected={fg_pctSelected}\n                    fg3aSelected={fg3aSelected}\n                    fg3mSelected={fg3mSelected}\n                    fg3_pctSelected={fg3_pctSelected}\n                    ftaSelected={ftaSelected}\n                    ftmSelected={ftmSelected}\n                    ft_pctSelected={ft_pctSelected}\n                    pfSelected={pfSelected}\n                    minSelected={minSelected}\n                    selectedFirstSeason={selectedFirstSeason}\n                    selectedLastSeason={selectedLastSeason}\n                  />\n                  : <></>}</Col>\n            </Row>\n            <br></br>\n            <Row >\n              <Col sm={2} ></Col>\n              <Col sm={8} >\n                <SelectStats\n                  ptsSelected={ptsSelected}\n                  setPtsSelected={setPtsSelected}\n                  astSelected={astSelected}\n                  setAstSelected={setAstSelected}\n                  rebSelected={rebSelected}\n                  setRebSelected={setRebSelected}\n                  drebSelected={drebSelected}\n                  setDrebSelected={setDrebSelected}\n                  orebSelected={orebSelected}\n                  setOrebSelected={setOrebSelected}\n                  blkSelected={blkSelected}\n                  setBlkSelected={setBlkSelected}\n                  stlSelected={stlSelected}\n                  setStlSelected={setStlSelected}\n                  turnoverSelected={turnoverSelected}\n                  setTurnoverSelected={setTurnoverSelected}\n                  fgaSelected={fgaSelected}\n                  setFgaSelected={setFgaSelected}\n                  fgmSelected={fgmSelected}\n                  setFgmSelected={setFgmSelected}\n                  fg_pctSelected={fg_pctSelected}\n                  setFg_pctSelected={setFg_pctSelected}\n                  fg3aSelected={fg3aSelected}\n                  setFg3aSelected={setFg3aSelected}\n                  fg3mSelected={fg3mSelected}\n                  setFg3mSelected={setFg3mSelected}\n                  fg3_pctSelected={fg3_pctSelected}\n                  setFg3_pctSelected={setFg3_pctSelected}\n                  ftaSelected={ftaSelected}\n                  setFtaSelected={setFtaSelected}\n                  ftmSelected={ftmSelected}\n                  setFtmSelected={setFtmSelected}\n                  ft_pctSelected={ft_pctSelected}\n                  setFt_pctSelected={setFt_pctSelected}\n                  pfSelected={pfSelected}\n                  setPfSelected={setPfSelected}\n                  minSelected={minSelected}\n                  setMinSelected={setMinSelected} />\n              </Col>\n              <Col sm={2}></Col>\n            </Row>\n            <Row>\n              <Col sm={2}></Col>\n              <Col sm={2}>\n                <SelectRegularPost\n                  regularSeasonSelected={regularSeasonSelected}\n                  postSeasonSelected={postSeasonSelected}\n                  setRegularSeasonSelected={setRegularSeasonSelected}\n                  setPostSeasonSelected={setPostSeasonSelected}\n                />\n              </Col>\n              <Col sm={8}></Col>\n            </Row>\n            <br></br>\n\n            <Row>\n              <Col sm={2} ></Col>\n              <Col sm={2}>\n                {fetchingData === 'loading...'\n                  ? <>\n                    <Loader type=\"Grid\" color=\"white\" height=\"50\" width=\"50\" />\n                    <br></br>\n                  </>\n                  : <></>}\n              </Col>\n              <Col sm={8} ></Col>\n            </Row>\n            <Row>\n              <Col sm={2}></Col>\n              <Col sm={4}>\n                <SelectPlayer\n                  players={players}\n                  setSelectedPlayer={setSelectedPlayer}\n                  setPlayerStats={setPlayerStats}\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                />\n              </Col>\n              <Col sm={4}>\n                {/* <GetStats\n                  selectedPlayer={selectedPlayer}\n                  players={players}\n                  setPlayerStats={setPlayerStats}\n                  regularSeasonSelected={regularSeasonSelected}\n                  postSeasonSelected={postSeasonSelected}\n                /> */}\n              </Col>\n              <Col sm={2}></Col>\n            </Row>\n            <SelectSeasons\n              setSelectedFirstSeason={setSelectedFirstSeason}\n              setSelectedLastSeason={setSelectedLastSeason}\n              selectedFirstSeason={selectedFirstSeason}\n              selectedLastSeason={selectedLastSeason}\n            />\n            <br></br>\n          </Container>\n        </div>\n      </div >\n    </Router >\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}