{"version":3,"sources":["components/common/NavigationBar.js","styling/columnWidths.js","services/trailingMeans.js","styling/colors.js","components/players/PlayerStats.js","services/playerStats.js","components/players/SelectPlayer.js","components/players/SelectSeasons.js","components/players/SelectRegularPost.js","components/players/SelectStats.js","components/players/DescriptionPlayers.js","images/ball_logov6.png","components/common/Logo.js","components/common/Title.js","components/common/Description.js","components/players/SelectTrailingAverage.js","components/players/Players.js","components/teams/SelectTeam.js","services/barChartData.js","services/barChartOptions.js","components/common/BarCharts.js","components/teams/TeamStats.js","components/teams/SelectSeason.js","components/common/SelectRegularPost.js","components/common/SelectPerTotal.js","components/teams/DescriptionTeams.js","components/teams/Teams.js","components/topTen/SelectSeason.js","components/topTen/TopTenStats.js","components/topTen/DescriptionTop20.js","components/topTen/SelectPlayerAmount.js","components/topTen/TopTen.js","components/contact/DescriptionContact.js","services/contact.js","components/contact/Contact.js","components/ComparePlayers/SelectSeason.js","components/ComparePlayers/SelectPlayer.js","components/ComparePlayers/ComparePlayersStats.js","components/ComparePlayers/DescriptionComparePlayers.js","components/ComparePlayers/ComparePlayers.js","components/percentiles/SelectSeason.js","components/percentiles/PercentileStats.js","components/percentiles/DescriptionPercentiles.js","components/percentiles/SelectPlayer.js","components/percentiles/Percentiles.js","services/players.js","services/teams.js","App.js","index.js"],"names":["NavigationBar","padding","Navbar","collapseOnSelect","expand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","as","style","to","xsCenter","countTrailingMean","playerStats","statCategory","trailingGames","trailingAverage","i","length","statsInTrailingGames","j","mean","Math","floor","push","countTrailingMeanPct","attemptsInStatCategory","percentages","totalMadeBaskets","totalAttemptedBaskets","trailingPercentage","trailingMeanService","pts","ast","reb","blk","stl","turnover","min","map","playerStat","Number","split","pf","dreb","oreb","fg_pct","fg3_pct","ft_pct","fga","fgm","fg3a","fg3m","fta","ftm","colors","PlayerStats","startSeasonToShow","endSeasonToShow","teams","postSeasonSelected","ptsSelected","astSelected","rebSelected","drebSelected","orebSelected","blkSelected","stlSelected","turnoverSelected","fgaSelected","fgmSelected","fg_pctSelected","fg3aSelected","fg3mSelected","fg3_pctSelected","ftaSelected","ftmSelected","ft_pctSelected","pfSelected","minSelected","selectedFirstSeason","selectedLastSeason","fetchingData","playerStatsFiltered","filter","game","postseason","seasons","season","startOfCareerSeason","apply","endOfCareerSeason","max","games","filteredDataToShow","data","labels","date","concat","find","team","apiId","visitor_team_id","abbreviation","home_team_id","datasets","label","fill","borderColor","lightGreyDot","pointBackgroundColor","showLine","hidden","lightGreyLine","pointRadius","brownDot","brownLine","oliveDot","oliveLine","tealDot","tealLine","navyDot","navyLine","redDot","redLine","orangeDot","orangeLine","yellowDot","yellowLine","limeDot","limeLine","greenDot","greenLine","cyanDot","cyanLine","blueDot","blueLine","purpleDot","purpleLine","magentaDot","magentaLine","greyDot","greyLine","pinkDot","pinkLine","apricotDot","apricotLine","beigeDot","beigeLine","mintDot","mintLine","Container","color","paddingLeft","Row","textAlign","Col","type","height","width","player","first_name","last_name","options","legend","onClick","e","stopPropagation","display","scales","xAxes","ticks","gridLines","yAxes","beginAtZero","fontColor","fontSize","baseUrl","playerStatService","getPlayerStatsFromApi","playerId","a","seasonsVariable","axios","get","totalPages","meta","total_pages","console","log","playerStatsAllPages","page","playerStatsOnePage","getPlayerStatsFromDB","getTeamStatsFromDB","teamApiId","getPlayerStatsFromDBForASeason","getSummaryStatsFromDBForASeason","SelectPlayer","players","setSelectedPlayer","setPlayerStats","setFetchingData","playerSelect","fullName","value","getPlayerStats","playerFullName","searchedPlayer","then","response","stat","sort","b","Date","getTime","onChange","option","placeholder","SelectSeasons","setSelectedFirstSeason","setSelectedLastSeason","seasonDescending","seasonSelectDescending","toString","seasonAscending","seasonSelectAscending","sm","event","handleSelectedFirstSeasonChange","closeMenuOnSelect","handleSelectedLastSeasonChange","SelectRegularPost","setRegularSeasonSelected","setPostSeasonSelected","useState","radioValue","setRadioValue","ButtonGroup","toggle","size","name","radio","idx","ToggleButton","variant","checked","currentTarget","handleRegularPostChange","SelectStats","setPtsSelected","setAstSelected","setRebSelected","setDrebSelected","setOrebSelected","setBlkSelected","setStlSelected","setTurnoverSelected","setFgaSelected","setFgmSelected","setFg_pctSelected","setFg3aSelected","setFg3mSelected","setFg3_pctSelected","setFtaSelected","setFtmSelected","setFt_pctSelected","setMinSelected","setPfSelected","cellWidth","Form","backgroundColor","Check","inline","DescriptionPlayers","Logo","logoSize","src","ball_logo","alt","Title","Description","SelectTrailingAverage","setTrailingAverage","require","config","Players","setPlayers","selectedPlayer","regularSeasonSelected","useEffect","ReactGa","initialize","process","pageview","window","location","pathname","search","xs","SelectTeam","setSelectedTeam","setTeamStats","selectedSeason","teamSelect","city","getTeamStats","teamName","searchedTeam","barChartDataService","fgPct","stats","playerAmount","fga_total","slice","hoverOffset","fg3Pct","fg3a_total","ftPct","fta_total","totalPoints","pts_total","totalAssists","ast_total","totalRebounds","reb_total","totalBlocks","blk_total","totalSteals","stl_total","totalTurnovers","turnover_total","totalPF","pf_total","totalMinutes","min_total","totalFga","totalFgm","fgm_total","totalFg3a","totalFg3m","fg3m_total","totalFta","totalFtm","ftm_total","perGamePoints","pts_pergame","perGameAssists","ast_pergame","perGameRebounds","reb_pergame","perGameBlock","blk_pergame","perGameSteals","stl_pergame","perGameTurnovers","turnover_pergame","astToTurnover","ast_to_turnover","perGamePF","pf_pergame","perGameMinutes","min_pergame","perGameFga","fga_pergame","perGameFgm","fgm_pergame","perGameFg3a","fg3a_pergame","perGameFg3m","fg3m_pergame","perGameFta","fta_pergame","perGameFtm","ftm_pergame","per36Points","undefined","pts_per36","per36Assists","ast_per36","per36Rebounds","reb_per36","per36Blocks","blk_per36","per36Steals","stl_per36","per36Turnovers","turnover_per36","per36PF","pf_per36","per36Fga","fga_per36","per36Fgm","fgm_per36","per36Fg3a","fg3a_per36","per36Fg3m","fg3m_per36","per36Fta","fta_per36","per36Ftm","ftm_per36","position","plugins","barChartOptionsService","title","text","perGameBlocks","BarCharts","pctSelected","totalSelected","perGameSelected","per36Selected","statsFilteredByPostseason","postSeasonFilteringDone","played_games","dataFgPct","dataFg3Pct","dataFtPct","optionsFgPct","optionsFg3Pct","optionsFtPct","dataTotalPoints","dataTotalAssists","dataTotalRebounds","dataTotalBlocks","dataTotalSteals","dataTotalTurnovers","dataTotalPersonalFouls","dataTotalMinutes","dataTotalFga","dataTotalFgm","dataTotalFg3a","dataTotalFg3m","dataTotalFta","dataTotalFtm","optionsTotalPoints","optionsTotalAssists","optionsTotalRebounds","optionsTotalBlocks","optionsTotalSteals","optionsTotalTurnovers","optionsTotalPersonalFouls","optionsTotalMinutes","optionsTotalFga","optionsTotalFgm","optionsTotalFg3a","optionsTotalFg3m","optionsTotalFta","optionsTotalFtm","dataPerGamePoints","dataPerGameAssists","dataPerGameRebounds","dataPerGameBlocks","dataPerGameSteals","dataPerGameTurnovers","dataAstToTurnover","dataPerGamePersonalFouls","dataPerGameMinutes","dataPerGameFga","dataPerGameFgm","dataPerGameFg3a","dataPerGameFg3m","dataPerGameFta","dataPerGameFtm","optionsPerGamePoints","optionsPerGameAssists","optionsPerGameRebounds","optionsPerGameBlocks","optionsPerGameSteals","optionsPerGameTurnovers","optionsAstToTurnover","optionsPerGamePersonalFouls","optionsPerGameMinutes","optionsPerGameFga","optionsPerGameFgm","optionsPerGameFg3a","optionsPerGameFg3m","optionsPerGameFta","optionsPerGameFtm","dataPer36Points","dataPer36Assists","dataPer36Rebounds","dataPer36Blocks","dataPer36Steals","dataPer36Turnovers","dataPer36PersonalFouls","dataPer36Fga","dataPer36Fgm","dataPer36Fg3a","dataPer36Fg3m","dataPer36Fta","dataPer36Ftm","optionsPer36Points","optionsPer36Assists","optionsPer36Rebounds","optionsPer36Blocks","optionsPer36Steals","optionsPer36Turnovers","optionsPer36PersonalFouls","optionsPer36Fga","optionsPer36Fgm","optionsPer36Fg3a","optionsPer36Fg3m","optionsPer36Fta","optionsPer36Ftm","TeamStats","teamStats","teamStat","playerTotalStats","forEach","playerTotalStat","teamStatsFiltered","playedGames","playerStatsHelper","totalPts","reduce","accumulator","currentValue","totalAst","totalReb","totalStl","totalBlk","totalTurnover","totalPf","totalMin","minutes","timeSplit","seconds","round","isNaN","totalOreb","totalDreb","updatedPlayer","oreb_total","dreb_total","oreb_pergame","dreb_pergame","oreb_per36","dreb_per36","s","SelectSeason","setSelectedSeason","selectedTeam","handleSelectedSeasonChange","SelectPerTotal","setPerGameSelected","setTotalSelected","setPer36Selected","setPctSelected","handlePerGameChange","DescriptionTeams","Teams","setTopTenStats","TopTenStats","topTenStats","DescriptionTop20","SelectPlayerAmount","setPlayerAmount","TopTen","contactService","sendMessage","email","message","post","Contact","setMessage","setEmail","messageSent","setMessageSent","sentEmptyMessage","setSentEmptyMessage","onSubmit","preventDefault","handleSubmit","Group","controlId","Control","target","handleEmailChange","rows","handleMessageChange","Button","DescriptionContact","setSummaryStats","selectedPlayersNames","setFilteredSummaryStats","updatedFilteredSummaryStats","includes","summaryStats","setSelectedPlayersNames","filteredSummaryStats","playerNames","v","indexOf","updatedSelectedPlayersNames","handleSelectedPlayerChange","PlayerComparisonStats","DescriptionPlayerComparison","PlayerComparison","setPercentileStats","percentileStats","PercentileStats","amountPlayersSelected","percentileStatsFiltered","numberOfPlayers","numberOfPlayersPer36","statsForPtsPerGame","statsForAstPerGame","statsForRebPerGame","statsForBlkPerGame","statsForStlPerGame","statsForTurnoverPerGame","statsForAstToTurnover","statsForFgPctPerGame","statsForFg3PctPerGame","statsForFtPctPerGame","statsForPtsPer36","statsForAstPer36","statsForRebPer36","statsForBlkPer36","statsForStlPer36","statsForTurnoverPer36","statsForPtsTotal","statsForAstTotal","statsForRebTotal","statsForBlkTotal","statsForStlTotal","statsForTurnoverTotal","statsSortedPtsPerGame","statsSortedAstPerGame","statsSortedRebPerGame","statsSortedBlkPerGame","statsSortedStlPerGame","statsSortedTurnoverPerGame","statsSortedAstToTurnover","statsSortedFgPctPerGame","statsSortedFg3PctPerGame","statsSortedFtPctPerGame","statsSortedPtsPer36","statsSortedAstPer36","statsSortedRebPer36","statsSortedBlkPer36","statsSortedStlPer36","statsSortedTurnoverPer36","statsSortedPtsTotal","statsSortedAstTotal","statsSortedRebTotal","statsSortedBlkTotal","statsSortedStlTotal","statsSortedTurnoverTotal","percentileStatsToShowPerGame","percentileStatsToShowPer36","percentileStatsToShowTotal","percentileStatsToShowPct","playerName","ptsPerGamePercentile","findIndex","astPerGamePercentile","rebPerGamePercentile","blkPerGamePercentile","stlPerGamePercentile","turnoverPerGamePercentile","astToTurnoverPercentile","fgPctPercentile","fg3PctPercentile","ftPctPercentile","ptsPer36Percentile","astPer36Percentile","rebPer36Percentile","blkPer36Percentile","stlPer36Percentile","turnoverPer36Percentile","ptsTotalPercentile","astTotalPercentile","rebTotalPercentile","blkTotalPercentile","stlTotalPercentile","turnoverTotalPercentile","newPlayerPercentilesPerGame","newPlayerPercentilesPer36","newPlayerPercentilesTotal","newPlayerPercentilesPct","datasetsPerGame","maroonLine","datasetPerGame","showline","dataPerGame","datasetsPer36","datasetPer36","dataPer36","datasetsTotal","datasetTotal","dataTotal","datasetsPct","datasetPct","dataPct","DescriptionPercentiles","setAmountPlayersSelected","playerService","getPlayers","getPlayersForASeason","teamService","getTeams","getTeamsFromDatabase","App","setTeams","firstName","lastName","flexDirection","alignContent","paddingTop","path","ComparePlayers","Percentiles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ca4e809.chunk.js","sourcesContent":["import { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst NavigationBar = () => {\n  const padding = {\n    padding: 5\n  }\n  return (\n    <Navbar collapseOnSelect expand=\"lg\">\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link style={padding} to=\"/playercareer\">player career</Link>\n          </Nav.Link>\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link style={padding} to=\"/topplayers\">top players</Link>\n          </Nav.Link>\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link style={padding} to=\"/compareplayers\">compare players</Link>\n          </Nav.Link>\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link style={padding} to=\"/teams\">teams</Link>\n          </Nav.Link>\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link style={padding} to=\"/percentiles\">percentiles</Link>\n          </Nav.Link>\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link style={padding} to=\"/contactus\">contact us</Link>\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default NavigationBar\n","export const smSide = 2\nexport const xsSide = 1\nexport const smCenter = 8\nexport const xsCenter = 10","\nconst countTrailingMean = (playerStats, statCategory, trailingGames) => {\n  let trailingAverage = []\n  for (let i = 0; i < trailingGames; i++) {\n    trailingAverage[i] = null\n  }\n  for (let i = trailingGames; i < playerStats.length; i++) {\n    let statsInTrailingGames = 0\n    for (let j = 1; j <= trailingGames; j++) {\n      statsInTrailingGames += playerStats[i - trailingGames + j][statCategory];\n    }\n    const mean = Math.floor(statsInTrailingGames / trailingGames * 10) / 10\n    trailingAverage.push(mean)\n  }\n  return trailingAverage\n}\n\nconst countTrailingMeanPct = (playerStats, statCategory, attemptsInStatCategory, trailingGames) => {\n  let percentages = []\n  for (let i = 0; i < trailingGames; i++) {\n    percentages[i] = null\n  }\n\n  for (let i = trailingGames; i < playerStats.length; i++) {\n    let totalMadeBaskets = 0\n    let totalAttemptedBaskets = 0\n    if (playerStats[i][attemptsInStatCategory] === 0) {\n      percentages.push(percentages[i - 1])\n      //playerStats[i][statCategory] = percentages[i - 1]\n    } else {\n      for (let j = 1; j <= trailingGames; j++) {\n        if (playerStats[i - trailingGames + j][attemptsInStatCategory] === 0\n          || playerStats[i - trailingGames + j][attemptsInStatCategory] < playerStats[i - trailingGames + j][statCategory]) {\n          continue\n        }\n        totalMadeBaskets += playerStats[i - trailingGames + j][statCategory]\n        totalAttemptedBaskets += playerStats[i - trailingGames + j][attemptsInStatCategory]\n      }\n      const trailingPercentage = Math.floor(totalMadeBaskets / totalAttemptedBaskets * 100 * 10) / 10\n      percentages.push(trailingPercentage)\n    }\n\n  }\n  return percentages\n}\n\nconst pts = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'pts', trailingGames)\n}\nconst ast = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'ast', trailingGames)\n}\nconst reb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'reb', trailingGames)\n}\nconst blk = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'blk', trailingGames)\n}\nconst stl = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'stl', trailingGames)\n}\nconst turnover = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'turnover', trailingGames)\n}\nconst min = (playerStats, trailingGames) => {\n  playerStats = playerStats.map(playerStat => ({ ...playerStat, min: playerStat.min ? Number(playerStat.min.split(':')[0]) : null }))\n  return countTrailingMean(playerStats, 'min', trailingGames)\n}\nconst pf = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'pf', trailingGames)\n}\nconst dreb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'dreb', trailingGames)\n}\nconst oreb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'oreb', trailingGames)\n}\nconst fg_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'fgm', 'fga', trailingGames)\n}\nconst fg3_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'fg3m', 'fg3a', trailingGames)\n}\nconst ft_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'ftm', 'fta', trailingGames)\n}\n/* const fg_pct = (playerStats) => {\n  return countPct(playerStats, 'fgm', 'fga')\n}\nconst fg3_pct = (playerStats) => {\n  return countPct(playerStats, 'fg3m', 'fg3a')\n}\nconst ft_pct = (playerStats) => {\n  return countPct(playerStats, 'ftm', 'fta')\n} */\nconst fga = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fga', trailingGames)\n}\nconst fgm = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fgm', trailingGames)\n}\nconst fg3a = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fg3a', trailingGames)\n}\nconst fg3m = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fg3m', trailingGames)\n}\nconst fta = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fta', trailingGames)\n}\nconst ftm = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'ftm', trailingGames)\n}\n\n\nconst trailingMeanService = {\n  pts,\n  ast,\n  reb,\n  blk,\n  stl,\n  turnover,\n  min,\n  pf,\n  dreb,\n  oreb,\n  fg_pct,\n  fg3_pct,\n  ft_pct,\n  fga,\n  fgm,\n  fg3a,\n  fg3m,\n  fta,\n  ftm\n}\n\nexport default trailingMeanService","const colors = {\n  'maroonDot': 'rgba(128,0,0,0.3)',\n  'maroonLine': 'rgba(128,0,0,1.0)',\n  'brownDot': 'rgba(170,110,40,0.3)',\n  'brownLine': 'rgba(170,110,40,1.0)',\n  'oliveDot': 'rgba(128,128,0,0.3)',\n  'oliveLine': 'rgba(128,128,0,1.0)',\n  'tealDot': 'rgba(0,128,128,0.3)',\n  'tealLine': 'rgba(0,128,128,1.0)',\n  'navyDot': 'rgba(0,0,128,0.3)',\n  'navyLine': 'rgba(0,0,128,1.0)',\n  'redDot': 'rgba(230,25,75,0.3)',\n  'redLine': 'rgba(230,25,75,1.0)',\n  'orangeDot': 'rgba(245,130,48,0.3)',\n  'orangeLine': 'rgba(245,130,48,1.0)',\n  'yellowDot': 'rgba(255,225,25,0.3)',\n  'yellowLine': 'rgba(255,225,25,1.0)',\n  'limeDot': 'rgba(210,245,60,0.3)',\n  'limeLine': 'rgba(210,245,60,1.0)',\n  'greenDot': 'rgba(60,180,75,0.3)',\n  'greenLine': 'rgba(60,180,75,1.0)',\n  'cyanDot': 'rgba(70,240,240,0.3)',\n  'cyanLine': 'rgba(70,240,240,1.0)',\n  'blueDot': 'rgba(0,130,200,0.3)',\n  'blueLine': 'rgba(0,130,200,1.0)',\n  'purpleDot': 'rgba(145,30,180,0.3)',\n  'purpleLine': 'rgba(145,30,180,1.0)',\n  'magentaDot': 'rgba(240,50,230,0.3)',\n  'magentaLine': 'rgba(240,50,230,1.0)',\n  'greyDot': 'rgba(128,128,128,0.3)',\n  'greyLine': 'rgba(128,128,128,1.0)',\n  'pinkDot': 'rgba(250,190,212,0.3)',\n  'pinkLine': 'rgba(250,190,212,1.0)',\n  'apricotDot': 'rgba(255,215,180,0.3)',\n  'apricotLine': 'rgba(255,215,180,1.0)',\n  'beigeDot': 'rgba(255,250,200,0.3)',\n  'beigeLine': 'rgba(255,250,200,1.0)',\n  'mintDot': 'rgba(170,255,195,0.3)',\n  'mintLine': 'rgba(170,255,195,1.0)',\n  'lavenderDot': 'rgba(220,190,255,0.3)',\n  'lavenderLine': 'rgba(220,190,255,1.0)',\n  'whiteDot': 'rgba(255,255,255,0.3)',\n  'whiteLine': 'rgba(255,255,255,1.0)',\n  'lightGreyDot': 'rgba(211,211,211,0.3)',\n  'lightGreyLine': 'rgba(211,211,211,1.0)'\n}\n\nexport default colors","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Line } from 'react-chartjs-2'\nimport trailingMeanService from '../../services/trailingMeans'\nimport colors from '../../styling/colors'\nimport Loader from 'react-loader-spinner'\n\nconst PlayerStats = (\n  {\n    playerStats,\n    teams,\n    postSeasonSelected,\n    ptsSelected,\n    astSelected,\n    rebSelected,\n    drebSelected,\n    orebSelected,\n    blkSelected,\n    stlSelected,\n    turnoverSelected,\n    fgaSelected,\n    fgmSelected,\n    fg_pctSelected,\n    fg3aSelected,\n    fg3mSelected,\n    fg3_pctSelected,\n    ftaSelected,\n    ftmSelected,\n    ft_pctSelected,\n    pfSelected,\n    minSelected,\n    selectedFirstSeason,\n    selectedLastSeason,\n    fetchingData,\n    trailingAverage\n  }\n) => {\n\n  const options = {\n    legend: {\n      onClick: (e) => e.stopPropagation(),\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        ticks: {\n          display: false\n        },\n        gridLines: {\n          display: false ,\n          color: \"grey\"\n        },\n      }],\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          fontColor: 'white',\n          fontSize: 14,\n        },\n        gridLines: {\n          display: true ,\n          color: \"grey\"\n        },\n      }]\n    }\n  }\n\n  const playerStatsFiltered = playerStats.filter(playerStat => playerStat.game.postseason === postSeasonSelected)\n\n  const seasons = playerStatsFiltered.map(playerStat => playerStat.game.season)\n  const startOfCareerSeason = Math.min.apply(Math, seasons)\n  const endOfCareerSeason = Math.max.apply(Math, seasons)\n\n  let startSeasonToShow\n  let endSeasonToShow\n\n  if (selectedFirstSeason > startOfCareerSeason) {\n    startSeasonToShow = selectedFirstSeason\n  } else {\n    startSeasonToShow = startOfCareerSeason\n  }\n\n  if (selectedLastSeason < endOfCareerSeason) {\n    endSeasonToShow = selectedLastSeason\n  } else {\n    endSeasonToShow = endOfCareerSeason\n  }\n\n\n  const games = playerStatsFiltered.filter(playerStat => playerStat.game.season >= selectedFirstSeason && playerStat.game.season <= selectedLastSeason).length\n  const filteredDataToShow = playerStats.filter(\n    playerStat =>\n      playerStat.game.postseason === postSeasonSelected\n      && playerStat.game.season >= selectedFirstSeason\n      && playerStat.game.season <= selectedLastSeason\n  )\n\n  const data = {\n    labels: filteredDataToShow\n      .map(playerStat => playerStat.game.date.split('T')[0]\n        .concat('\\n')\n        .concat(teams.find(team => team.apiId === playerStat.game.visitor_team_id).abbreviation)\n        .concat('@')\n        .concat(teams.find(team => team.apiId === playerStat.game.home_team_id).abbreviation)\n        .concat(playerStat.game.postseason ? ' POST' : ' REG')),\n    datasets: [\n      {\n        label: 'pts',\n        data: filteredDataToShow.map(playerStat => playerStat.pts),\n        fill: false,\n        borderColor: colors.lightGreyDot,\n        pointBackgroundColor: colors.lightGreyDot,\n        showLine: false,\n        hidden: !ptsSelected\n      },\n      {\n        label: 'pts trailing mean',\n\n        fill: false,\n        borderColor: colors.lightGreyLine,\n        pointBackgroundColor: colors.lightGreyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pts(filteredDataToShow, trailingAverage),\n        hidden: !ptsSelected\n      },\n      {\n        label: 'ast',\n        data: filteredDataToShow.map(playerStat => playerStat.ast),\n        fill: false,\n        borderColor: colors.brownDot,\n        pointBackgroundColor: colors.brownDot,\n        showLine: false,\n        hidden: !astSelected\n      },\n      {\n        label: 'ast trailing mean',\n\n        fill: false,\n        borderColor: colors.brownLine,\n        pointBackgroundColor: colors.brownLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ast(filteredDataToShow, trailingAverage),\n        hidden: !astSelected\n      },\n      {\n        label: 'reb',\n        data: filteredDataToShow.map(playerStat => playerStat.reb),\n        fill: false,\n        borderColor: colors.oliveDot,\n        pointBackgroundColor: colors.oliveDot,\n        showLine: false,\n        hidden: !rebSelected\n      },\n      {\n        label: 'reb trailing mean',\n\n        fill: false,\n        borderColor: colors.oliveLine,\n        pointBackgroundColor: colors.oliveLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.reb(filteredDataToShow, trailingAverage),\n        hidden: !rebSelected\n      },\n      {\n        label: 'blk',\n        data: filteredDataToShow.map(playerStat => playerStat.blk),\n        fill: false,\n        borderColor: colors.tealDot,\n        pointBackgroundColor: colors.tealDot,\n        showLine: false,\n        hidden: !blkSelected\n      },\n      {\n        label: 'blk trailing mean',\n\n        fill: false,\n        borderColor: colors.tealLine,\n        pointBackgroundColor: colors.tealLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.blk(filteredDataToShow, trailingAverage),\n        hidden: !blkSelected\n      },\n      {\n        label: 'stl',\n        data: filteredDataToShow.map(playerStat => playerStat.stl),\n        fill: false,\n        borderColor: colors.navyDot,\n        pointBackgroundColor: colors.navyDot,\n        showLine: false,\n        hidden: !stlSelected\n      },\n      {\n        label: 'stl trailing mean',\n\n        fill: false,\n        borderColor: colors.navyLine,\n        pointBackgroundColor: colors.navyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.stl(filteredDataToShow, trailingAverage),\n        hidden: !stlSelected\n      },\n      {\n        label: 'turnover',\n        data: filteredDataToShow.map(playerStat => playerStat.turnover),\n        fill: false,\n        borderColor: colors.redDot,\n        pointBackgroundColor: colors.redDot,\n        showLine: false,\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'turnover trailing mean',\n        fill: false,\n        borderColor: colors.redLine,\n        pointBackgroundColor: colors.redLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.turnover(filteredDataToShow, trailingAverage),\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'min',\n        data: filteredDataToShow.map(playerStat => playerStat.min ? Number(playerStat.min.split(':')[0]) : null),\n        fill: false,\n        borderColor: colors.orangeDot,\n        pointBackgroundColor: colors.orangeDot,\n        showLine: false,\n        hidden: !minSelected\n      },\n      {\n        label: 'min trailing mean',\n        fill: false,\n        borderColor: colors.orangeLine,\n        pointBackgroundColor: colors.orangeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.min(filteredDataToShow, trailingAverage),\n        hidden: !minSelected\n      },\n      {\n        label: 'pf',\n        data: filteredDataToShow.map(playerStat => playerStat.pf),\n        fill: false,\n        borderColor: colors.yellowDot,\n        pointBackgroundColor: colors.yellowDot,\n        showLine: false,\n        hidden: !pfSelected\n      },\n      {\n        label: 'pf trailing mean',\n        fill: false,\n        borderColor: colors.yellowLine,\n        pointBackgroundColor: colors.yellowLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pf(filteredDataToShow, trailingAverage),\n        hidden: !pfSelected\n      },\n      {\n        label: 'dreb',\n        data: filteredDataToShow.map(playerStat => playerStat.dreb),\n        fill: false,\n        borderColor: colors.limeDot,\n        pointBackgroundColor: colors.limeDot,\n        showLine: false,\n        hidden: !drebSelected\n      },\n      {\n        label: 'dreb trailing mean',\n        fill: false,\n        borderColor: colors.limeLine,\n        pointBackgroundColor: colors.limeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.dreb(filteredDataToShow, trailingAverage),\n        hidden: !drebSelected\n      },\n      {\n        label: 'oreb',\n        data: filteredDataToShow.map(playerStat => playerStat.oreb),\n        fill: false,\n        borderColor: colors.greenDot,\n        pointBackgroundColor: colors.greenDot,\n        showLine: false,\n        hidden: !orebSelected\n      },\n      {\n        label: 'oreb trailing mean',\n        fill: false,\n        borderColor: colors.greenLine,\n        pointBackgroundColor: colors.greenLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.oreb(filteredDataToShow, trailingAverage),\n        hidden: !orebSelected\n      },\n      {\n        label: 'fg_pct',\n        data: filteredDataToShow.map(playerStat => playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct),\n        fill: false,\n        borderColor: colors.cyanDot,\n        pointBackgroundColor: colors.cyanDot,\n        showLine: false,\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg_pct trailing mean',\n        fill: false,\n        borderColor: colors.cyanLine,\n        pointBackgroundColor: colors.cyanLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg_pct(filteredDataToShow\n          .map(playerStat => ({ ...playerStat, fg_pct: playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct })), trailingAverage),\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg3_pct',\n        data: filteredDataToShow.map(playerStat => playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct),\n        fill: false,\n        borderColor: colors.blueDot,\n        pointBackgroundColor: colors.blueDot,\n        showLine: false,\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'fg3_pct trailing mean',\n        fill: false,\n        borderColor: colors.blueLine,\n        pointBackgroundColor: colors.blueLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3_pct(filteredDataToShow\n          .map(playerStat => ({ ...playerStat, fg3_pct: playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct })), trailingAverage),\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'ft_pct',\n        data: filteredDataToShow.map(playerStat => playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct),\n        fill: false,\n        borderColor: colors.purpleDot,\n        pointBackgroundColor: colors.purpleDot,\n        showLine: false,\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'ft_pct trailing mean',\n        fill: false,\n        borderColor: colors.purpleLine,\n        pointBackgroundColor: colors.purpleLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ft_pct(filteredDataToShow\n          .map(playerStat => ({\n            ...playerStat,\n            ft_pct: (playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct)\n          })), trailingAverage),\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'fga',\n        data: filteredDataToShow.map(playerStat => playerStat.fga),\n        fill: false,\n        borderColor: colors.magentaDot,\n        pointBackgroundColor: colors.magentaDot,\n        showLine: false,\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fga trailing mean',\n        fill: false,\n        borderColor: colors.magentaLine,\n        pointBackgroundColor: colors.magentaLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fga(filteredDataToShow, trailingAverage),\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fgm',\n        data: filteredDataToShow.map(playerStat => playerStat.fgm),\n        fill: false,\n        borderColor: colors.greyDot,\n        pointBackgroundColor: colors.greyDot,\n        showLine: false,\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fgm trailing mean',\n        fill: false,\n        borderColor: colors.greyLine,\n        pointBackgroundColor: colors.greyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fgm(filteredDataToShow, trailingAverage),\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fg3a',\n        data: filteredDataToShow.map(playerStat => playerStat.fg3a),\n        fill: false,\n        borderColor: colors.pinkDot,\n        pointBackgroundColor: colors.pinkDot,\n        showLine: false,\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3a trailing mean',\n        fill: false,\n        borderColor: colors.pinkLine,\n        pointBackgroundColor: colors.pinkLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3a(filteredDataToShow, trailingAverage),\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3m',\n        data: filteredDataToShow.map(playerStat => playerStat.fg3m),\n        fill: false,\n        borderColor: colors.apricotDot,\n        pointBackgroundColor: colors.apricotDot,\n        showLine: false,\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fg3m trailing mean',\n        fill: false,\n        borderColor: colors.apricotLine,\n        pointBackgroundColor: colors.apricotLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3m(filteredDataToShow, trailingAverage),\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fta',\n        data: filteredDataToShow.map(playerStat => playerStat.fta),\n        fill: false,\n        borderColor: colors.beigeDot,\n        pointBackgroundColor: colors.beigeDot,\n        showLine: false,\n        hidden: !ftaSelected\n      },\n      {\n        label: 'fta trailing mean',\n        fill: false,\n        borderColor: colors.beigeLine,\n        pointBackgroundColor: colors.beigeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fta(filteredDataToShow, trailingAverage),\n        hidden: !ftaSelected\n      },\n      {\n        label: 'ftm',\n        data: filteredDataToShow.map(playerStat => playerStat.ftm),\n        fill: false,\n        borderColor: colors.mintDot,\n        pointBackgroundColor: colors.mintDot,\n        showLine: false,\n        hidden: !ftmSelected\n      },\n      {\n        label: 'ftm trailing mean',\n        fill: false,\n        borderColor: colors.mintLine,\n        pointBackgroundColor: colors.mintLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ftm(filteredDataToShow, trailingAverage),\n        hidden: !ftmSelected\n      },\n    ],\n  }\n\n  return (\n    <div>\n      <Container style={{ color: 'white', paddingLeft: '30px' }}>\n        <Row style={{ textAlign: 'center' }}>\n          {fetchingData\n            ? <Col>\n              <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n              <br></br>\n            </Col>\n            : <>\n              <Col>\n                {games !== 0\n                  ? <div>\n                    {playerStats[0].player.first_name} {playerStats[0].player.last_name}, {startSeasonToShow} - {endSeasonToShow}, {games} games\n                    </div>\n                  : <div>\n                    {playerStats[0].player.first_name} {playerStats[0].player.last_name}, {games} games\n                  </div>}\n              </Col>\n            </>}\n        </Row>\n      </Container>\n      <div className='chart'>\n        <Line\n          data={data}\n          options={options}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default PlayerStats","import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/stats'\nconst baseUrlDB = '/api/statsdb/statsfromdb'\nconst baseUrlDBTeam = '/api/statsdb/teamstatsfromdb'\nconst baseUrlDBPlayerStatsForASeason = '/api/statsdb/playerstatsforaseasonfromdb'\nconst baseUrlDBSummaryStatsForASeason = '/api/statsdb/summarystatsforaseasonfromdb'\n\nconst getPlayerStatsFromApi = async (seasons, playerId) => {\n  let seasonsVariable = ''\n  for (let i = 0; i < seasons.length; i++) {\n    seasonsVariable += '&seasons[]='\n    seasonsVariable += seasons[i]\n  }\n  const playerStats = await axios.get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100`)\n  const totalPages = playerStats.data.meta.total_pages\n  console.log('totalPages', totalPages)\n\n  let playerStatsAllPages = []\n\n  for (let page = 1; page <= totalPages; page++) {\n    console.log('getting stats from page', page)\n    const playerStatsOnePage = await axios\n      .get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100&page=${page}`)\n    playerStatsAllPages = playerStatsAllPages.concat(playerStatsOnePage.data.data)\n  }\n  console.log(playerStatsAllPages)\n  return playerStatsAllPages\n}\n\nconst getPlayerStatsFromDB = async (playerId) => {\n  const playerStats = await axios.get(`${baseUrlDB}/${playerId}`)\n  return playerStats\n}\n\nconst getTeamStatsFromDB = async (teamApiId, season) => {\n  const playerStats = await axios.get(`${baseUrlDBTeam}/${teamApiId}/${season}`)\n  return playerStats\n}\n\nconst getPlayerStatsFromDBForASeason = async (playerId, season) => {\n  const playerStats = await axios.get(`${baseUrlDBPlayerStatsForASeason}/${playerId}/${season}`)\n  return playerStats\n}\n\nconst getSummaryStatsFromDBForASeason = async (season) => {\n  const playerStats = await axios.get(`${baseUrlDBSummaryStatsForASeason}/${season}`)\n  return playerStats\n}\n\nconst playerStatService = {\n  getPlayerStatsFromApi,\n  getPlayerStatsFromDB,\n  getTeamStatsFromDB,\n  getPlayerStatsFromDBForASeason,\n  getSummaryStatsFromDBForASeason\n}\n\nexport default playerStatService\n","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\nconst SelectPlayer = ({ players, setSelectedPlayer, setPlayerStats, setFetchingData }) => {\n\n  const playerSelect = players.map(player => ({ label: player.fullName, value: player.fullName }))\n\n  const handleSelectedPlayerChange = (playerFullName) => {\n    setSelectedPlayer(playerFullName)\n    getPlayerStats(playerFullName)\n  }\n\n  const getPlayerStats = (playerFullName) => {\n    setFetchingData(true)\n    const searchedPlayer = players.find(player => player.fullName === playerFullName)\n    playerStatService.getPlayerStatsFromDB(searchedPlayer.apiId, playerFullName)\n      .then((response) => {\n        setPlayerStats(response.data.filter(stat => stat.min !== '0' && stat.min !== '').sort((a, b) =>\n          new Date(a.game.date).getTime() - new Date(b.game.date).getTime())\n        )\n        setFetchingData(false)\n      })\n\n  }\n  return (\n    <div>\n      <Select\n        options={playerSelect}\n        onChange={(option) => handleSelectedPlayerChange(option.value)}\n        placeholder='Select player'\n      />\n    </div>\n  )\n}\n\nexport default SelectPlayer","import Select from 'react-select'\nimport { smSide, smCenter } from '../../styling/columnWidths'\nimport { Row, Col } from 'react-bootstrap'\n\nconst SelectSeasons = ({\n  selectedFirstSeason,\n  selectedLastSeason,\n  setSelectedFirstSeason,\n  setSelectedLastSeason\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  let seasonAscending = 1979\n  const seasonSelectAscending = []\n  while (seasonAscending <= 2020) {\n    seasonSelectAscending.push({ label: seasonAscending.toString(), value: seasonAscending.toString() })\n    seasonAscending++\n  }\n\n  const handleSelectedFirstSeasonChange = (event) => {\n    console.log('event.value:', event.value)\n    console.log('Number(event.value):', Number(event.value))\n    console.log('selectedLastSeason:', selectedLastSeason)\n    if (Number(event.value) > selectedLastSeason) {\n      setSelectedFirstSeason(selectedLastSeason)\n      setSelectedLastSeason(Number(event.value))\n    } else {\n      setSelectedFirstSeason(Number(event.value))\n    }\n  }\n\n  const handleSelectedLastSeasonChange = (event) => {\n    if (Number(event.value) < selectedFirstSeason) {\n      setSelectedLastSeason(selectedFirstSeason)\n      setSelectedFirstSeason(Number(event.value))\n    } else {\n      setSelectedLastSeason(Number(event.value))\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Col sm={smSide}></Col>\n        <Col sm={smCenter}>\n          <Select\n            options={seasonSelectAscending}\n            onChange={(event) => handleSelectedFirstSeasonChange(event)}\n            closeMenuOnSelect={true}\n            placeholder={selectedFirstSeason.toString()}\n          />\n        </Col>\n        <Col sm={smSide}></Col>\n      </Row>\n      <Row>\n        <Col sm={smSide}></Col>\n        <Col sm={smCenter}>\n          <Select\n            options={seasonSelectDescending}\n            onChange={(event) => handleSelectedLastSeasonChange(event)}\n            closeMenuOnSelect={true}\n            placeholder={selectedLastSeason}\n          />\n        </Col>\n        <Col sm={smSide}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default SelectSeasons","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n    </>\n  )\n}\n\nexport default SelectRegularPost","import { Form } from 'react-bootstrap'\nimport React from 'react'\nimport colors from '../../styling/colors'\n\nconst SelectStats = (\n  {\n    ptsSelected,\n    setPtsSelected,\n    astSelected,\n    setAstSelected,\n    rebSelected,\n    setRebSelected,\n    drebSelected,\n    setDrebSelected,\n    orebSelected,\n    setOrebSelected,\n    blkSelected,\n    setBlkSelected,\n    stlSelected,\n    setStlSelected,\n    turnoverSelected,\n    setTurnoverSelected,\n    fgaSelected,\n    setFgaSelected,\n    fgmSelected,\n    setFgmSelected,\n    fg_pctSelected,\n    setFg_pctSelected,\n    fg3aSelected,\n    setFg3aSelected,\n    fg3mSelected,\n    setFg3mSelected,\n    fg3_pctSelected,\n    setFg3_pctSelected,\n    ftaSelected,\n    setFtaSelected,\n    ftmSelected,\n    setFtmSelected,\n    ft_pctSelected,\n    setFt_pctSelected,\n    pfSelected,\n    minSelected,\n    setMinSelected,\n    setPfSelected\n  }\n) => {\n\n  const cellWidth = 100\n\n  return (\n    <div style={{ color: 'white' }}>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.lightGreyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPtsSelected(!ptsSelected)}\n                  type=\"checkbox\"\n                  label=\"pts\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.brownLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setAstSelected(!astSelected)}\n                  type=\"checkbox\"\n                  label=\"ast\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.oliveLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setRebSelected(!rebSelected)}\n                  type=\"checkbox\"\n                  label=\"reb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.tealLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setBlkSelected(!blkSelected)}\n                  type=\"checkbox\"\n                  label=\"blk\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.navyLine/* , color:'black' */ }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setStlSelected(!stlSelected)}\n                  type=\"checkbox\"\n                  label=\"stl\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.redLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setTurnoverSelected(!turnoverSelected)}\n                  type=\"checkbox\"\n                  label=\"to\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.yellowLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPfSelected(!pfSelected)}\n                  type=\"checkbox\"\n                  label=\"pf\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.orangeLine }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setMinSelected(!minSelected)}\n                  type=\"checkbox\"\n                  label=\"min\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.cyanLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg_pctSelected(!fg_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.magentaLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgaSelected(!fgaSelected)}\n                  type=\"checkbox\"\n                  label=\"fga\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgmSelected(!fgmSelected)}\n                  type=\"checkbox\"\n                  label=\"fgm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.blueLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3_pctSelected(!fg3_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.pinkLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3aSelected(!fg3aSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3a\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.apricotLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3mSelected(!fg3mSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3m\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.purpleLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFt_pctSelected(!ft_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"ft_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.beigeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtaSelected(!ftaSelected)}\n                  type=\"checkbox\"\n                  label=\"fta\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.mintLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtmSelected(!ftmSelected)}\n                  type=\"checkbox\"\n                  label=\"ftm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.limeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setDrebSelected(!drebSelected)}\n                  type=\"checkbox\"\n                  label=\"dreb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greenLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setOrebSelected(!orebSelected)}\n                  type=\"checkbox\"\n                  label=\"oreb\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      <br></br>\n      {/* test to check that the states change correctly */}\n      {/* <p>pts: {ptsSelected.toString()}</p>\n      <p>ast:{astSelected.toString()}</p>\n      <p>reb:{rebSelected.toString()}</p>\n      <p>blk:{blkSelected.toString()}</p>\n      <p>stl:{stlSelected.toString()}</p>\n      <p>turnover:{turnoverSelected.toString()}</p>\n      <p>min:{minSelected.toString()}</p>\n      <p>pf:{pfSelected.toString()}</p>\n      <br></br>\n      <p>dreb:{drebSelected.toString()}</p>\n      <p>oreb:{orebSelected.toString()}</p>\n      <br></br>\n      <p>fg_pct:{fg_pctSelected.toString()}</p>\n      <p>fg3_pct:{fg3_pctSelected.toString()}</p>\n      <p>ft_pct:{ft_pctSelected.toString()}</p>\n      <br></br>\n      <p>fga:{fgaSelected.toString()}</p>\n      <p>fgm:{fgmSelected.toString()}</p>\n      <p>fg3a:{fg3aSelected.toString()}</p>\n      <p>fg3m:{fg3mSelected.toString()}</p>\n      <p>fta:{ftaSelected.toString()}</p>\n      <p>ftm:{ftmSelected.toString()}</p> */}\n    </div>\n  )\n}\n\nexport default SelectStats","\nconst DescriptionPlayers = () => {\n  return (\n    <div style={{color:'white', textAlign:'center',}}>\n      <br></br>\n      {/* <br></br> */}\n      <p>This page shows a player's stats throughout his career.\n        You can select the stats, seasons, regular or post season, and how many\n        games are counted into the trailing average.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionPlayers\n","export default __webpack_public_path__ + \"static/media/ball_logov6.16f028e6.png\";","//import ball_logo from '../../images/ball_logov6.png'\nimport ball_logo from '../../images/ball_logov6.png'\n\nconst Logo = () => {\n\n  const logoSize = '150px'\n\n  return (\n    <img\n      src={ball_logo}\n      alt='ball_logo'\n      style={{\n        width: logoSize,\n        height: logoSize\n      }} />\n\n  )\n}\n\nexport default Logo","const Title = () => {\n\n  return (\n    <>\n      <div style={{ color: 'white' }}>\n        <h2>BBALLCHART</h2>\n      </div>\n    </>\n  )\n}\n\nexport default Title","const Description = () => {\n\n  return (\n    <>\n      <div style={{ color: 'white' }}>\n        <h5>Visualizing NBA stats</h5>\n      </div>\n    </>\n  )\n}\n\nexport default Description","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectTrailingAverage = ({ setTrailingAverage }) => {\n\n  const [radioValue, setRadioValue] = useState('25');\n\n  const radios = [\n    { name: '5', value: '5' },\n    { name: '10', value: '10' },\n    { name: '25', value: '25' },\n    { name: '50', value: '50' },\n    { name: '100', value: '100' },\n  ];\n\n  const handleRegularPostChange = (e) => {\n    /* if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    } */\n    setRadioValue(e.currentTarget.value)\n    setTrailingAverage(Number(e.currentTarget.value))\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectTrailingAverage","import React, { useState, useEffect } from 'react'\nimport { smSide, xsSide, smCenter, xsCenter } from '../../styling/columnWidths'\nimport { Row, Col } from 'react-bootstrap'\nimport PlayerStats from './PlayerStats'\nimport SelectPlayer from './SelectPlayer'\nimport SelectSeasons from './SelectSeasons'\nimport SelectRegularPost from './SelectRegularPost'\nimport SelectStats from './SelectStats'\nimport DescriptionPlayers from './DescriptionPlayers'\nimport Logo from '../common/Logo'\nimport Title from '../common/Title'\nimport Description from '../common/Description'\nimport SelectTrailingAverage from './SelectTrailingAverage'\nimport Loader from 'react-loader-spinner'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\n\nconst Players = ({ fetchingData, setFetchingData, players, setPlayers, teams }) => {\n\n  const [playerStats, setPlayerStats] = useState([])\n  const [selectedPlayer, setSelectedPlayer] = useState('')\n  const [selectedFirstSeason, setSelectedFirstSeason] = useState(1979)\n  const [selectedLastSeason, setSelectedLastSeason] = useState(2020)\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(false)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [ptsSelected, setPtsSelected] = useState(false)\n  const [astSelected, setAstSelected] = useState(false)\n  const [rebSelected, setRebSelected] = useState(false)\n  const [drebSelected, setDrebSelected] = useState(false)\n  const [orebSelected, setOrebSelected] = useState(false)\n  const [blkSelected, setBlkSelected] = useState(false)\n  const [stlSelected, setStlSelected] = useState(false)\n  const [turnoverSelected, setTurnoverSelected] = useState(false)\n  const [fgaSelected, setFgaSelected] = useState(false)\n  const [fgmSelected, setFgmSelected] = useState(false)\n  const [fg_pctSelected, setFg_pctSelected] = useState(false)\n  const [fg3aSelected, setFg3aSelected] = useState(false)\n  const [fg3mSelected, setFg3mSelected] = useState(false)\n  const [fg3_pctSelected, setFg3_pctSelected] = useState(false)\n  const [ftaSelected, setFtaSelected] = useState(false)\n  const [ftmSelected, setFtmSelected] = useState(false)\n  const [ft_pctSelected, setFt_pctSelected] = useState(false)\n  const [pfSelected, setPfSelected] = useState(false)\n  const [minSelected, setMinSelected] = useState(false)\n  const [trailingAverage, setTrailingAverage] = useState(25)\n\n  useEffect(() => {\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  return (\n    <>\n      <Row>\n        <Col sm={smSide}></Col>\n        <Col sm={smCenter}>\n          <SelectPlayer\n            players={players}\n            setSelectedPlayer={setSelectedPlayer}\n            setPlayerStats={setPlayerStats}\n            fetchingData={fetchingData}\n            setFetchingData={setFetchingData}\n          />\n        </Col>\n        <Col sm={smSide}></Col>\n      </Row>\n      {selectedPlayer !== ''\n        ? <>\n          <SelectSeasons\n            setSelectedFirstSeason={setSelectedFirstSeason}\n            setSelectedLastSeason={setSelectedLastSeason}\n            selectedFirstSeason={selectedFirstSeason}\n            selectedLastSeason={selectedLastSeason}\n          />\n        </>\n        : <></>}\n      <br></br>\n      {playerStats.length === 0 && !fetchingData\n        ? <>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <br></br>\n              <Logo />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <Title />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <Description />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <DescriptionPlayers />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n        </>\n        : <></>}\n      <Row style={{ textAlign: 'center' }}>\n        <Col sm={smSide} xs={xsSide}></Col>\n        <Col sm={smCenter} xs={xsCenter}>\n          {fetchingData && playerStats.length === 0\n            ? <>\n              <br></br>\n              <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n              <br></br>\n              <br></br>\n            </>\n            : <></>}\n        </Col>\n        <Col sm={smSide} xs={xsSide}></Col>\n      </Row>\n      {selectedPlayer !== ''\n        ? <>\n          <Row className=\"justify-content-md-center\">\n            <Col>\n              {playerStats.length > 0\n                ? <PlayerStats\n                  playerStats={playerStats}\n                  teams={teams}\n                  regularSeasonSelected={regularSeasonSelected}\n                  postSeasonSelected={postSeasonSelected}\n                  ptsSelected={ptsSelected}\n                  astSelected={astSelected}\n                  rebSelected={rebSelected}\n                  drebSelected={drebSelected}\n                  orebSelected={orebSelected}\n                  blkSelected={blkSelected}\n                  stlSelected={stlSelected}\n                  turnoverSelected={turnoverSelected}\n                  fgaSelected={fgaSelected}\n                  fgmSelected={fgmSelected}\n                  fg_pctSelected={fg_pctSelected}\n                  fg3aSelected={fg3aSelected}\n                  fg3mSelected={fg3mSelected}\n                  fg3_pctSelected={fg3_pctSelected}\n                  ftaSelected={ftaSelected}\n                  ftmSelected={ftmSelected}\n                  ft_pctSelected={ft_pctSelected}\n                  pfSelected={pfSelected}\n                  minSelected={minSelected}\n                  selectedFirstSeason={selectedFirstSeason}\n                  selectedLastSeason={selectedLastSeason}\n                  fetchingData={fetchingData}\n                  trailingAverage={trailingAverage}\n                />\n                : <></>}</Col>\n          </Row>\n          <br></br>\n          <Row /* style={{ textAlign: 'center' }} */>\n            <Col sm={3} ></Col>\n            <Col sm={7} >\n              <SelectStats\n                ptsSelected={ptsSelected}\n                setPtsSelected={setPtsSelected}\n                astSelected={astSelected}\n                setAstSelected={setAstSelected}\n                rebSelected={rebSelected}\n                setRebSelected={setRebSelected}\n                drebSelected={drebSelected}\n                setDrebSelected={setDrebSelected}\n                orebSelected={orebSelected}\n                setOrebSelected={setOrebSelected}\n                blkSelected={blkSelected}\n                setBlkSelected={setBlkSelected}\n                stlSelected={stlSelected}\n                setStlSelected={setStlSelected}\n                turnoverSelected={turnoverSelected}\n                setTurnoverSelected={setTurnoverSelected}\n                fgaSelected={fgaSelected}\n                setFgaSelected={setFgaSelected}\n                fgmSelected={fgmSelected}\n                setFgmSelected={setFgmSelected}\n                fg_pctSelected={fg_pctSelected}\n                setFg_pctSelected={setFg_pctSelected}\n                fg3aSelected={fg3aSelected}\n                setFg3aSelected={setFg3aSelected}\n                fg3mSelected={fg3mSelected}\n                setFg3mSelected={setFg3mSelected}\n                fg3_pctSelected={fg3_pctSelected}\n                setFg3_pctSelected={setFg3_pctSelected}\n                ftaSelected={ftaSelected}\n                setFtaSelected={setFtaSelected}\n                ftmSelected={ftmSelected}\n                setFtmSelected={setFtmSelected}\n                ft_pctSelected={ft_pctSelected}\n                setFt_pctSelected={setFt_pctSelected}\n                pfSelected={pfSelected}\n                setPfSelected={setPfSelected}\n                minSelected={minSelected}\n                setMinSelected={setMinSelected} />\n            </Col>\n            <Col sm={2}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide}></Col>\n            <Col sm={smCenter}>\n              <div style={{ color: 'white' }}>trailing average</div>\n              <SelectTrailingAverage\n                setTrailingAverage={setTrailingAverage} />\n            </Col>\n            <Col sm={smSide}></Col>\n          </Row>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide}></Col>\n            <Col sm={smCenter}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n            <Col sm={smSide}></Col>\n          </Row>\n        </>\n        : <></>}\n    </>\n  )\n}\n\nexport default Players","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\nconst SelectTeam = ({ teams, setSelectedTeam, setTeamStats, setFetchingData, selectedSeason }) => {\n\n  //const playerSelect = players.map(player => ({ label: player.fullName, value: player.fullName }))\n\n  const teamSelect = teams.map(team => ({ label: `${team.city} ${team.name}`, value: team.name }))\n\n  const handleSelectedTeamChange = (teamName) => {\n    setSelectedTeam(teamName)\n    getTeamStats(teamName)\n  }\n\n  const getTeamStats = (teamName) => {\n    setFetchingData(true)\n    const searchedTeam = teams.find(team => team.name === teamName)\n    playerStatService.getTeamStatsFromDB(searchedTeam.apiId, selectedSeason)\n      .then((response) => {\n        setTeamStats(response.data)\n        setFetchingData(false)\n      })\n\n  }\n  return (\n    <div>\n      <Select\n        options={teamSelect}\n        onChange={(option) => handleSelectedTeamChange(option.value)}\n        placeholder='Select team'\n      />\n    </div>\n  )\n}\n\nexport default SelectTeam","import colors from '../styling/colors'\n\nconst backgroundColor =\n  [\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n    colors.orangeLine,\n    colors.yellowLine,\n    colors.greenLine,\n    colors.magentaLine,\n    colors.cyanLine,\n  ]\n\n\n// Pct //////////////////////////////////////////////////////////\nconst fgPct = (stats, playerAmount) => {\n  const dataFgPct = {\n    labels: stats\n      .filter(stat => stat.fga_total >= 50)\n      .sort((a, b) => b.fg_pct - a.fg_pct)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg %',\n      data: stats\n        .filter(stat => stat.fga_total >= 50)\n        .sort((a, b) => b.fg_pct - a.fg_pct)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg_pct),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataFgPct\n}\n\nconst fg3Pct = (stats, playerAmount) => {\n  const dataFg3Pct = {\n    labels: stats\n      .filter(stat => stat.fg3a_total >= 50)\n      .sort((a, b) => b.fg3_pct - a.fg3_pct)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3 %',\n      data: stats\n        .filter(stat => stat.fg3a_total >= 50)\n        .sort((a, b) => b.fg3_pct - a.fg3_pct)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3_pct),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataFg3Pct\n}\n\nconst ftPct = (stats, playerAmount) => {\n  const dataFtPct = {\n    labels: stats\n      .filter(stat => stat.fta_total >= 50)\n      .sort((a, b) => b.ft_pct - a.ft_pct)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Ft %',\n      data: stats\n        .filter(stat => stat.fta_total >= 50)\n        .sort((a, b) => b.ft_pct - a.ft_pct)\n        .slice(0, playerAmount)\n        .map(stat => stat.ft_pct),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataFtPct\n}\n\n\n\n\n\n// Ast/turnover //////////////////////////////////////////////////////////\nconst astToTurnover = (stats, playerAmount) => {\n  const dataAstToTurnover = {\n    labels: stats\n      .filter(stat => stat.ast_total >= 50)\n      .sort((a, b) => b.ast_to_turnover - a.ast_to_turnover)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Ast/Turnover ratio',\n      data: stats\n        .filter(stat => stat.ast_total >= 50)\n        .sort((a, b) => b.ast_to_turnover - a.ast_to_turnover)\n        .slice(0, playerAmount)\n        .map(stat => stat.ast_to_turnover),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataAstToTurnover\n}\n\n// Total //////////////////////////////////////////////////////////\nconst totalPoints = (stats, playerAmount) => {\n  const dataTotalPoints = {\n    labels: stats\n      .sort((a, b) => b.pts_total - a.pts_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total points',\n      data: stats\n        .sort((a, b) => b.pts_total - a.pts_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.pts_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalPoints\n}\n\nconst totalAssists = (stats, playerAmount) => {\n  const dataTotalAssists = {\n    labels: stats\n      .sort((a, b) => b.ast_total - a.ast_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total assists',\n      data: stats\n        .sort((a, b) => b.ast_total - a.ast_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.ast_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalAssists\n}\n\nconst totalRebounds = (stats, playerAmount) => {\n  const dataTotalRebounds = {\n    labels: stats\n      .sort((a, b) => b.reb_total - a.reb_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total rebounds',\n      data: stats\n        .sort((a, b) => b.reb_total - a.reb_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.reb_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalRebounds\n}\n\nconst totalBlocks = (stats, playerAmount) => {\n  const dataTotalBlocks = {\n    labels: stats\n      .sort((a, b) => b.blk_total - a.blk_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total blocks',\n      data: stats\n        .sort((a, b) => b.blk_total - a.blk_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.blk_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalBlocks\n}\n\nconst totalSteals = (stats, playerAmount) => {\n  const dataTotalSteals = {\n    labels: stats\n      .sort((a, b) => b.stl_total - a.stl_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total steals',\n      data: stats\n        .sort((a, b) => b.stl_total - a.stl_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.stl_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalSteals\n}\n\nconst totalTurnovers = (stats, playerAmount) => {\n  const dataTotalTurnovers = {\n    labels: stats\n      .sort((a, b) => b.turnover_total - a.turnover_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total turnovers',\n      data: stats\n        .sort((a, b) => b.turnover_total - a.turnover_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.turnover_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalTurnovers\n}\n\nconst totalPF = (stats, playerAmount) => {\n  const dataTotalPF = {\n    labels: stats\n      .sort((a, b) => b.pf_total - a.pf_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total personal fouls',\n      data: stats\n        .sort((a, b) => b.pf_total - a.pf_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.pf_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalPF\n}\n\nconst totalMinutes = (stats, playerAmount) => {\n  const dataTotalMinutes = {\n    labels: stats\n      .sort((a, b) => b.min_total - a.min_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total minutes',\n      data: stats\n        .sort((a, b) => b.min_total - a.min_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.min_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalMinutes\n}\n\nconst totalFga = (stats, playerAmount) => {\n  const dataTotalFga = {\n    labels: stats\n      .sort((a, b) => b.fga_total - a.fga_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fga',\n      data: stats\n        .sort((a, b) => b.fga_total - a.fga_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fga_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFga\n}\n\nconst totalFgm = (stats, playerAmount) => {\n  const dataTotalFgm = {\n    labels: stats\n      .sort((a, b) => b.fgm_total - a.fgm_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fgm',\n      data: stats\n        .sort((a, b) => b.fgm_total - a.fgm_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fgm_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFgm\n}\n\nconst totalFg3a = (stats, playerAmount) => {\n  const dataTotalFg3a = {\n    labels: stats\n      .sort((a, b) => b.fg3a_total - a.fg3a_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fg3a',\n      data: stats\n        .sort((a, b) => b.fg3a_total - a.fg3a_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3a_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3a\n}\n\nconst totalFg3m = (stats, playerAmount) => {\n  const dataTotalFg3m = {\n    labels: stats\n      .sort((a, b) => b.fg3m_total - a.fg3m_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fg3m',\n      data: stats\n        .sort((a, b) => b.fg3m_total - a.fg3m_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3m_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3m\n}\n\nconst totalFta = (stats, playerAmount) => {\n  const dataTotalFta = {\n    labels: stats\n      .sort((a, b) => b.fta_total - a.fta_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total fta',\n      data: stats\n        .sort((a, b) => b.fta_total - a.fta_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.fta_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFta\n}\n\nconst totalFtm = (stats, playerAmount) => {\n  const dataTotalFtm = {\n    labels: stats\n      .sort((a, b) => b.ftm_total - a.ftm_total)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Total ftm',\n      data: stats\n        .sort((a, b) => b.ftm_total - a.ftm_total)\n        .slice(0, playerAmount)\n        .map(stat => stat.ftm_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFtm\n}\n\n// Per game //////////////////////////////////////////////////////////\nconst perGamePoints = (stats, playerAmount) => {\n  const dataPerGamePoints = {\n    labels: stats\n      .sort((a, b) => b.pts_pergame - a.pts_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Points per game',\n      data: stats\n        .sort((a, b) => b.pts_pergame - a.pts_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.pts_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGamePoints\n}\n\nconst perGameAssists = (stats, playerAmount) => {\n  const dataPerGameAssists = {\n    labels: stats\n      .sort((a, b) => b.ast_pergame - a.ast_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Assists per game',\n      data: stats\n        .sort((a, b) => b.ast_pergame - a.ast_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.ast_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameAssists\n}\n\nconst perGameRebounds = (stats, playerAmount) => {\n  const dataPerGameRebounds = {\n    labels: stats\n      .sort((a, b) => b.reb_pergame - a.reb_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Rebounds per game',\n      data: stats\n        .sort((a, b) => b.reb_pergame - a.reb_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.reb_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameRebounds\n}\n\nconst perGameBlock = (stats, playerAmount) => {\n  const dataPerGameBlocks = {\n    labels: stats\n      .sort((a, b) => b.blk_pergame - a.blk_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Blocks per game',\n      data: stats\n        .sort((a, b) => b.blk_pergame - a.blk_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.blk_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameBlocks\n}\n\nconst perGameSteals = (stats, playerAmount) => {\n  const dataPerGameSteals = {\n    labels: stats\n      .sort((a, b) => b.stl_pergame - a.stl_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Steals per game',\n      data: stats\n        .sort((a, b) => b.stl_pergame - a.stl_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.stl_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameSteals\n}\n\nconst perGameTurnovers = (stats, playerAmount) => {\n  const dataPerGameTurnovers = {\n    labels: stats\n      .sort((a, b) => b.turnover_pergame - a.turnover_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Turnovers per game',\n      data: stats\n        .sort((a, b) => b.turnover_pergame - a.turnover_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.turnover_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameTurnovers\n}\n\nconst perGamePF = (stats, playerAmount) => {\n  const dataPerGamePF = {\n    labels: stats\n      .sort((a, b) => b.pf_pergame - a.pf_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Personal fouls per game',\n      data: stats\n        .sort((a, b) => b.pf_pergame - a.pf_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.pf_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGamePF\n}\n\nconst perGameMinutes = (stats, playerAmount) => {\n  const dataPerGameMinutes = {\n    labels: stats\n      .sort((a, b) => b.min_pergame - a.min_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Minutes per game',\n      data: stats\n        .sort((a, b) => b.min_pergame - a.min_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.min_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPerGameMinutes\n}\n\nconst perGameFga = (stats, playerAmount) => {\n  const dataTotalFga = {\n    labels: stats\n      .sort((a, b) => b.fga_pergame - a.fga_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fga per game',\n      data: stats\n        .sort((a, b) => b.fga_pergame - a.fga_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fga_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFga\n}\n\nconst perGameFgm = (stats, playerAmount) => {\n  const dataTotalFgm = {\n    labels: stats\n      .sort((a, b) => b.fgm_pergame - a.fgm_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fgm per game',\n      data: stats\n        .sort((a, b) => b.fgm_pergame - a.fgm_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fgm_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFgm\n}\n\nconst perGameFg3a = (stats, playerAmount) => {\n  const dataTotalFg3a = {\n    labels: stats\n      .sort((a, b) => b.fg3a_pergame - a.fg3a_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3a per game',\n      data: stats\n        .sort((a, b) => b.fg3a_pergame - a.fg3a_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3a_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3a\n}\n\nconst perGameFg3m = (stats, playerAmount) => {\n  const dataTotalFg3m = {\n    labels: stats\n      .sort((a, b) => b.fg3m_pergame - a.fg3m_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3m per game',\n      data: stats\n        .sort((a, b) => b.fg3m_pergame - a.fg3m_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3m_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3m\n}\n\nconst perGameFta = (stats, playerAmount) => {\n  const dataTotalFta = {\n    labels: stats\n      .sort((a, b) => b.fta_pergame - a.fta_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fta per game',\n      data: stats\n        .sort((a, b) => b.fta_pergame - a.fta_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.fta_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFta\n}\n\nconst perGameFtm = (stats, playerAmount) => {\n  const dataTotalFtm = {\n    labels: stats\n      .sort((a, b) => b.ftm_pergame - a.ftm_pergame)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Ftm per game',\n      data: stats\n        .sort((a, b) => b.ftm_pergame - a.ftm_pergame)\n        .slice(0, playerAmount)\n        .map(stat => stat.ftm_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFtm\n}\n\n// Per 36 minutes //////////////////////////////////////////////////////////\nconst per36Points = (stats, playerAmount) => {\n  const dataPer36Points = {\n    labels: stats\n      .filter(stat => stat.pts_per36 !== undefined /* && stat.pts_per36 !== 0 && stat.name !== undefined */)\n      .sort((a, b) => b.pts_per36 - a.pts_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Points per 36 min',\n      data: stats\n        .filter(stat => stat.pts_per36 !== undefined /* && stat.pts_per36 !== 0 && stat.name !== undefined */)\n        .sort((a, b) => b.pts_per36 - a.pts_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.pts_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Points\n}\n\nconst per36Assists = (stats, playerAmount) => {\n  const dataPer36Assists = {\n    labels: stats\n      .filter(stat => stat.ast_per36 !== undefined)\n      .sort((a, b) => b.ast_per36 - a.ast_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Assists per 36 min',\n      data: stats\n        .filter(stat => stat.ast_per36 !== undefined)\n        .sort((a, b) => b.ast_per36 - a.ast_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.ast_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Assists\n}\n\nconst per36Rebounds = (stats, playerAmount) => {\n  const dataPer36Rebounds = {\n    labels: stats\n      .filter(stat => stat.reb_per36 !== undefined)\n      .sort((a, b) => b.reb_per36 - a.reb_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Rebounds per 36 min',\n      data: stats\n        .filter(stat => stat.reb_per36 !== undefined)\n        .sort((a, b) => b.reb_per36 - a.reb_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.reb_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Rebounds\n}\n\nconst per36Blocks = (stats, playerAmount) => {\n  const dataPer36Blocks = {\n    labels: stats\n      .filter(stat => stat.blk_per36 !== undefined && stat.blk_per36 !== 0)\n      .sort((a, b) => b.blk_per36 - a.blk_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Blocks per 36 min',\n      data: stats\n        .filter(stat => stat.blk_per36 !== undefined && stat.blk_per36 !== 0)\n        .sort((a, b) => b.blk_per36 - a.blk_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.blk_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Blocks\n}\n\nconst per36Steals = (stats, playerAmount) => {\n  const dataPer36Steals = {\n    labels: stats\n      .filter(stat => stat.stl_per36 !== undefined && stat.stl_per36 !== 0)\n      .sort((a, b) => b.stl_per36 - a.stl_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Steals per 36 min',\n      data: stats\n        .filter(stat => stat.stl_per36 !== undefined && stat.stl_per36 !== 0)\n        .sort((a, b) => b.stl_per36 - a.stl_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.stl_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Steals\n}\n\nconst per36Turnovers = (stats, playerAmount) => {\n  const dataPer36Turnovers = {\n    labels: stats\n      .filter(stat => stat.turnover_per36 !== undefined && stat.turnover_per36 !== 0)\n      .sort((a, b) => b.turnover_per36 - a.turnover_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Turnovers per 36 min',\n      data: stats\n        .filter(stat => stat.turnover_per36 !== undefined && stat.turnover_per36 !== 0)\n        .sort((a, b) => b.turnover_per36 - a.turnover_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.turnover_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36Turnovers\n}\n\nconst per36PF = (stats, playerAmount) => {\n  const dataPer36PF = {\n    labels: stats\n      .filter(stat => stat.pf_per36 !== undefined && stat.pf_per36 !== 0)\n      .sort((a, b) => b.pf_per36 - a.pf_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Personal fouls per 36 min',\n      data: stats\n        .filter(stat => stat.pf_per36 !== undefined && stat.pf_per36 !== 0)\n        .sort((a, b) => b.pf_per36 - a.pf_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.pf_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataPer36PF\n}\n\nconst per36Fga = (stats, playerAmount) => {\n  const dataTotalFga = {\n    labels: stats\n      .filter(stat => stat.fga_per36 !== undefined && stat.fga_per36 !== 0)\n      .sort((a, b) => b.fga_per36 - a.fga_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fga per game',\n      data: stats\n        .filter(stat => stat.fga_per36 !== undefined && stat.fga_per36 !== 0)\n        .sort((a, b) => b.fga_per36 - a.fga_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fga_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFga\n}\n\nconst per36Fgm = (stats, playerAmount) => {\n  const dataTotalFgm = {\n    labels: stats\n      .filter(stat => stat.fgm_per36 !== undefined && stat.fgm_per36 !== 0)\n      .sort((a, b) => b.fgm_per36 - a.fgm_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fgm per game',\n      data: stats\n        .filter(stat => stat.fgm_per36 !== undefined && stat.fgm_per36 !== 0)\n        .sort((a, b) => b.fgm_per36 - a.fgm_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fgm_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFgm\n}\n\nconst per36Fg3a = (stats, playerAmount) => {\n  const dataTotalFg3a = {\n    labels: stats\n      .filter(stat => stat.fg3a_per36 !== undefined && stat.fg3a_per36 !== 0)\n      .sort((a, b) => b.fg3a_per36 - a.fg3a_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3a per game',\n      data: stats\n        .filter(stat => stat.fg3a_per36 !== undefined && stat.fg3a_per36 !== 0)\n        .sort((a, b) => b.fg3a_per36 - a.fg3a_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3a_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3a\n}\n\nconst per36Fg3m = (stats, playerAmount) => {\n  const dataTotalFg3m = {\n    labels: stats\n      .filter(stat => stat.fg3m_per36 !== undefined && stat.fg3m_per36 !== 0)\n      .sort((a, b) => b.fg3m_per36 - a.fg3m_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fg3m per game',\n      data: stats\n        .filter(stat => stat.fg3m_per36 !== undefined && stat.fg3m_per36 !== 0)\n        .sort((a, b) => b.fg3m_per36 - a.fg3m_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fg3m_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFg3m\n}\n\nconst per36Fta = (stats, playerAmount) => {\n  const dataTotalFta = {\n    labels: stats\n      .filter(stat => stat.fta_per36 !== undefined && stat.fta_per36 !== 0)\n      .sort((a, b) => b.fta_per36 - a.fta_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Fta per game',\n      data: stats\n        .filter(stat => stat.fta_per36 !== undefined && stat.fta_per36 !== 0)\n        .sort((a, b) => b.fta_per36 - a.fta_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.fta_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFta\n}\n\nconst per36Ftm = (stats, playerAmount) => {\n  const dataTotalFtm = {\n    labels: stats\n      .filter(stat => stat.ftm_per36 !== undefined && stat.ftm_per36 !== 0)\n      .sort((a, b) => b.ftm_per36 - a.ftm_per36)\n      .slice(0, playerAmount)\n      .map(stat => stat.name),\n    datasets: [{\n      label: 'Ftm per game',\n      data: stats\n        .filter(stat => stat.ftm_per36 !== undefined && stat.ftm_per36 !== 0)\n        .sort((a, b) => b.ftm_per36 - a.ftm_per36)\n        .slice(0, playerAmount)\n        .map(stat => stat.ftm_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  return dataTotalFtm\n}\n\nconst barChartDataService = {\n  fgPct,\n  fg3Pct,\n  ftPct,\n  totalPoints,\n  totalAssists,\n  totalRebounds,\n  totalBlocks,\n  totalSteals,\n  totalTurnovers,\n  totalPF,\n  totalMinutes,\n  totalFga,\n  totalFgm,\n  totalFg3a,\n  totalFg3m,\n  totalFta,\n  totalFtm,\n  perGamePoints,\n  perGameAssists,\n  perGameRebounds,\n  perGameBlock,\n  perGameSteals,\n  perGameTurnovers,\n  astToTurnover,\n  perGamePF,\n  perGameMinutes,\n  perGameFga,\n  perGameFgm,\n  perGameFg3a,\n  perGameFg3m,\n  perGameFta,\n  perGameFtm,\n  per36Points,\n  per36Assists,\n  per36Rebounds,\n  per36Blocks,\n  per36Steals,\n  per36Turnovers,\n  per36PF,\n  per36Fga,\n  per36Fgm,\n  per36Fg3a,\n  per36Fg3m,\n  per36Fta,\n  per36Ftm\n}\n\nexport default barChartDataService","\nconst legend = {\n  labels: {\n    fontColor: 'white',\n    fontSize: 12\n  },\n  position: 'right',\n  display: false\n}\n\nconst plugins = {\n  labels: false\n}\n\nconst scales = {\n  yAxes: [{\n    ticks: {\n      beginAtZero: true,\n      fontColor: 'white',\n      fontSize: 14\n    },\n    gridLines: {\n      display: true ,\n      color: \"grey\"\n    },\n  }],\n  xAxes: [{\n    ticks: {\n      fontColor: 'white',\n      fontSize: 14\n    },\n    gridLines: {\n      display: false ,\n      color: \"grey\"\n    },\n  }]\n}\n\n\n// Options pct //////////////////////////////////////////////////////////////////\nconst fgPct = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg %, min 50 fgm',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst fg3Pct = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3 %, min 50 fg3m',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst ftPct = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Ft %, min 50 ftm',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\n// Options ast/turnover //////////////////////////////////////////////////////////////////\nconst astToTurnover = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Assists to turnovers, min 50 assists',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\n// Options total //////////////////////////////////////////////////////////////////\nconst totalPoints = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total points',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalAssists = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total assists',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalRebounds = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total rebounds',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalBlocks = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total blocks',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalSteals = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total steals',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalTurnovers = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total turnovers',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalPF = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fouls',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalMinutes = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total minutes',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\nconst totalFga = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fga',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFgm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fgm',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFg3a = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fg3a',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFg3m = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fg3m',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFta = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total fta',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst totalFtm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Total ftm',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\n\n// Options per game //////////////////////////////////////////////////////////////////\nconst perGamePoints = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Points per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameAssists = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Assists per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameRebounds = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Rebounds per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameBlocks = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Blocks per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameSteals = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Steals per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameTurnovers = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Turnovers per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGamePF = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fouls per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameMinutes = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFga = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fga per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFgm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fgm per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFg3a = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3a per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFg3m = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3m per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFta = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fta per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst perGameFtm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Ftm per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\n\n// Options per 36 minutes //////////////////////////////////////////////////////////////////\nconst per36Points = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Points per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Assists = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Assists per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Rebounds = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Rebounds per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Blocks = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Blocks per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Steals = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Steals per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Turnovers = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Turnovers per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36PF = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fouls per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fga = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fga per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fgm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fgm per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fg3a = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3a per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fg3m = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fg3m per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Fta = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Fta per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\nconst per36Ftm = {\n  legend: legend,\n  plugins: plugins,\n  title: {\n    display: true,\n    text: 'Ftm per 36 minutes, min 10 minutes per game',\n    fontSize: 16,\n    fontColor: 'white'\n  },\n  scales: scales\n}\n\nconst barChartOptionsService = {\n  fgPct,\n  fg3Pct,\n  ftPct,\n  totalPoints,\n  totalAssists,\n  totalRebounds,\n  totalBlocks,\n  totalSteals,\n  totalTurnovers,\n  totalPF,\n  totalMinutes,\n  totalFga,\n  totalFgm,\n  totalFg3a,\n  totalFg3m,\n  totalFta,\n  totalFtm,\n  perGamePoints,\n  perGameAssists,\n  perGameRebounds,\n  perGameBlocks,\n  perGameSteals,\n  perGameTurnovers,\n  astToTurnover,\n  perGamePF,\n  perGameMinutes,\n  perGameFga,\n  perGameFgm,\n  perGameFg3a,\n  perGameFg3m,\n  perGameFta,\n  perGameFtm,\n  per36Points,\n  per36Assists,\n  per36Rebounds,\n  per36Blocks,\n  per36Steals,\n  per36Turnovers,\n  per36PF,\n  per36Fga,\n  per36Fgm,\n  per36Fg3a,\n  per36Fg3m,\n  per36Fta,\n  per36Ftm\n}\n\nexport default barChartOptionsService","import React from 'react'\nimport { Row } from 'react-bootstrap'\nimport barChartDataService from '../../services/barChartData'\nimport barChartOptionsService from '../../services/barChartOptions'\nimport { Bar } from 'react-chartjs-2'\n\nconst BarCharts = (\n  {\n    stats,\n    pctSelected,\n    totalSelected,\n    perGameSelected,\n    per36Selected,\n    postSeasonSelected,\n    playerAmount,\n    postSeasonFilteringDone\n  }) => {\n\n  let statsFilteredByPostseason = []\n  if (!postSeasonFilteringDone) {\n    statsFilteredByPostseason = stats.filter(stat => stat.postseason === postSeasonSelected)\n  } else {\n    statsFilteredByPostseason = stats.filter(stat => stat.played_games > 0)\n  }\n\n  //Pct\n  const dataFgPct = barChartDataService.fgPct(statsFilteredByPostseason, playerAmount)\n  const dataFg3Pct = barChartDataService.fg3Pct(statsFilteredByPostseason, playerAmount)\n  const dataFtPct = barChartDataService.ftPct(statsFilteredByPostseason, playerAmount)\n  const optionsFgPct = barChartOptionsService.fgPct\n  const optionsFg3Pct = barChartOptionsService.fg3Pct\n  const optionsFtPct = barChartOptionsService.ftPct\n\n  //Total\n  const dataTotalPoints = barChartDataService.totalPoints(statsFilteredByPostseason, playerAmount)\n  const dataTotalAssists = barChartDataService.totalAssists(statsFilteredByPostseason, playerAmount)\n  const dataTotalRebounds = barChartDataService.totalRebounds(statsFilteredByPostseason, playerAmount)\n  const dataTotalBlocks = barChartDataService.totalBlocks(statsFilteredByPostseason, playerAmount)\n  const dataTotalSteals = barChartDataService.totalSteals(statsFilteredByPostseason, playerAmount)\n  const dataTotalTurnovers = barChartDataService.totalTurnovers(statsFilteredByPostseason, playerAmount)\n  const dataTotalPersonalFouls = barChartDataService.totalPF(statsFilteredByPostseason, playerAmount)\n  const dataTotalMinutes = barChartDataService.totalMinutes(statsFilteredByPostseason, playerAmount)\n  const dataTotalFga = barChartDataService.totalFga(statsFilteredByPostseason, playerAmount)\n  const dataTotalFgm = barChartDataService.totalFgm(statsFilteredByPostseason, playerAmount)\n  const dataTotalFg3a = barChartDataService.totalFg3a(statsFilteredByPostseason, playerAmount)\n  const dataTotalFg3m = barChartDataService.totalFg3m(statsFilteredByPostseason, playerAmount)\n  const dataTotalFta = barChartDataService.totalFta(statsFilteredByPostseason, playerAmount)\n  const dataTotalFtm = barChartDataService.totalFtm(statsFilteredByPostseason, playerAmount)\n  const optionsTotalPoints = barChartOptionsService.totalPoints\n  const optionsTotalAssists = barChartOptionsService.totalAssists\n  const optionsTotalRebounds = barChartOptionsService.totalRebounds\n  const optionsTotalBlocks = barChartOptionsService.totalBlocks\n  const optionsTotalSteals = barChartOptionsService.totalSteals\n  const optionsTotalTurnovers = barChartOptionsService.totalTurnovers\n  const optionsTotalPersonalFouls = barChartOptionsService.totalPF\n  const optionsTotalMinutes = barChartOptionsService.totalMinutes\n  const optionsTotalFga = barChartOptionsService.totalFga\n  const optionsTotalFgm = barChartOptionsService.totalFgm\n  const optionsTotalFg3a = barChartOptionsService.totalFg3a\n  const optionsTotalFg3m = barChartOptionsService.totalFg3m\n  const optionsTotalFta = barChartOptionsService.totalFta\n  const optionsTotalFtm = barChartOptionsService.totalFtm\n\n  //Per game\n  const dataPerGamePoints = barChartDataService.perGamePoints(statsFilteredByPostseason, playerAmount)\n  const dataPerGameAssists = barChartDataService.perGameAssists(statsFilteredByPostseason, playerAmount)\n  const dataPerGameRebounds = barChartDataService.perGameRebounds(statsFilteredByPostseason, playerAmount)\n  const dataPerGameBlocks = barChartDataService.perGameBlock(statsFilteredByPostseason, playerAmount)\n  const dataPerGameSteals = barChartDataService.perGameSteals(statsFilteredByPostseason, playerAmount)\n  const dataPerGameTurnovers = barChartDataService.perGameTurnovers(statsFilteredByPostseason, playerAmount)\n  const dataAstToTurnover = barChartDataService.astToTurnover(statsFilteredByPostseason, playerAmount)\n  const dataPerGamePersonalFouls = barChartDataService.perGamePF(statsFilteredByPostseason, playerAmount)\n  const dataPerGameMinutes = barChartDataService.perGameMinutes(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFga = barChartDataService.perGameFga(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFgm = barChartDataService.perGameFgm(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFg3a = barChartDataService.perGameFg3a(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFg3m = barChartDataService.perGameFg3m(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFta = barChartDataService.perGameFta(statsFilteredByPostseason, playerAmount)\n  const dataPerGameFtm = barChartDataService.perGameFtm(statsFilteredByPostseason, playerAmount)\n  const optionsPerGamePoints = barChartOptionsService.perGamePoints\n  const optionsPerGameAssists = barChartOptionsService.perGameAssists\n  const optionsPerGameRebounds = barChartOptionsService.perGameRebounds\n  const optionsPerGameBlocks = barChartOptionsService.perGameBlocks\n  const optionsPerGameSteals = barChartOptionsService.perGameSteals\n  const optionsPerGameTurnovers = barChartOptionsService.perGameTurnovers\n  const optionsAstToTurnover = barChartOptionsService.astToTurnover\n  const optionsPerGamePersonalFouls = barChartOptionsService.perGamePF\n  const optionsPerGameMinutes = barChartOptionsService.perGameMinutes\n  const optionsPerGameFga = barChartOptionsService.perGameFga\n  const optionsPerGameFgm = barChartOptionsService.perGameFgm\n  const optionsPerGameFg3a = barChartOptionsService.perGameFg3a\n  const optionsPerGameFg3m = barChartOptionsService.perGameFg3m\n  const optionsPerGameFta = barChartOptionsService.perGameFta\n  const optionsPerGameFtm = barChartOptionsService.perGameFtm\n\n\n  //Per 36 minutes\n  const dataPer36Points = barChartDataService.per36Points(statsFilteredByPostseason, playerAmount)\n  const dataPer36Assists = barChartDataService.per36Assists(statsFilteredByPostseason, playerAmount)\n  const dataPer36Rebounds = barChartDataService.per36Rebounds(statsFilteredByPostseason, playerAmount)\n  const dataPer36Blocks = barChartDataService.per36Blocks(statsFilteredByPostseason, playerAmount)\n  const dataPer36Steals = barChartDataService.per36Steals(statsFilteredByPostseason, playerAmount)\n  const dataPer36Turnovers = barChartDataService.per36Turnovers(statsFilteredByPostseason, playerAmount)\n  const dataPer36PersonalFouls = barChartDataService.per36PF(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fga = barChartDataService.per36Fga(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fgm = barChartDataService.per36Fgm(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fg3a = barChartDataService.per36Fg3a(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fg3m = barChartDataService.per36Fg3m(statsFilteredByPostseason, playerAmount)\n  const dataPer36Fta = barChartDataService.per36Fta(statsFilteredByPostseason, playerAmount)\n  const dataPer36Ftm = barChartDataService.per36Ftm(statsFilteredByPostseason, playerAmount)\n  const optionsPer36Points = barChartOptionsService.per36Points\n  const optionsPer36Assists = barChartOptionsService.per36Assists\n  const optionsPer36Rebounds = barChartOptionsService.per36Rebounds\n  const optionsPer36Blocks = barChartOptionsService.per36Blocks\n  const optionsPer36Steals = barChartOptionsService.per36Steals\n  const optionsPer36Turnovers = barChartOptionsService.per36Turnovers\n  const optionsPer36PersonalFouls = barChartOptionsService.per36PF\n  const optionsPer36Fga = barChartOptionsService.per36Fga\n  const optionsPer36Fgm = barChartOptionsService.per36Fgm\n  const optionsPer36Fg3a = barChartOptionsService.per36Fg3a\n  const optionsPer36Fg3m = barChartOptionsService.per36Fg3m\n  const optionsPer36Fta = barChartOptionsService.per36Fta\n  const optionsPer36Ftm = barChartOptionsService.per36Ftm\n\n  return (\n    <div className='chart'>\n      {statsFilteredByPostseason.length > 0 && pctSelected\n        ? <>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataFgPct}\n              options={optionsFgPct}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataFg3Pct}\n              options={optionsFg3Pct}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataFtPct}\n              options={optionsFtPct}\n            />\n          </Row>\n        </>\n        : <></>}\n\n      {statsFilteredByPostseason.length > 0 && totalSelected\n        ? <>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalPoints}\n              options={optionsTotalPoints}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Bar\n              data={dataTotalAssists}\n              options={optionsTotalAssists}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalRebounds}\n              options={optionsTotalRebounds}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Bar\n              data={dataTotalBlocks}\n              options={optionsTotalBlocks}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalSteals}\n              options={optionsTotalSteals}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalTurnovers}\n              options={optionsTotalTurnovers}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalPersonalFouls}\n              options={optionsTotalPersonalFouls}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalMinutes}\n              options={optionsTotalMinutes}\n            />\n          </Row>\n\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFga}\n              options={optionsTotalFga}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFgm}\n              options={optionsTotalFgm}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFg3a}\n              options={optionsTotalFg3a}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFg3m}\n              options={optionsTotalFg3m}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFta}\n              options={optionsTotalFta}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataTotalFtm}\n              options={optionsTotalFtm}\n            />\n          </Row>\n        </>\n        : <></>}\n\n\n      {statsFilteredByPostseason.length > 0 && perGameSelected\n        ? <>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGamePoints}\n              options={optionsPerGamePoints}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameAssists}\n              options={optionsPerGameAssists}\n            />\n\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameRebounds}\n              options={optionsPerGameRebounds}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameBlocks}\n              options={optionsPerGameBlocks}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameSteals}\n              options={optionsPerGameSteals}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameTurnovers}\n              options={optionsPerGameTurnovers}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataAstToTurnover}\n              options={optionsAstToTurnover}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGamePersonalFouls}\n              options={optionsPerGamePersonalFouls}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameMinutes}\n              options={optionsPerGameMinutes}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFga}\n              options={optionsPerGameFga}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFgm}\n              options={optionsPerGameFgm}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFg3a}\n              options={optionsPerGameFg3a}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFg3m}\n              options={optionsPerGameFg3m}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFta}\n              options={optionsPerGameFta}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPerGameFtm}\n              options={optionsPerGameFtm}\n            />\n          </Row>\n        </>\n        : <></>}\n\n      {statsFilteredByPostseason.length > 0 && per36Selected\n        ? <>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Points}\n              options={optionsPer36Points}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n\n            <Bar\n              data={dataPer36Assists}\n              options={optionsPer36Assists}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Rebounds}\n              options={optionsPer36Rebounds}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Blocks}\n              options={optionsPer36Blocks}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Steals}\n              options={optionsPer36Steals}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Turnovers}\n              options={optionsPer36Turnovers}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36PersonalFouls}\n              options={optionsPer36PersonalFouls}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fga}\n              options={optionsPer36Fga}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fgm}\n              options={optionsPer36Fgm}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fg3a}\n              options={optionsPer36Fg3a}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fg3m}\n              options={optionsPer36Fg3m}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Fta}\n              options={optionsPer36Fta}\n            />\n          </Row>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Bar\n              data={dataPer36Ftm}\n              options={optionsPer36Ftm}\n            />\n          </Row>\n        </>\n        : <></>}\n\n\n    </div>\n  )\n}\n\nexport default BarCharts\n","import React from 'react'\nimport BarCharts from '../common/BarCharts'\nimport 'chartjs-plugin-labels'\n\nconst TeamStats = (\n  {\n    teamStats,\n    postSeasonSelected,\n    perGameSelected,\n    totalSelected,\n    per36Selected,\n    pctSelected\n  }\n) => {\n\n  const playerAmount = 20\n\n  //filter out bad data where player is not defined\n  teamStats = teamStats.filter(teamStat => teamStat.player !== undefined)\n\n  let playerTotalStats = []\n\n  teamStats.forEach(teamStat => {\n    const playerFullName = `${teamStat.player.first_name} ${teamStat.player.last_name}`\n    if (playerTotalStats.find(playerTotalStat => playerTotalStat.name === playerFullName) === undefined) {\n      const player = { name: playerFullName }\n      playerTotalStats.push(player)\n    }\n  })\n\n  const teamStatsFiltered = teamStats.filter(teamStat => teamStat.game.postseason === postSeasonSelected)\n\n  playerTotalStats.forEach(playerStat => {\n    let playedGames = 0\n    const playerStatsHelper = teamStatsFiltered\n      .filter(teamStat => `${teamStat.player.first_name} ${teamStat.player.last_name}` === playerStat.name)\n\n    const totalPts = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pts\n    }, 0)\n    const totalAst = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.ast\n    }, 0)\n    const totalReb = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.reb\n    }, 0)\n    const totalStl = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.stl\n    }, 0)\n    const totalBlk = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.blk\n    }, 0)\n    const totalTurnover = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.turnover\n    }, 0)\n    const totalPf = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pf\n    }, 0)\n    const totalMin = playerStatsHelper.reduce((accumulator, currentValue) => {\n      let minutes = 0\n      const timeSplit = currentValue.min.split(':')\n      if (timeSplit.length === 1) {\n        minutes = Number(currentValue.min)\n      } else {\n        const seconds = Number(timeSplit[0]) * 60 + Number(timeSplit[1])\n        //minutes = Math.floor(seconds / 60)\n        minutes = Math.round(seconds / 60 * 10) / 10\n      }\n      if (isNaN(minutes)) {\n        minutes = 0\n      }\n      if (minutes !== 0) {\n        playedGames++\n      }\n      return accumulator + minutes\n    }, 0)\n    const totalFga = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fga\n    }, 0)\n    const totalFgm = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fgm\n    }, 0)\n    const totalFg3a = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fg3a\n    }, 0)\n    const totalFg3m = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fg3m\n    }, 0)\n    const totalFta = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.fta\n    }, 0)\n    const totalFtm = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.ftm\n    }, 0)\n    const totalOreb = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.oreb\n    }, 0)\n    const totalDreb = playerStatsHelper.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.dreb\n    }, 0)\n\n    //console.log(playerStat/* .playerId */)\n    let updatedPlayer = {}\n    if (playedGames > 0) {\n      //const updatedPlayer = playerStat\n\n\n      //updatedPlayer.playerId = playerStat.player.id\n      updatedPlayer.name = playerStat.name\n      updatedPlayer.playerId = playerStat.playerId\n      /* updatedPlayer.postseason = postseason\n      updatedPlayer.season = Number(season) */\n\n      updatedPlayer.pts_total = totalPts\n      updatedPlayer.ast_total = totalAst\n      updatedPlayer.reb_total = totalReb\n      updatedPlayer.stl_total = totalStl\n      updatedPlayer.blk_total = totalBlk\n      updatedPlayer.turnover_total = totalTurnover\n      updatedPlayer.pf_total = totalPf\n      updatedPlayer.min_total = Math.floor(totalMin)\n\n      updatedPlayer.fga_total = totalFga\n      updatedPlayer.fgm_total = totalFgm\n      updatedPlayer.fg3a_total = totalFg3a\n      updatedPlayer.fg3m_total = totalFg3m\n      updatedPlayer.fta_total = totalFta\n      updatedPlayer.ftm_total = totalFtm\n\n      updatedPlayer.oreb_total = totalOreb\n      updatedPlayer.dreb_total = totalDreb\n\n      if (totalFga > 0) {\n        updatedPlayer.fg_pct = Math.floor(totalFgm / totalFga * 100 * 10) / 10\n      } else {\n        updatedPlayer.fg_pct = 0\n      }\n      if (totalFg3a > 0) {\n        updatedPlayer.fg3_pct = Math.floor(totalFg3m / totalFg3a * 100 * 10) / 10\n      } else {\n        updatedPlayer.fg3_pct = 0\n      }\n      if (totalFta > 0) {\n        updatedPlayer.ft_pct = Math.floor(totalFtm / totalFta * 100 * 10) / 10\n      } else {\n        updatedPlayer.ft_pct = 0\n      }\n      if (totalTurnover > 0) {\n        updatedPlayer.ast_to_turnover = Math.floor(totalAst / totalTurnover * 10) / 10\n      } else {\n        updatedPlayer.ast_to_turnover = 0\n      }\n      updatedPlayer.pts_pergame = Math.round(totalPts / playedGames * 10) / 10\n      updatedPlayer.ast_pergame = Math.round(totalAst / playedGames * 10) / 10\n      updatedPlayer.reb_pergame = Math.round(totalReb / playedGames * 10) / 10\n      updatedPlayer.stl_pergame = Math.round(totalStl / playedGames * 10) / 10\n      updatedPlayer.blk_pergame = Math.round(totalBlk / playedGames * 10) / 10\n      updatedPlayer.turnover_pergame = Math.round(totalTurnover / playedGames * 10) / 10\n      updatedPlayer.pf_pergame = Math.round(totalPf / playedGames * 10) / 10\n      updatedPlayer.min_pergame = Math.round(totalMin / playedGames * 10) / 10\n\n      updatedPlayer.fga_pergame = Math.round(totalFga / playedGames * 10) / 10\n      updatedPlayer.fgm_pergame = Math.round(totalFgm / playedGames * 10) / 10\n      updatedPlayer.fg3a_pergame = Math.round(totalFg3a / playedGames * 10) / 10\n      updatedPlayer.fg3m_pergame = Math.round(totalFg3m / playedGames * 10) / 10\n      updatedPlayer.fta_pergame = Math.round(totalFta / playedGames * 10) / 10\n      updatedPlayer.ftm_pergame = Math.round(totalFtm / playedGames * 10) / 10\n\n      updatedPlayer.oreb_pergame = Math.round(totalOreb / playedGames * 10) / 10\n      updatedPlayer.dreb_pergame = Math.round(totalDreb / playedGames * 10) / 10\n\n      //Don't calculate per 36 min stats if minutes per game is too low\n      if (updatedPlayer.min_pergame >= 10) {\n        updatedPlayer.pts_per36 = Math.round(updatedPlayer.pts_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.ast_per36 = Math.round(updatedPlayer.ast_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.reb_per36 = Math.round(updatedPlayer.reb_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.stl_per36 = Math.round(updatedPlayer.stl_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.blk_per36 = Math.round(updatedPlayer.blk_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.turnover_per36 = Math.round(updatedPlayer.turnover_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.pf_per36 = Math.round(updatedPlayer.pf_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n\n        updatedPlayer.fga_per36 = Math.round(updatedPlayer.fga_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.fgm_per36 = Math.round(updatedPlayer.fgm_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.fg3a_per36 = Math.round(updatedPlayer.fg3a_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.fg3m_per36 = Math.round(updatedPlayer.fg3m_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.fta_per36 = Math.round(updatedPlayer.fta_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.ftm_per36 = Math.round(updatedPlayer.ftm_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n\n        updatedPlayer.oreb_per36 = Math.round(updatedPlayer.oreb_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n        updatedPlayer.dreb_per36 = Math.round(updatedPlayer.dreb_pergame / updatedPlayer.min_pergame * 36 * 10) / 10\n      }\n    } else {\n      updatedPlayer.playerId = playerStat.playerId\n    }\n    updatedPlayer.played_games = playedGames\n    playerTotalStats = playerTotalStats.map(s => s.name === playerStat.name ? updatedPlayer : s)\n  })\n  //Pct\n  /* const dataFgPct = barChartDataService.fgPct(playerTotalStats, playerAmount)\n  const dataFg3Pct = barChartDataService.fg3Pct(playerTotalStats, playerAmount)\n  const dataFtPct = barChartDataService.ftPct(playerTotalStats, playerAmount)\n  const optionsFgPct = barChartOptionsService.fgPct\n  const optionsFg3Pct = barChartOptionsService.fg3Pct\n  const optionsFtPct = barChartOptionsService.ftPct */\n  /* \n    //Total\n    const dataTotalPoints = barChartDataService.totalPoints(playerTotalStats, playerAmount)\n    const dataTotalAssists = barChartDataService.totalAssists(playerTotalStats, playerAmount)\n    const dataTotalRebounds = barChartDataService.totalRebounds(playerTotalStats, playerAmount)\n    const dataTotalBlocks = barChartDataService.totalBlocks(playerTotalStats, playerAmount)\n    const dataTotalSteals = barChartDataService.totalSteals(playerTotalStats, playerAmount)\n    const dataTotalTurnovers = barChartDataService.totalTurnovers(playerTotalStats, playerAmount)\n    const dataTotalPersonalFouls = barChartDataService.totalPF(playerTotalStats, playerAmount)\n    const dataTotalMinutes = barChartDataService.totalMinutes(playerTotalStats, playerAmount)\n    const optionsTotalPoints = barChartOptionsService.totalPoints\n    const optionsTotalAssists = barChartOptionsService.totalAssists\n    const optionsTotalRebounds = barChartOptionsService.totalRebounds\n    const optionsTotalBlocks = barChartOptionsService.totalBlocks\n    const optionsTotalSteals = barChartOptionsService.totalSteals\n    const optionsTotalTurnovers = barChartOptionsService.totalTurnovers\n    const optionsTotalPersonalFouls = barChartOptionsService.totalPF\n    const optionsTotalMinutes = barChartOptionsService.totalMinutes\n  \n    //Per game\n    const dataPerGamePoints = barChartDataService.perGamePoints(playerTotalStats, playerAmount)\n    const dataPerGameAssists = barChartDataService.perGameAssists(playerTotalStats, playerAmount)\n    const dataPerGameRebounds = barChartDataService.perGameRebounds(playerTotalStats, playerAmount)\n    const dataPerGameBlocks = barChartDataService.perGameBlock(playerTotalStats, playerAmount)\n    const dataPerGameSteals = barChartDataService.perGameSteals(playerTotalStats, playerAmount)\n    const dataPerGameTurnovers = barChartDataService.perGameTurnovers(playerTotalStats, playerAmount)\n    const dataAstToTurnover = barChartDataService.astToTurnover(playerTotalStats, playerAmount)\n    const dataPerGamePersonalFouls = barChartDataService.perGamePF(playerTotalStats, playerAmount)\n    const dataPerGameMinutes = barChartDataService.perGameMinutes(playerTotalStats, playerAmount)\n    const optionsPerGamePoints = barChartOptionsService.perGamePoints\n    const optionsPerGameAssists = barChartOptionsService.perGameAssists\n    const optionsPerGameRebounds = barChartOptionsService.perGameRebounds\n    const optionsPerGameBlocks = barChartOptionsService.perGameBlocks\n    const optionsPerGameSteals = barChartOptionsService.perGameSteals\n    const optionsPerGameTurnovers = barChartOptionsService.perGameTurnovers\n    const optionsAstToTurnover = barChartOptionsService.astToTurnover\n    const optionsPerGamePersonalFouls = barChartOptionsService.perGamePF\n    const optionsPerGameMinutes = barChartOptionsService.perGameMinutes\n  \n    //Per 36 minutes\n    const dataPer36Points = barChartDataService.per36Points(playerTotalStats, playerAmount)\n    const dataPer36Assists = barChartDataService.per36Assists(playerTotalStats, playerAmount)\n    const dataPer36Rebounds = barChartDataService.per36Rebounds(playerTotalStats, playerAmount)\n    const dataPer36Blocks = barChartDataService.per36Blocks(playerTotalStats, playerAmount)\n    const dataPer36Steals = barChartDataService.per36Steals(playerTotalStats, playerAmount)\n    const dataPer36Turnovers = barChartDataService.per36Turnovers(playerTotalStats, playerAmount)\n    const dataPer36PersonalFouls = barChartDataService.per36PF(playerTotalStats, playerAmount)\n    const optionsPer36Points = barChartOptionsService.per36Points\n    const optionsPer36Assists = barChartOptionsService.per36Assists\n    const optionsPer36Rebounds = barChartOptionsService.per36Rebounds\n    const optionsPer36Blocks = barChartOptionsService.per36Blocks\n    const optionsPer36Steals = barChartOptionsService.per36Steals\n    const optionsPer36Turnovers = barChartOptionsService.per36Turnovers\n    const optionsPer36PersonalFouls = barChartOptionsService.per36PF\n   */\n\n\n  return (\n    <div>\n      <BarCharts\n        stats={playerTotalStats}\n        pctSelected={pctSelected}\n        totalSelected={totalSelected}\n        perGameSelected={perGameSelected}\n        per36Selected={per36Selected}\n        postSeasonSelected={postSeasonSelected}\n        playerAmount={playerAmount}\n        postSeasonFilteringDone={true}\n      />\n\n      {/* <div>\n      <div className='chart'>\n        {teamStats.length > 0 && totalSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalPoints}\n                  options={optionsTotalPoints}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalAssists}\n                  options={optionsTotalAssists}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalRebounds}\n                  options={optionsTotalRebounds}\n                />\n              </Col>\n\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalBlocks}\n                  options={optionsTotalBlocks}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalSteals}\n                  options={optionsTotalSteals}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalTurnovers}\n                  options={optionsTotalTurnovers}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalPersonalFouls}\n                  options={optionsTotalPersonalFouls}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataTotalMinutes}\n                  options={optionsTotalMinutes}\n                />\n              </Col>\n            </Row>\n          </>\n          : <></>}\n\n\n        {teamStats.length > 0 && perGameSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGamePoints}\n                  options={optionsPerGamePoints}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameAssists}\n                  options={optionsPerGameAssists}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameRebounds}\n                  options={optionsPerGameRebounds}\n                />\n              </Col>\n\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameBlocks}\n                  options={optionsPerGameBlocks}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameSteals}\n                  options={optionsPerGameSteals}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameTurnovers}\n                  options={optionsPerGameTurnovers}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGamePersonalFouls}\n                  options={optionsPerGamePersonalFouls}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPerGameMinutes}\n                  options={optionsPerGameMinutes}\n                />\n              </Col>\n            </Row>\n          </>\n          : <></>}\n\n        {teamStats.length > 0 && per36Selected\n          ? <>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Points}\n                  options={optionsPer36Points}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Assists}\n                  options={optionsPer36Assists}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Rebounds}\n                  options={optionsPer36Rebounds}\n                />\n              </Col>\n\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Blocks}\n                  options={optionsPer36Blocks}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Steals}\n                  options={optionsPer36Steals}\n                />\n              </Col>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36Turnovers}\n                  options={optionsPer36Turnovers}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Bar\n                  data={dataPer36PersonalFouls}\n                  options={optionsPer36PersonalFouls}\n                />\n              </Col>\n            </Row>\n          </>\n          : <></>}\n\n\n      </div>\n    </div > */}\n    </div >\n  )\n}\n\nexport default TeamStats","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\n\nconst SelectSeason = ({\n  selectedSeason,\n  setSelectedSeason,\n  selectedTeam,\n  setTeamStats,\n  teams,\n  fetchingData,\n  setFetchingData\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n\n\n  const handleSelectedSeasonChange = (event) => {\n    setSelectedSeason(event.value)\n    setFetchingData(true)\n    const searchedTeam = teams.find(team => team.name === selectedTeam)\n    playerStatService.getTeamStatsFromDB(searchedTeam.apiId, event.value)\n      .then((response) => {\n        setTeamStats(response.data)\n        setFetchingData(false)\n      })\n  }\n\n  return (\n    <>\n      <Select\n        options={seasonSelectDescending}\n        //onChange={(event) => setSelectedSeason(event.value)}\n        onChange={(event) => handleSelectedSeasonChange(event)}\n        closeMenuOnSelect={true}\n        placeholder={selectedSeason}\n      />\n\n    </>\n  )\n}\n\nexport default SelectSeason","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n    </>\n  )\n}\n\nexport default SelectRegularPost","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectPerTotal = ({ setPerGameSelected, setTotalSelected, setPer36Selected, setPctSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'pg', value: '1' },\n    { name: 'p36m', value: '3' },\n    { name: 'total', value: '2' },\n    { name: '%', value: '4' }\n\n  ];\n\n  const handlePerGameChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setPerGameSelected(true)\n      setTotalSelected(false)\n      setPer36Selected(false)\n      setPctSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setPerGameSelected(false)\n      setTotalSelected(true)\n      setPer36Selected(false)\n      setPctSelected(false)\n    }\n    if (e.currentTarget.value === '3') {\n      setPerGameSelected(false)\n      setTotalSelected(false)\n      setPer36Selected(true)\n      setPctSelected(false)\n    }\n    if (e.currentTarget.value === '4') {\n      setPerGameSelected(false)\n      setTotalSelected(false)\n      setPer36Selected(false)\n      setPctSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handlePerGameChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n    </>\n  )\n}\n\nexport default SelectPerTotal","\nconst DescriptionTeams = () => {\n  return (\n    <div style={{color:'white', textAlign:'center',}}>\n      <br></br>\n      {/* <br></br> */}\n      <p>\n        This page shows how stats are distributed among players in a team.\n        Only stats that a player has gotten in the selected team are shown,\n        ie. if a player has been traded mid season his stats from the \n        previous team are not included. \n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionTeams\n","import React, { useState, useEffect } from 'react'\nimport { smSide, xsSide, smCenter, xsCenter } from '../../styling/columnWidths'\nimport { Row, Col } from 'react-bootstrap'\nimport SelectTeam from './SelectTeam'\nimport TeamStats from './TeamStats'\nimport SelectSeason from './SelectSeason'\nimport SelectRegularPost from '../common/SelectRegularPost'\nimport SelectPerTotal from '../common/SelectPerTotal'\nimport DescriptionTeams from './DescriptionTeams'\nimport Title from '../common/Title'\nimport Description from '../common/Description'\nimport Loader from 'react-loader-spinner'\nimport Logo from '../common/Logo'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\nconst Teams = ({ fetchingData, setFetchingData, teams }) => {\n\n  const [selectedTeam, setSelectedTeam] = useState('')\n  const [teamStats, setTeamStats] = useState([])\n  const [selectedSeason, setSelectedSeason] = useState(2020)\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [perGameSelected, setPerGameSelected] = useState(true)\n  const [totalSelected, setTotalSelected] = useState(false)\n  const [per36Selected, setPer36Selected] = useState(false)\n  const [pctSelected, setPctSelected] = useState(false)\n\n  useEffect(() => {\n\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n\n  return (\n    <div>\n      {selectedTeam !== ''\n        ? <>\n          <Row>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter} style={{ textAlign: 'center' }}>\n              <SelectPerTotal\n                setPerGameSelected={setPerGameSelected}\n                setTotalSelected={setTotalSelected}\n                setPer36Selected={setPer36Selected}\n                setPctSelected={setPctSelected}\n              />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter} style={{ textAlign: 'center' }}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <br></br>\n        </>\n        : <></>}\n      <Row>\n        <Col sm={smSide} style={{ textAlign: 'center' }}>\n        </Col>\n        <Col sm={smCenter}>\n          <SelectTeam\n            teams={teams}\n            setSelectedTeam={setSelectedTeam}\n            setTeamStats={setTeamStats}\n            setFetchingData={setFetchingData}\n            selectedSeason={selectedSeason}\n          />\n        </Col>\n      </Row>\n      {selectedTeam === ''\n        ?\n        <>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide}></Col>\n            <Col sm={smCenter}>\n              <Logo />\n            </Col>\n            <Col sm={smSide}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <Title />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <Description />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <DescriptionTeams />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n        </>\n        : <>\n          <Row>\n            <Col sm={smSide} style={{ textAlign: 'center' }}>\n            </Col>\n            <Col sm={smCenter}>\n              <SelectSeason\n                selectedSeason={selectedSeason}\n                setSelectedSeason={setSelectedSeason}\n                selectedTeam={selectedTeam}\n                setTeamStats={setTeamStats}\n                teams={teams}\n                setFetchingData={setFetchingData}\n              />\n            </Col>\n          </Row>\n        </>}\n      {fetchingData ? <>\n        <Row style={{ textAlign: 'center' }}>\n          <Col sm={smSide}></Col>\n          <Col sm={smCenter}>\n            <br></br>\n            <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n          </Col>\n          <Col sm={smSide}></Col>\n        </Row>\n      </>\n        : <></>}\n      <TeamStats\n        selectedTeam={selectedTeam}\n        teamStats={teamStats}\n        postSeasonSelected={postSeasonSelected}\n        perGameSelected={perGameSelected}\n        totalSelected={totalSelected}\n        per36Selected={per36Selected}\n        pctSelected={pctSelected}\n      />\n    </div>\n  )\n}\n\nexport default Teams","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\n\nconst SelectSeason = ({\n  setSelectedSeason,\n  setFetchingData,\n  setTopTenStats\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  const handleSelectedSeasonChange = (event) => {\n    setSelectedSeason(event.value)\n    setFetchingData(true)\n    playerStatService.getSummaryStatsFromDBForASeason(event.value)\n      .then((response) => {\n        setTopTenStats(response.data)\n        setFetchingData(false)\n      })\n  }\n\n  return (\n    <>\n      <Select\n        options={seasonSelectDescending}\n        onChange={(event) => handleSelectedSeasonChange(event)}\n        closeMenuOnSelect={true}\n        placeholder='Select season'\n      />\n    </>\n  )\n}\n\nexport default SelectSeason","import React from 'react'\nimport BarCharts from '../common/BarCharts'\n\nconst TopTenStats = (\n  {\n    topTenStats,\n    postSeasonSelected,\n    perGameSelected,\n    totalSelected,\n    per36Selected,\n    pctSelected,\n    playerAmount\n  }\n) => {\n\n  return (\n    <div>\n      <BarCharts\n        stats={topTenStats}\n        pctSelected={pctSelected}\n        totalSelected={totalSelected}\n        perGameSelected={perGameSelected}\n        per36Selected={per36Selected}\n        postSeasonSelected={postSeasonSelected}\n        playerAmount={playerAmount}\n        postSeasonFilteringDone={false}\n      />\n    </div >\n  )\n}\n\nexport default TopTenStats","\nconst DescriptionTop20 = () => {\n  return (\n    <div style={{ color: 'white', textAlign: 'center', }}>\n      <br></br>\n      {/* <br></br> */}\n      <p>\n        This page charts players in order on each stat.\n        Start by selecting a season.\n        {/* You can select how many players are shown in the chart.\n        Per 36 minutes and % charts show only players who are\n        eligible for those stats, ie. minutes per game and\n        shot attempts are high enough. */}\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionTop20\n","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectPlayerAmount = ({ setPlayerAmount }) => {\n\n  const [radioValue, setRadioValue] = useState('10');\n\n  const radios = [\n    { name: '10', value: '10' },\n    { name: '25', value: '25' },\n    { name: '50', value: '50' },\n    { name: '100', value: '100' },\n    { name: '250', value: '250' },\n    { name: 'all', value: '1000' }\n  ];\n\n  const handlePerGameChange = (e) => {\n    if (e.currentTarget.value === '10') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '25') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '50') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '100') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '250') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    if (e.currentTarget.value === '1000') {\n      setPlayerAmount(Number(e.currentTarget.value))\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handlePerGameChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n    </>\n  )\n}\n\nexport default SelectPlayerAmount","import React, { useState, useEffect } from 'react'\nimport { smSide, xsSide, smCenter, xsCenter } from '../../styling/columnWidths'\nimport { Row, Col } from 'react-bootstrap'\nimport 'chartjs-plugin-labels'\nimport Title from '../common/Title'\nimport Description from '../common/Description'\nimport Loader from 'react-loader-spinner'\nimport Logo from '../common/Logo'\nimport SelectSeason from './SelectSeason'\nimport SelectRegularPost from '../common/SelectRegularPost'\nimport SelectPerTotal from '../common/SelectPerTotal'\nimport TopTenStats from './TopTenStats'\nimport DescriptionTop20 from './DescriptionTop20'\nimport SelectPlayerAmount from './SelectPlayerAmount'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\nconst TopTen = ({ fetchingData, setFetchingData }) => {\n\n  const [selectedSeason, setSelectedSeason] = useState('')\n  const [topTenStats, setTopTenStats] = useState([])\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [perGameSelected, setPerGameSelected] = useState(true)\n  const [totalSelected, setTotalSelected] = useState(false)\n  const [per36Selected, setPer36Selected] = useState(false)\n  const [pctSelected, setPctSelected] = useState(false)\n  const [playerAmount, setPlayerAmount] = useState(10)\n\n  useEffect(() => {\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  return (\n    <>\n      {selectedSeason !== ''\n        ? <>\n          <Row>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter} style={{ textAlign: 'center' }}>\n              <SelectPerTotal\n                setPerGameSelected={setPerGameSelected}\n                setTotalSelected={setTotalSelected}\n                setPer36Selected={setPer36Selected}\n                setPctSelected={setPctSelected}\n              />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter} style={{ textAlign: 'center' }}>\n              <SelectPlayerAmount\n                setPlayerAmount={setPlayerAmount}\n              />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter} style={{ textAlign: 'center' }}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <br></br>\n        </>\n        : <></>}\n      <Row>\n        <Col sm={smSide} style={{ textAlign: 'center' }}>\n        </Col>\n        <Col sm={smCenter}>\n          <SelectSeason\n            selectedSeason={selectedSeason}\n            setSelectedSeason={setSelectedSeason}\n            setFetchingData={setFetchingData}\n            setTopTenStats={setTopTenStats}\n          />\n        </Col>\n        <Col sm={smSide}>\n        </Col>\n      </Row>\n      {selectedSeason === ''\n        ? <>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide}></Col>\n            <Col sm={smCenter}>\n              <Logo />\n            </Col>\n            <Col sm={smSide}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <Title />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <Description />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <DescriptionTop20 />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n        </>\n        : <>\n        </>}\n      {fetchingData ? <>\n        <Row style={{ textAlign: 'center' }}>\n          <Col sm={smSide}></Col>\n          <Col sm={smCenter}>\n            <br></br>\n            <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n          </Col>\n          <Col sm={smSide}></Col>\n        </Row>\n      </>\n        : <></>}\n      <TopTenStats\n        topTenStats={topTenStats}\n        postSeasonSelected={postSeasonSelected}\n        perGameSelected={perGameSelected}\n        totalSelected={totalSelected}\n        per36Selected={per36Selected}\n        pctSelected={pctSelected}\n        playerAmount={playerAmount}\n      />\n    </>\n  )\n}\n\nexport default TopTen","\nconst DescriptionPlayers = () => {\n  return (\n    <div style={{color:'white', textAlign:'center',}}>\n      <br></br>\n      <br></br>\n      <p>\n        Here you can contact us. Please write your feedback, comments, questions etc.\n        and click send. If you want you can give your email address for us to respond to.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionPlayers\n","import axios from 'axios'\n//const baseUrl = 'https://www.balldontlie.io/api/v1/players'\nconst baseUrl = '/api/contact'\n\nconst sendMessage = async (email, message) => {\n  await axios.post(baseUrl, {\n    email: email,\n    message: message\n  })\n}\n\nconst contactService = { sendMessage }\n\nexport default contactService","import React, { useState, useEffect } from 'react'\nimport { smSide, xsSide, smCenter, xsCenter } from '../../styling/columnWidths'\nimport DescriptionContact from './DescriptionContact'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport contactService from '../../services/contact'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\nconst Contact = () => {\n\n  useEffect(() => {\n\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  const [message, setMessage] = useState('')\n  const [email, setEmail] = useState('')\n  const [messageSent, setMessageSent] = useState(false)\n  const [sentEmptyMessage, setSentEmptyMessage] = useState(false)\n\n  const handleMessageChange = (event) => {\n    setMessage(event.target.value)\n  }\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if (message === '') {\n      setSentEmptyMessage(true)\n      return\n    }\n    setMessageSent(true)\n    contactService.sendMessage(email, message)\n    console.log('message send')\n    console.log(message)\n    console.log(email)\n  }\n\n  return (\n    <div>\n      {!messageSent\n        ? <>\n          <Form onSubmit={(event) => handleSubmit(event)}>\n            <Row>\n              <Col sm={smSide}></Col>\n              <Col sm={smCenter}>\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"optional email address\"\n                    onChange={(event) => handleEmailChange(event)} />\n                </Form.Group>\n              </Col>\n              <Col sm={smSide}></Col>\n            </Row>\n            <Row>\n              <Col sm={smSide}></Col>\n              <Col sm={smCenter}>\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                  <Form.Control\n                    as=\"textarea\"\n                    placeholder='Please write your message here'\n                    rows={3}\n                    onChange={(event) => handleMessageChange(event)} />\n                </Form.Group>\n              </Col>\n              <Col sm={smSide}></Col>\n            </Row>\n            {sentEmptyMessage\n              ? <>\n                <Row>\n                  <Col sm={smSide}></Col>\n                  <Col sm={smCenter}>\n                    <div style={{ color: 'white' }}>\n                      <p>Before sending, please write your message.</p>\n                    </div>\n\n                  </Col>\n                  <Col sm={smSide}></Col>\n                </Row>\n              </>\n              : <></>}\n\n            <Row>\n              <Col sm={smSide}></Col>\n              <Col sm={smCenter}>\n                <Button type='submit'>\n                  Send\n                </Button>\n              </Col>\n              <Col sm={smSide}></Col>\n            </Row>\n          </Form>\n          <Row >\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <DescriptionContact />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n        </>\n        : <>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide}></Col>\n            <Col sm={smCenter}>\n              <p style={{ color: 'white' }}>Thank you for your message.</p>\n            </Col>\n            <Col sm={smSide}></Col>\n          </Row>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default Contact\n","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\n\nconst SelectSeason = ({\n  setSelectedSeason,\n  setFetchingData,\n  setSummaryStats,\n  selectedPlayersNames,\n  setFilteredSummaryStats,\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  const handleSelectedSeasonChange = (event) => {\n    setSelectedSeason(event.value)\n    setFetchingData(true)\n    playerStatService.getSummaryStatsFromDBForASeason(event.value)\n      .then((response) => {\n        setSummaryStats(response.data)\n        const updatedFilteredSummaryStats = response.data.filter(stat => selectedPlayersNames.includes(stat.name))\n        setFilteredSummaryStats(updatedFilteredSummaryStats)\n        setFetchingData(false)\n      })\n\n  }\n\n  return (\n    <>\n      <Select\n        options={seasonSelectDescending}\n        onChange={(event) => handleSelectedSeasonChange(event)}\n        closeMenuOnSelect={true}\n        placeholder='Select season'\n      />\n\n    </>\n  )\n}\n\nexport default SelectSeason","import Select from 'react-select'\n\nconst SelectPlayer = ({\n  summaryStats,\n  selectedPlayersNames,\n  setSelectedPlayersNames,\n  filteredSummaryStats,\n  setFilteredSummaryStats\n\n}) => {\n\n  let playerNames = summaryStats.map(stat => stat.name)\n  //Remove duplicate names\n  playerNames = playerNames.filter((v, i, a) => a.indexOf(v) === i)\n\n  let playerSelect = playerNames.map(stat => ({ label: stat, value: stat }))\n\n  const handleSelectedPlayerChange = (playerFullName) => {\n    const updatedSelectedPlayersNames = selectedPlayersNames\n    updatedSelectedPlayersNames.push(playerFullName)\n    setSelectedPlayersNames(updatedSelectedPlayersNames)\n\n    const updatedFilteredSummaryStats = summaryStats.filter(stat => selectedPlayersNames.includes(stat.name))\n    setFilteredSummaryStats(updatedFilteredSummaryStats)\n  }\n\n  return (\n    <div>\n      <Select\n        options={playerSelect}\n        onChange={(option) => handleSelectedPlayerChange(option.value)}\n        placeholder='Select player'\n      />\n    </div>\n  )\n}\n\nexport default SelectPlayer","import React from 'react'\nimport BarCharts from '../common/BarCharts'\n\nconst PlayerComparisonStats = (\n  {\n    filteredSummaryStats,\n    postSeasonSelected,\n    perGameSelected,\n    totalSelected,\n    per36Selected,\n    pctSelected,\n  }\n) => {\n\n  return (\n    <div>\n      <BarCharts\n        stats={filteredSummaryStats}\n        pctSelected={pctSelected}\n        totalSelected={totalSelected}\n        perGameSelected={perGameSelected}\n        per36Selected={per36Selected}\n        postSeasonSelected={postSeasonSelected}\n        playerAmount={1000}\n        postSeasonFilteringDone={false}\n      />\n    </div >\n  )\n}\n\nexport default PlayerComparisonStats","\nconst DescriptionPlayerComparison = () => {\n  return (\n    <div style={{ color: 'white', textAlign: 'center', }}>\n      <br></br>\n      {/* <br></br> */}\n      <p>\n        On this page you can select a season and players whose stats you'd like to compare.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionPlayerComparison\n","import React, { useState, useEffect } from 'react'\nimport { smSide, xsSide, smCenter, xsCenter } from '../../styling/columnWidths'\nimport SelectSeason from './SelectSeason'\nimport SelectPlayer from './SelectPlayer'\nimport PlayerComparisonStats from './ComparePlayersStats'\nimport DescriptionPlayerComparison from './DescriptionComparePlayers'\nimport SelectPerTotal from '../common/SelectPerTotal'\nimport SelectRegularPost from '../common/SelectRegularPost'\nimport Logo from '../common/Logo'\nimport Title from '../common/Title'\nimport Description from '../common/Description'\nimport { Row, Col } from 'react-bootstrap'\nimport ReactGa from 'react-ga'\nimport Loader from 'react-loader-spinner'\nrequire('dotenv').config()\n\n\nconst PlayerComparison = ({ players, fetchingData, setFetchingData }) => {\n  const [selectedSeason, setSelectedSeason] = useState('')\n  const [summaryStats, setSummaryStats] = useState([])\n  const [filteredSummaryStats, setFilteredSummaryStats] = useState([])\n  const [selectedPlayersNames, setSelectedPlayersNames] = useState([])\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [perGameSelected, setPerGameSelected] = useState(true)\n  const [totalSelected, setTotalSelected] = useState(false)\n  const [per36Selected, setPer36Selected] = useState(false)\n  const [pctSelected, setPctSelected] = useState(false)\n\n  useEffect(() => {\n\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  return (\n    <>\n      {selectedSeason !== ''\n        ? <>\n          <Row>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={8} xs={xsCenter} style={{ textAlign: 'center' }}>\n              <SelectPerTotal\n                setPerGameSelected={setPerGameSelected}\n                setTotalSelected={setTotalSelected}\n                setPer36Selected={setPer36Selected}\n                setPctSelected={setPctSelected}\n              />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={8} xs={xsCenter} style={{ textAlign: 'center' }}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <br></br>\n        </>\n        : <></>}\n      <Row>\n        <Col sm={smSide} style={{ textAlign: 'center' }}>\n        </Col>\n        <Col sm={smCenter}>\n          <SelectSeason\n            selectedSeason={selectedSeason}\n            setSelectedSeason={setSelectedSeason}\n            setFetchingData={setFetchingData}\n            setSummaryStats={setSummaryStats}\n            selectedPlayersNames={selectedPlayersNames}\n            filteredSummaryStats={filteredSummaryStats}\n            setFilteredSummaryStats={setFilteredSummaryStats}\n            summaryStats={summaryStats}\n          />\n        </Col>\n      </Row>\n      {summaryStats.length > 0\n        ? <>\n          <Row>\n            <Col sm={smSide} style={{ textAlign: 'center' }}>\n            </Col>\n            <Col sm={smCenter}>\n              <SelectPlayer\n                selectedPlayersNames={selectedPlayersNames}\n                setSelectedPlayersNames={setSelectedPlayersNames}\n                summaryStats={summaryStats}\n                filteredSummaryStats={filteredSummaryStats}\n                setFilteredSummaryStats={setFilteredSummaryStats}\n              />\n            </Col>\n          </Row>\n        </>\n        : <></>}\n      {selectedSeason === ''\n        ? <>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide}></Col>\n            <Col sm={smCenter}>\n              <Logo />\n            </Col>\n            <Col sm={smSide}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <Title />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <Description />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter}>\n              <DescriptionPlayerComparison />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n        </>\n        : <>\n        </>}\n      {fetchingData ? <>\n        <Row style={{ textAlign: 'center' }}>\n          <Col sm={smSide}></Col>\n          <Col sm={smCenter}>\n            <br></br>\n            <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n          </Col>\n          <Col sm={smSide}></Col>\n        </Row>\n      </>\n        : <></>}\n      <PlayerComparisonStats\n        filteredSummaryStats={filteredSummaryStats}\n        postSeasonSelected={postSeasonSelected}\n        perGameSelected={perGameSelected}\n        totalSelected={totalSelected}\n        per36Selected={per36Selected}\n        pctSelected={pctSelected}\n      />\n    </>\n  )\n}\n\nexport default PlayerComparison\n","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\n\nconst SelectSeason = ({\n  setSelectedSeason,\n  setFetchingData,\n  setPercentileStats,\n  percentileStats\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  const handleSelectedSeasonChange = (event) => {\n    setSelectedSeason(event.value)\n    setFetchingData(true)\n    playerStatService.getSummaryStatsFromDBForASeason(event.value)\n      .then((response) => {\n        //console.log(response.data)\n        setPercentileStats(response.data\n          .filter(stat => stat.name !== undefined)\n          .sort((a, b) => (a.name.split(' ')[1] > b.name.split(' ')[1]) ? 1\n            : ((b.name.split(' ')[1] > a.name.split(' ')[1]) ? -1\n              : 0)))\n        setFetchingData(false)\n      })\n    //console.log(percentileStats)\n  }\n\n  return (\n    <>\n      <Select\n        options={seasonSelectDescending}\n        onChange={(event) => handleSelectedSeasonChange(event)}\n        closeMenuOnSelect={true}\n        placeholder='Select season'\n      />\n    </>\n  )\n}\n\nexport default SelectSeason","import React from 'react'\nimport { Line } from 'react-chartjs-2'\nimport colors from '../../styling/colors'\n\n\n\nconst PercentileStats = ({\n  //selectedSeason,\n  percentileStats,\n  selectedPlayersNames,\n  postSeasonSelected,\n  perGameSelected,\n  totalSelected,\n  per36Selected,\n  pctSelected,\n  amountPlayersSelected\n}\n) => {\n\n  const options = {\n    legend: {\n      /* onClick: (e) => e.stopPropagation(), */\n      display: true\n    },\n    scales: {\n      xAxes: [{\n        ticks: {\n          display: true,\n          fontColor: 'white',\n          fontSize: 14,\n        },\n        gridLines: {\n          display: false,\n          color: \"grey\"\n        },\n      }],\n      yAxes: [{\n        ticks: {\n          /* beginAtZero: true, */\n          fontColor: 'white',\n          fontSize: 14,\n        },\n        gridLines: {\n          display: true,\n          color: \"grey\"\n        },\n      }]\n    }\n  }\n\n  const percentileStatsFiltered = percentileStats.filter(playerStat => playerStat.postseason === postSeasonSelected)\n\n  const numberOfPlayers = percentileStatsFiltered.length\n  const numberOfPlayersPer36 = percentileStatsFiltered.filter(stat => stat.pts_per36 !== undefined).length\n\n  const statsForPtsPerGame = [...percentileStatsFiltered]\n  const statsForAstPerGame = [...percentileStatsFiltered]\n  const statsForRebPerGame = [...percentileStatsFiltered]\n  const statsForBlkPerGame = [...percentileStatsFiltered]\n  const statsForStlPerGame = [...percentileStatsFiltered]\n  const statsForTurnoverPerGame = [...percentileStatsFiltered]\n  const statsForAstToTurnover = [...percentileStatsFiltered]\n\n  const statsForFgPctPerGame = [...percentileStatsFiltered]\n  const statsForFg3PctPerGame = [...percentileStatsFiltered]\n  const statsForFtPctPerGame = [...percentileStatsFiltered]\n\n  const statsForPtsPer36 = [...percentileStatsFiltered]\n  const statsForAstPer36 = [...percentileStatsFiltered]\n  const statsForRebPer36 = [...percentileStatsFiltered]\n  const statsForBlkPer36 = [...percentileStatsFiltered]\n  const statsForStlPer36 = [...percentileStatsFiltered]\n  const statsForTurnoverPer36 = [...percentileStatsFiltered]\n\n  const statsForPtsTotal = [...percentileStatsFiltered]\n  const statsForAstTotal = [...percentileStatsFiltered]\n  const statsForRebTotal = [...percentileStatsFiltered]\n  const statsForBlkTotal = [...percentileStatsFiltered]\n  const statsForStlTotal = [...percentileStatsFiltered]\n  const statsForTurnoverTotal = [...percentileStatsFiltered]\n\n  const statsSortedPtsPerGame = statsForPtsPerGame.sort((a, b) => a.pts_pergame - b.pts_pergame)\n  const statsSortedAstPerGame = statsForAstPerGame.sort((a, b) => a.ast_pergame - b.ast_pergame)\n  const statsSortedRebPerGame = statsForRebPerGame.sort((a, b) => a.reb_pergame - b.reb_pergame)\n  const statsSortedBlkPerGame = statsForBlkPerGame.sort((a, b) => a.blk_pergame - b.blk_pergame)\n  const statsSortedStlPerGame = statsForStlPerGame.sort((a, b) => a.stl_pergame - b.stl_pergame)\n  const statsSortedTurnoverPerGame = statsForTurnoverPerGame.sort((a, b) => b.turnover_pergame - a.turnover_pergame)\n  const statsSortedAstToTurnover = statsForAstToTurnover.sort((a, b) => a.ast_to_turnover - b.ast_to_turnover)\n\n  const statsSortedFgPctPerGame = statsForFgPctPerGame.sort((a, b) => a.fg_pct - b.fg_pct)\n  const statsSortedFg3PctPerGame = statsForFg3PctPerGame.sort((a, b) => a.fg3_pct - b.fg3_pct)\n  const statsSortedFtPctPerGame = statsForFtPctPerGame.sort((a, b) => a.ft_pct - b.ft_pct)\n\n  const statsSortedPtsPer36 = statsForPtsPer36.filter(stat => stat.pts_per36 !== undefined).sort((a, b) => a.pts_per36 - b.pts_per36)\n  const statsSortedAstPer36 = statsForAstPer36.filter(stat => stat.pts_per36 !== undefined).sort((a, b) => a.ast_per36 - b.ast_per36)\n  const statsSortedRebPer36 = statsForRebPer36.filter(stat => stat.pts_per36 !== undefined).sort((a, b) => a.reb_per36 - b.reb_per36)\n  const statsSortedBlkPer36 = statsForBlkPer36.filter(stat => stat.pts_per36 !== undefined).sort((a, b) => a.blk_per36 - b.blk_per36)\n  const statsSortedStlPer36 = statsForStlPer36.filter(stat => stat.pts_per36 !== undefined).sort((a, b) => a.stl_per36 - b.stl_per36)\n  const statsSortedTurnoverPer36 = statsForTurnoverPer36.filter(stat => stat.pts_per36 !== undefined).sort((a, b) => b.turnover_per36 - a.turnover_per36)\n\n  const statsSortedPtsTotal = statsForPtsTotal.sort((a, b) => a.pts_total - b.pts_total)\n  const statsSortedAstTotal = statsForAstTotal.sort((a, b) => a.ast_total - b.ast_total)\n  const statsSortedRebTotal = statsForRebTotal.sort((a, b) => a.reb_total - b.reb_total)\n  const statsSortedBlkTotal = statsForBlkTotal.sort((a, b) => a.blk_total - b.blk_total)\n  const statsSortedStlTotal = statsForStlTotal.sort((a, b) => a.stl_total - b.stl_total)\n  const statsSortedTurnoverTotal = statsForTurnoverTotal.sort((a, b) => b.turnover_total - a.turnover_total)\n\n  //console.log(statsSortedPtsPerGame)\n\n  let percentileStatsToShowPerGame = []\n  let percentileStatsToShowPer36 = []\n  let percentileStatsToShowTotal = []\n  let percentileStatsToShowPct = []\n\n  selectedPlayersNames.forEach(playerName => {\n    const ptsPerGamePercentile = Math.floor(statsSortedPtsPerGame.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const astPerGamePercentile = Math.floor(statsSortedAstPerGame.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const rebPerGamePercentile = Math.floor(statsSortedRebPerGame.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const blkPerGamePercentile = Math.floor(statsSortedBlkPerGame.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const stlPerGamePercentile = Math.floor(statsSortedStlPerGame.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const turnoverPerGamePercentile = Math.floor(statsSortedTurnoverPerGame.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const astToTurnoverPercentile = Math.floor(statsSortedAstToTurnover.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n\n    const fgPctPercentile = Math.floor(statsSortedFgPctPerGame.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const fg3PctPercentile = Math.floor(statsSortedFg3PctPerGame.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const ftPctPercentile = Math.floor(statsSortedFtPctPerGame.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n\n    const ptsPer36Percentile = Math.floor(statsSortedPtsPer36.findIndex(stat => stat.name === playerName) / numberOfPlayersPer36 * 100 * 10) / 10\n    const astPer36Percentile = Math.floor(statsSortedAstPer36.findIndex(stat => stat.name === playerName) / numberOfPlayersPer36 * 100 * 10) / 10\n    const rebPer36Percentile = Math.floor(statsSortedRebPer36.findIndex(stat => stat.name === playerName) / numberOfPlayersPer36 * 100 * 10) / 10\n    const blkPer36Percentile = Math.floor(statsSortedBlkPer36.findIndex(stat => stat.name === playerName) / numberOfPlayersPer36 * 100 * 10) / 10\n    const stlPer36Percentile = Math.floor(statsSortedStlPer36.findIndex(stat => stat.name === playerName) / numberOfPlayersPer36 * 100 * 10) / 10\n    const turnoverPer36Percentile = Math.floor(statsSortedTurnoverPer36.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n\n    const ptsTotalPercentile = Math.floor(statsSortedPtsTotal.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const astTotalPercentile = Math.floor(statsSortedAstTotal.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const rebTotalPercentile = Math.floor(statsSortedRebTotal.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const blkTotalPercentile = Math.floor(statsSortedBlkTotal.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const stlTotalPercentile = Math.floor(statsSortedStlTotal.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n    const turnoverTotalPercentile = Math.floor(statsSortedTurnoverTotal.findIndex(stat => stat.name === playerName) / numberOfPlayers * 100 * 10) / 10\n\n    const newPlayerPercentilesPerGame = {\n      name: playerName,\n      pts_pergame: ptsPerGamePercentile,\n      ast_pergame: astPerGamePercentile,\n      reb_pergame: rebPerGamePercentile,\n      blk_pergame: blkPerGamePercentile,\n      stl_pergame: stlPerGamePercentile,\n      turnover_pergame: turnoverPerGamePercentile,\n      ast_to_turnover: astToTurnoverPercentile,\n      fg_pct: fgPctPercentile,\n      fg3_pct: fg3PctPercentile,\n      ft_pct: ftPctPercentile\n    }\n    percentileStatsToShowPerGame.push(newPlayerPercentilesPerGame)\n\n    const newPlayerPercentilesPer36 = {\n      name: playerName,\n      pts_per36: ptsPer36Percentile,\n      ast_per36: astPer36Percentile,\n      reb_per36: rebPer36Percentile,\n      blk_per36: blkPer36Percentile,\n      stl_per36: stlPer36Percentile,\n      turnover_per36: turnoverPer36Percentile,\n      ast_to_turnover: astToTurnoverPercentile\n    }\n    percentileStatsToShowPer36.push(newPlayerPercentilesPer36)\n\n    const newPlayerPercentilesTotal = {\n      name: playerName,\n      pts_total: ptsTotalPercentile,\n      ast_total: astTotalPercentile,\n      reb_total: rebTotalPercentile,\n      blk_total: blkTotalPercentile,\n      stl_total: stlTotalPercentile,\n      turnover_total: turnoverTotalPercentile,\n      ast_to_turnover: astToTurnoverPercentile\n    }\n    percentileStatsToShowTotal.push(newPlayerPercentilesTotal)\n\n    const newPlayerPercentilesPct = {\n      name: playerName,\n      fg_pct: fgPctPercentile,\n      fg3_pct: fg3PctPercentile,\n      ft_pct: ftPctPercentile\n    }\n    percentileStatsToShowPct.push(newPlayerPercentilesPct)\n  })\n\n  let datasetsPerGame = []\n  for (let i = 0; i < percentileStatsToShowPerGame.length; i++) {\n    let borderColor\n    let pointBackgroundColor\n    switch (i) {\n      case 0:\n        borderColor = colors.orangeLine\n        pointBackgroundColor = colors.orangeLine\n        break\n      case 1:\n        borderColor = colors.yellowLine\n        pointBackgroundColor = colors.yellowLine\n        break\n      case 2:\n        borderColor = colors.greenLine\n        pointBackgroundColor = colors.greenLine\n        break\n      case 3:\n        borderColor = colors.magentaLine\n        pointBackgroundColor = colors.magentaLine\n        break\n      case 4:\n        borderColor = colors.cyanLine\n        pointBackgroundColor = colors.cyanLine\n        break\n      case 5:\n        borderColor = colors.maroonLine\n        pointBackgroundColor = colors.maroonLine\n        break\n      case 6:\n        borderColor = colors.oliveLine\n        pointBackgroundColor = colors.oliveLine\n        break\n      case 7:\n        borderColor = colors.limeLine\n        pointBackgroundColor = colors.limeLine\n        break\n      case 8:\n        borderColor = colors.pinkLine\n        pointBackgroundColor = colors.pinkLine\n        break\n      case 9:\n        borderColor = colors.beigeLine\n        pointBackgroundColor = colors.beigeLine\n        break\n      default:\n        borderColor = null\n        pointBackgroundColor = null\n    }\n\n    const datasetPerGame = {\n      label: percentileStatsToShowPerGame[i].name,\n      data: [\n        percentileStatsToShowPerGame[i].pts_pergame,\n        percentileStatsToShowPerGame[i].ast_pergame,\n        percentileStatsToShowPerGame[i].reb_pergame,\n        percentileStatsToShowPerGame[i].blk_pergame,\n        percentileStatsToShowPerGame[i].stl_pergame,\n        percentileStatsToShowPerGame[i].ast_to_turnover,\n        percentileStatsToShowPerGame[i].turnover_pergame\n      ],\n      fill: false,\n      borderColor: borderColor,\n      pointBackgroundColor: pointBackgroundColor,\n      showline: true,\n      hidden: false\n    }\n    datasetsPerGame.push(datasetPerGame)\n  }\n  const dataPerGame = {\n    labels: ['pts', 'ast', 'reb', 'blk', 'stl', 'ast/to', 'turnover'],\n    datasets: datasetsPerGame\n  }\n\n  let datasetsPer36 = []\n  for (let i = 0; i < percentileStatsToShowPer36.length; i++) {\n    let borderColor\n    let pointBackgroundColor\n    switch (i) {\n      case 0:\n        borderColor = colors.orangeLine\n        pointBackgroundColor = colors.orangeLine\n        break\n      case 1:\n        borderColor = colors.yellowLine\n        pointBackgroundColor = colors.yellowLine\n        break\n      case 2:\n        borderColor = colors.greenLine\n        pointBackgroundColor = colors.greenLine\n        break\n      case 3:\n        borderColor = colors.magentaLine\n        pointBackgroundColor = colors.magentaLine\n        break\n      case 4:\n        borderColor = colors.cyanLine\n        pointBackgroundColor = colors.cyanLine\n        break\n      case 5:\n        borderColor = colors.maroonLine\n        pointBackgroundColor = colors.maroonLine\n        break\n      case 6:\n        borderColor = colors.oliveLine\n        pointBackgroundColor = colors.oliveLine\n        break\n      case 7:\n        borderColor = colors.limeLine\n        pointBackgroundColor = colors.limeLine\n        break\n      case 8:\n        borderColor = colors.pinkLine\n        pointBackgroundColor = colors.pinkLine\n        break\n      case 9:\n        borderColor = colors.beigeLine\n        pointBackgroundColor = colors.beigeLine\n        break\n      default:\n        borderColor = null\n        pointBackgroundColor = null\n    }\n\n    const datasetPer36 = {\n      label: percentileStatsToShowPer36[i].name,\n      data: [\n        percentileStatsToShowPer36[i].pts_per36,\n        percentileStatsToShowPer36[i].ast_per36,\n        percentileStatsToShowPer36[i].reb_per36,\n        percentileStatsToShowPer36[i].blk_per36,\n        percentileStatsToShowPer36[i].stl_per36,\n        percentileStatsToShowPer36[i].ast_to_turnover,\n        percentileStatsToShowPer36[i].turnover_per36\n\n      ],\n      fill: false,\n      borderColor: borderColor,\n      pointBackgroundColor: pointBackgroundColor,\n      showline: true,\n      hidden: false\n    }\n    datasetsPer36.push(datasetPer36)\n  }\n  const dataPer36 = {\n    labels: ['pts', 'ast', 'reb', 'blk', 'stl', 'ast/to', 'turnover'],\n    datasets: datasetsPer36\n  }\n\n\n  let datasetsTotal = []\n  for (let i = 0; i < percentileStatsToShowTotal.length; i++) {\n    let borderColor\n    let pointBackgroundColor\n    switch (i) {\n      case 0:\n        borderColor = colors.orangeLine\n        pointBackgroundColor = colors.orangeLine\n        break\n      case 1:\n        borderColor = colors.yellowLine\n        pointBackgroundColor = colors.yellowLine\n        break\n      case 2:\n        borderColor = colors.greenLine\n        pointBackgroundColor = colors.greenLine\n        break\n      case 3:\n        borderColor = colors.magentaLine\n        pointBackgroundColor = colors.magentaLine\n        break\n      case 4:\n        borderColor = colors.cyanLine\n        pointBackgroundColor = colors.cyanLine\n        break\n      case 5:\n        borderColor = colors.maroonLine\n        pointBackgroundColor = colors.maroonLine\n        break\n      case 6:\n        borderColor = colors.oliveLine\n        pointBackgroundColor = colors.oliveLine\n        break\n      case 7:\n        borderColor = colors.limeLine\n        pointBackgroundColor = colors.limeLine\n        break\n      case 8:\n        borderColor = colors.pinkLine\n        pointBackgroundColor = colors.pinkLine\n        break\n      case 9:\n        borderColor = colors.beigeLine\n        pointBackgroundColor = colors.beigeLine\n        break\n      default:\n        borderColor = null\n        pointBackgroundColor = null\n    }\n\n    const datasetTotal = {\n      label: percentileStatsToShowTotal[i].name,\n      data: [\n        percentileStatsToShowTotal[i].pts_total,\n        percentileStatsToShowTotal[i].ast_total,\n        percentileStatsToShowTotal[i].reb_total,\n        percentileStatsToShowTotal[i].blk_total,\n        percentileStatsToShowTotal[i].stl_total,\n\n        percentileStatsToShowTotal[i].ast_to_turnover,\n        percentileStatsToShowTotal[i].turnover_total\n      ],\n      fill: false,\n      borderColor: borderColor,\n      pointBackgroundColor: pointBackgroundColor,\n      showline: true,\n      hidden: false\n    }\n    datasetsTotal.push(datasetTotal)\n  }\n  const dataTotal = {\n    labels: ['pts', 'ast', 'reb', 'blk', 'stl', 'ast/to', 'turnover'],\n    datasets: datasetsTotal\n  }\n\n  let datasetsPct = []\n  for (let i = 0; i < percentileStatsToShowPct.length; i++) {\n    let borderColor\n    let pointBackgroundColor\n    switch (i) {\n      case 0:\n        borderColor = colors.orangeLine\n        pointBackgroundColor = colors.orangeLine\n        break\n      case 1:\n        borderColor = colors.yellowLine\n        pointBackgroundColor = colors.yellowLine\n        break\n      case 2:\n        borderColor = colors.greenLine\n        pointBackgroundColor = colors.greenLine\n        break\n      case 3:\n        borderColor = colors.magentaLine\n        pointBackgroundColor = colors.magentaLine\n        break\n      case 4:\n        borderColor = colors.cyanLine\n        pointBackgroundColor = colors.cyanLine\n        break\n      case 5:\n        borderColor = colors.maroonLine\n        pointBackgroundColor = colors.maroonLine\n        break\n      case 6:\n        borderColor = colors.oliveLine\n        pointBackgroundColor = colors.oliveLine\n        break\n      case 7:\n        borderColor = colors.limeLine\n        pointBackgroundColor = colors.limeLine\n        break\n      case 8:\n        borderColor = colors.pinkLine\n        pointBackgroundColor = colors.pinkLine\n        break\n      case 9:\n        borderColor = colors.beigeLine\n        pointBackgroundColor = colors.beigeLine\n        break\n      default:\n        borderColor = null\n        pointBackgroundColor = null\n    }\n\n    const datasetPct = {\n      label: percentileStatsToShowPct[i].name,\n      data: [\n        percentileStatsToShowPct[i].fg_pct,\n        percentileStatsToShowPct[i].fg3_pct,\n        percentileStatsToShowPct[i].ft_pct,\n      ],\n      fill: false,\n      borderColor: borderColor,\n      pointBackgroundColor: pointBackgroundColor,\n      showline: true,\n      hidden: false\n    }\n    datasetsPct.push(datasetPct)\n  }\n  const dataPct = {\n    labels: ['fg %', 'fg3 %', 'ft %'],\n    datasets: datasetsPct\n  }\n\n  return (\n    <>\n      <div className='chart'>\n        {perGameSelected\n          ? <Line\n            data={dataPerGame}\n            options={options}\n          />\n          : <></>}\n        {per36Selected\n          ? <Line\n            data={dataPer36}\n            options={options}\n          />\n          : <></>}\n        {totalSelected\n          ? <Line\n            data={dataTotal}\n            options={options}\n          />\n          : <></>}\n        {pctSelected\n          ? <Line\n            data={dataPct}\n            options={options}\n          />\n          : <></>}\n      </div>\n    </>\n  )\n}\n\nexport default PercentileStats\n","import React from 'react'\n\nconst DescriptionPercentiles = () => {\n  return (\n    <div style={{color:'white'}}>\n      <br></br>\n      <p>This page shows percentiles for selected players.\n        The higher the percentile is the better the player has\n        performed compared to other players.\n        For example a 95th percentile on points per game means that\n        the player's points per game stat is better than 95 % of the\n        league.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionPercentiles\n","import Select from 'react-select'\n\nconst SelectPlayer = ({\n  percentileStats,\n  selectedPlayersNames,\n  setSelectedPlayersNames,\n  setAmountPlayersSelected,\n  amountPlayersSelected\n}) => {\n\n  let playerNames = percentileStats.map(stat => stat.name)\n  //Remove duplicate names\n  playerNames = playerNames.filter((v, i, a) => a.indexOf(v) === i)\n\n  let playerSelect = playerNames.map(stat => ({ label: stat, value: stat }))\n\n  const handleSelectedPlayerChange = (playerFullName) => {\n    const updatedSelectedPlayersNames = selectedPlayersNames\n    updatedSelectedPlayersNames.push(playerFullName)\n    setSelectedPlayersNames(updatedSelectedPlayersNames)\n    setAmountPlayersSelected(amountPlayersSelected + 1)\n    //console.log(selectedPlayersNames.length)\n  }\n\n  return (\n    <div>\n      <Select\n        options={playerSelect}\n        onChange={(option) => handleSelectedPlayerChange(option.value)}\n        placeholder='Select player'\n      />\n    </div>\n  )\n}\n\nexport default SelectPlayer","import React, { useState, useEffect } from 'react'\nimport { smSide, xsSide, smCenter, xsCenter } from '../../styling/columnWidths'\nimport { Row, Col } from 'react-bootstrap'\nimport 'chartjs-plugin-labels'\nimport Title from '../common/Title'\nimport Description from '../common/Description'\nimport Loader from 'react-loader-spinner'\nimport Logo from '../common/Logo'\nimport SelectSeason from './SelectSeason'\nimport SelectRegularPost from '../common/SelectRegularPost'\nimport SelectPerTotal from '../common/SelectPerTotal'\nimport PercentileStats from './PercentileStats'\nimport DescriptionPercentiles from './DescriptionPercentiles'\nimport SelectPlayer from './SelectPlayer'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\nconst TopTen = ({ fetchingData, setFetchingData }) => {\n\n  const [selectedSeason, setSelectedSeason] = useState('')\n  const [percentileStats, setPercentileStats] = useState([])\n  const [selectedPlayersNames, setSelectedPlayersNames] = useState([])\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [perGameSelected, setPerGameSelected] = useState(true)\n  const [totalSelected, setTotalSelected] = useState(false)\n  const [per36Selected, setPer36Selected] = useState(false)\n  const [pctSelected, setPctSelected] = useState(false)\n  const [amountPlayersSelected, setAmountPlayersSelected] = useState(0)\n\n  useEffect(() => {\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  return (\n    <>\n      {selectedSeason !== ''\n        ? <>\n          <Row>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter} style={{ textAlign: 'center' }}>\n              <SelectPerTotal\n                setPerGameSelected={setPerGameSelected}\n                setTotalSelected={setTotalSelected}\n                setPer36Selected={setPer36Selected}\n                setPctSelected={setPctSelected}\n              />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <Row>\n            <Col sm={smSide} xs={xsSide}></Col>\n            <Col sm={smCenter} xs={xsCenter} style={{ textAlign: 'center' }}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n            <Col sm={smSide} xs={xsSide}></Col>\n          </Row>\n          <br></br>\n        </>\n        : <></>}\n      <Row>\n        <Col sm={smSide} style={{ textAlign: 'center' }}>\n        </Col>\n        <Col sm={smCenter}>\n          <SelectSeason\n            selectedSeason={selectedSeason}\n            setSelectedSeason={setSelectedSeason}\n            setFetchingData={setFetchingData}\n            setPercentileStats={setPercentileStats}\n            percentileStats={percentileStats}\n          />\n        </Col>\n        <Col sm={smSide}>\n        </Col>\n      </Row>\n      {percentileStats.length > 0 && amountPlayersSelected < 10\n        ? <>\n          <Row>\n            <Col sm={smSide} style={{ textAlign: 'center' }}>\n            </Col>\n            <Col sm={smCenter}>\n              <SelectPlayer\n                selectedPlayersNames={selectedPlayersNames}\n                setSelectedPlayersNames={setSelectedPlayersNames}\n                percentileStats={percentileStats}\n                setAmountPlayersSelected={setAmountPlayersSelected}\n                amountPlayersSelected={amountPlayersSelected}\n              />\n            </Col>\n          </Row>\n        </>\n        : <>\n        </>\n      }\n      {amountPlayersSelected === 10\n        ? <>\n          <br></br>\n          <Row>\n            <Col sm={smSide} style={{ textAlign: 'center' }}>\n            </Col>\n            <Col sm={smCenter}>\n              <p style={{ color: 'white' }}>Maximum number of 10 players selected</p>\n            </Col>\n          </Row>\n        </>\n        : <></>}\n      {\n        selectedSeason === ''\n          ? <>\n            <br></br>\n            <br></br>\n            <Row style={{ textAlign: 'center' }}>\n              <Col sm={smSide}></Col>\n              <Col sm={smCenter}>\n                <Logo />\n              </Col>\n              <Col sm={smSide}></Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <Row style={{ textAlign: 'center' }}>\n              <Col sm={smSide} xs={xsSide}></Col>\n              <Col sm={smCenter} xs={xsCenter}>\n                <Title />\n              </Col>\n              <Col sm={smSide} xs={xsSide}></Col>\n            </Row>\n            <Row style={{ textAlign: 'center' }}>\n              <Col sm={smSide} xs={xsSide}></Col>\n              <Col sm={smCenter} xs={xsCenter}>\n                <Description />\n              </Col>\n              <Col sm={smSide} xs={xsSide}></Col>\n            </Row>\n            <Row style={{ textAlign: 'center' }}>\n              <Col sm={smSide} xs={xsSide}></Col>\n              <Col sm={smCenter} xs={xsCenter}>\n                <DescriptionPercentiles />\n              </Col>\n              <Col sm={smSide} xs={xsSide}></Col>\n            </Row>\n          </>\n          : <>\n          </>\n      }\n      {\n        fetchingData ? <>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={smSide}></Col>\n            <Col sm={smCenter}>\n              <br></br>\n              <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n            </Col>\n            <Col sm={smSide}></Col>\n          </Row>\n        </>\n          : <></>\n      }\n\n      <br></br>\n      {\n        percentileStats.length > 0 && amountPlayersSelected > 0\n          ? <>\n            <PercentileStats\n              percentileStats={percentileStats}\n              selectedPlayersNames={selectedPlayersNames}\n              postSeasonSelected={postSeasonSelected}\n              perGameSelected={perGameSelected}\n              totalSelected={totalSelected}\n              per36Selected={per36Selected}\n              pctSelected={pctSelected}\n              amountPlayersSelected={amountPlayersSelected}\n            />\n          </>\n          : <></>\n      }\n    </>\n  )\n}\n\nexport default TopTen","import axios from 'axios'\n//const baseUrl = 'https://www.balldontlie.io/api/v1/players'\nconst baseUrl = '/api/players'\n\nconst getPlayers = async () => {\n  const players = await axios.get(baseUrl)\n  \n  return players.data\n}\n\nconst getPlayersForASeason = async (season) => {\n  const players = await axios.get(`${baseUrl}/${season}`)\n  \n  return players.data\n}\n\nconst playerService = { getPlayers, getPlayersForASeason }\n\nexport default playerService","import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/teams'\nconst baseUrlDB = '/api/teamsdb'\n\nconst getTeams = async () => {\n  const teams = await axios.get(`${baseUrl}`)\n  return teams.data\n}\n\nconst getTeamsFromDatabase = async () => {\n  const teams = await axios.get(`${baseUrlDB}`)\n  return teams.data\n}\n\nconst teamService = {getTeams, getTeamsFromDatabase}\n\nexport default teamService","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport NavigationBar from './components/common/NavigationBar'\nimport Players from './components/players/Players'\nimport Teams from './components/teams/Teams'\nimport TopTen from './components/topTen/TopTen'\nimport Contact from './components/contact/Contact'\nimport ComparePlayers from './components/ComparePlayers/ComparePlayers'\nimport Percentiles from './components/percentiles/Percentiles'\nimport playerService from './services/players'\nimport teamService from './services/teams'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  /*Link\n    Redirect,\n   useRouteMatch,\n   Redirect,\n   useHistory */\n} from 'react-router-dom'\n\nfunction App() {\n\n  const [fetchingData, setFetchingData] = useState(false)\n  const [players, setPlayers] = useState([])\n  const [teams, setTeams] = useState([])\n\n  useEffect(() => {\n    //Player sorting should be done in the database query?\n    playerService.getPlayers()\n      .then((response) => {\n        setPlayers(response.map(player => ({ ...player, fullName: `${player.firstName} ${player.lastName}` }))\n          .sort((a, b) => (a.lastName > b.lastName) ? 1 : ((b.lastName > a.lastName) ? -1 : 0)))\n      })\n    teamService.getTeamsFromDatabase()\n      .then((response) => {\n        setTeams(response.sort((a, b) => (a.city > b.city) ? 1 : ((b.city > a.city) ? -1 : 0)))\n      })\n  }, [])\n\n\n  return (\n    <Router>\n      <div style={{\n        backgroundColor: \"#17202A\",\n        height: '1500vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center'\n      }}>\n        <div className=\"container\" style={{ paddingTop: '2vh', backgroundColor: \"#17202A\" }} >\n          <Container>\n            <Row>\n              <Col sm={2}></Col>\n              <Col sm={8}>\n                <NavigationBar />\n              </Col>\n              <Col sm={2}></Col>\n            </Row>\n            {/* <div style={{ backgroundColor:'white' }}> */}\n            {/*  <Row align=\"left\">\n              <Col sm={2}></Col>\n              <Col sm={2} xs={3}>\n                <Link to='/players'>player career</Link>\n              </Col>\n\n              <Col sm={2} xs={3}>\n                <Link to='/topplayers'>top players</Link>\n              </Col>\n              <Col sm={2} xs={3}>\n                <Link to='/compareplayers'>compare players</Link>\n              </Col>\n              <Col sm={2} xs={3} align=\"left\">\n                <Link to='/teams'>teams</Link>\n              </Col>\n\n              <Col sm={2} xs={3} align=\"left\">\n                <Link to='/contactus'>contact us</Link>\n              </Col>\n              <Col sm={2}></Col>\n            </Row> */}\n            {/* </div> */}\n            <br></br>\n            <Switch>\n              <Route path='/playercareer'>\n                <Players\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                  players={players}\n                  setPlayers={setPlayers}\n                  teams={teams}\n                />\n              </Route>\n              <Route path='/teams'>\n                <Teams\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                  teams={teams}\n                />\n              </Route>\n              <Route path='/topplayers'>\n                <TopTen\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                />\n              </Route>\n              <Route path='/contactus'>\n                <Contact\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                />\n              </Route>\n              <Route path='/compareplayers'>\n                <ComparePlayers\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                  players={players}\n                />\n              </Route>\n              <Route path='/percentiles'>\n                <Percentiles\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                />\n              </Route>\n              <Route path='/'>\n                <Redirect to='/playercareer' />\n              </Route>\n            </Switch>\n            <br></br>\n\n          </Container>\n        </div>\n      </div >\n    </Router >\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}