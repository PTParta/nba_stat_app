{"version":3,"sources":["services/teams.js","services/trailingMeans.js","styling/colors.js","components/players/PlayerStats.js","services/playerStats.js","components/players/SelectPlayer.js","components/players/SelectSeasons.js","components/players/SelectRegularPost.js","components/players/SelectStats.js","components/players/DescriptionPlayers.js","images/ball_logov6.png","components/Logo.js","components/Title.js","components/Description.js","components/players/SelectTrailingAverage.js","components/players/Players.js","components/teams/SelectTeam.js","components/teams/TeamStats.js","components/teams/SelectSeason.js","components/teams/SelectRegularPost.js","components/teams/SelectPerTotal.js","components/teams/DescriptionTeams.js","components/teams/Teams.js","components/topTen/SelectSeason.js","components/topTen/SelectRegularPost.js","components/topTen/TopTenStats.js","components/topTen/SelectPerTotal.js","components/topTen/DescriptionTop20.js","components/topTen/TopTen.js","services/players.js","components/ComparePlayers/SelectSeason.js","components/ComparePlayers/SelectPlayer.js","components/ComparePlayers/ComparePlayersStats.js","components/ComparePlayers/DescriptionComparePlayers.js","components/ComparePlayers/SelectPerTotal.js","components/ComparePlayers/SelectRegularPost.js","components/ComparePlayers/Reset.js","components/ComparePlayers/ComparePlayers.js","App.js","index.js"],"names":["teamService","getTeams","a","axios","get","teams","data","getTeamsFromDatabase","countTrailingMean","playerStats","statCategory","trailingGames","trailingAverage","i","length","statsInTrailingGames","j","mean","push","countTrailingMeanPct","attemptsInStatCategory","percentages","totalMadeBaskets","totalAttemptedBaskets","trailingPercentage","trailingMeanService","pts","ast","reb","blk","stl","turnover","min","map","playerStat","Number","split","pf","dreb","oreb","fg_pct","fg3_pct","ft_pct","fga","fgm","fg3a","fg3m","fta","ftm","colors","PlayerStats","startSeasonToShow","endSeasonToShow","postSeasonSelected","ptsSelected","astSelected","rebSelected","drebSelected","orebSelected","blkSelected","stlSelected","turnoverSelected","fgaSelected","fgmSelected","fg_pctSelected","fg3aSelected","fg3mSelected","fg3_pctSelected","ftaSelected","ftmSelected","ft_pctSelected","pfSelected","minSelected","selectedFirstSeason","selectedLastSeason","fetchingData","playerStatsFiltered","filter","game","postseason","seasons","season","startOfCareerSeason","Math","apply","endOfCareerSeason","max","games","filteredDataToShow","labels","date","concat","find","team","id","visitor_team_id","abbreviation","home_team_id","datasets","label","fill","borderColor","lightGreyDot","pointBackgroundColor","showLine","hidden","lightGreyLine","pointRadius","brownDot","brownLine","oliveDot","oliveLine","tealDot","tealLine","navyDot","navyLine","redDot","redLine","orangeDot","orangeLine","yellowDot","yellowLine","limeDot","limeLine","greenDot","greenLine","cyanDot","cyanLine","blueDot","blueLine","purpleDot","purpleLine","magentaDot","magentaLine","greyDot","greyLine","pinkDot","pinkLine","apricotDot","apricotLine","beigeDot","beigeLine","mintDot","mintLine","Container","style","color","paddingLeft","Row","textAlign","Col","type","height","width","player","first_name","last_name","className","options","legend","onClick","e","stopPropagation","display","scales","xAxes","ticks","yAxes","beginAtZero","fontColor","fontSize","baseUrl","playerStatService","getPlayerStatsFromApi","playerId","seasonsVariable","totalPages","meta","total_pages","console","log","playerStatsAllPages","page","playerStatsOnePage","getPlayerStatsFromDB","getTeamStatsFromDB","teamApiId","getPlayerStatsFromDBForASeason","getSummaryStatsFromDBForASeason","SelectPlayer","players","setSelectedPlayer","setPlayerStats","setFetchingData","playerSelect","fullName","value","getPlayerStats","playerFullName","searchedPlayer","apiId","then","response","sort","b","Date","getTime","onChange","option","placeholder","SelectSeasons","setSelectedFirstSeason","setSelectedLastSeason","seasonDescending","seasonSelectDescending","toString","seasonAscending","seasonSelectAscending","sm","event","handleSelectedFirstSeasonChange","closeMenuOnSelect","handleSelectedLastSeasonChange","SelectRegularPost","setRegularSeasonSelected","setPostSeasonSelected","useState","radioValue","setRadioValue","ButtonGroup","toggle","size","name","radio","idx","ToggleButton","variant","checked","currentTarget","handleRegularPostChange","SelectStats","setPtsSelected","setAstSelected","setRebSelected","setDrebSelected","setOrebSelected","setBlkSelected","setStlSelected","setTurnoverSelected","setFgaSelected","setFgmSelected","setFg_pctSelected","setFg3aSelected","setFg3mSelected","setFg3_pctSelected","setFtaSelected","setFtmSelected","setFt_pctSelected","setMinSelected","setPfSelected","cellWidth","Form","backgroundColor","Check","inline","DescriptionPlayers","Logo","logoSize","src","ball_logo","alt","Title","Description","SelectTrailingAverage","setTrailingAverage","require","config","Players","setPlayers","setTeams","selectedPlayer","regularSeasonSelected","useEffect","ReactGa","initialize","process","pageview","window","location","pathname","search","xs","SelectTeam","setSelectedTeam","setTeamStats","selectedSeason","teamSelect","city","getTeamStats","teamName","searchedTeam","TeamStats","teamStats","perGameSelected","totalSelected","per36Selected","teamStat","undefined","playerTotalStats","forEach","playerTotalStat","teamStatsFiltered","playedGames","totalPts","reduce","accumulator","currentValue","totalAst","totalReb","totalStl","totalBlk","totalTurnover","totalPf","totalMin","minutes","timeSplit","seconds","floor","isNaN","updatedPlayer","ptsPer","round","astPer","rebPer","stlPer","blkPer","turnoverPer","pfPer","minPer","ptsPer36","astPer36","rebPer36","stlPer36","blkPer36","turnoverPer36","pfPer36","s","position","plugins","render","optionsTotalPoints","title","text","optionsTotalAssists","optionsTotalRebounds","optionsTotalBlocks","optionsTotalSteals","optionsTotalTurnovers","optionsTotalPersonalFouls","optionsTotalMinutes","dataTotalPoints","slice","hoverOffset","dataTotalAssists","dataTotalRebounds","dataTotalBlocks","dataTotalSteals","dataTotalTurnovers","dataTotalPersonalFouls","dataTotalMinutes","optionsPerPoints","optionsPerAssists","optionsPerRebounds","optionsPerBlocks","optionsPerSteals","optionsPerTurnovers","optionsPerPersonalFouls","optionsPerMinutes","dataPerPoints","dataPerAssists","dataPerRebounds","dataPerBlocks","dataPerSteals","dataPerTurnovers","dataPerPersonalFouls","dataPerMinutes","optionsPer36Points","optionsPer36Assists","optionsPer36Rebounds","optionsPer36Blocks","optionsPer36Steals","optionsPer36Turnovers","optionsPer36PersonalFouls","dataPer36Points","dataPer36Assists","dataPer36Rebounds","dataPer36Blocks","dataPer36Steals","dataPer36Turnovers","dataPer36PersonalFouls","SelectSeason","setSelectedSeason","selectedTeam","handleSelectedSeasonChange","SelectPerTotal","setPerGameSelected","setTotalSelected","setPer36Selected","handlePerGameChange","DescriptionTeams","Teams","setTopTenStats","TopTenStats","topTenStats","pctSelected","topTenStatsFiltered","stat","optionsFgPct","optionsFg3Pct","optionsFtPct","optionsAstToTurnover","dataFgPct","fgm_pergame","fga_pergame","dataFg3Pct","fg3m_pergame","dataFtPct","ftm_pergame","fta_total","dataAstToTurnover","ast_total","ast_pergame","ast_to_turnover","pts_total","reb_total","blk_total","stl_total","turnover_total","pf_total","min_total","pts_pergame","reb_pergame","blk_pergame","stl_pergame","turnover_pergame","pf_pergame","min_pergame","pts_per36","ast_per36","reb_per36","blk_per36","stl_per36","turnover_per36","pf_per36","setPctSelected","DescriptionTop20","TopTen","playerService","getPlayers","getPlayersForASeason","setPlayersForSelectedSeason","filteredPlayers","includes","firstName","lastName","setStatsForSelectedPlayers","statsForSelectedPlayers","setNumberOfSelectedPlayers","numberOfSelectedPlayers","updatedStats","PlayerComparisonStats","topTenStat","playerTopTenStats","DescriptionPlayerComparison","Reset","Button","PlayerComparison","playersForSelectedSeason","App","flexDirection","alignContent","paddingTop","to","path","ComparePlayers","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4820dd57.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/teams'\nconst baseUrlDB = '/api/teamsdb'\n\nconst getTeams = async () => {\n  const teams = await axios.get(`${baseUrl}`)\n  return teams.data\n}\n\nconst getTeamsFromDatabase = async () => {\n  const teams = await axios.get(`${baseUrlDB}`)\n  return teams.data\n}\n\nconst teamService = {getTeams, getTeamsFromDatabase}\n\nexport default teamService","\nconst countTrailingMean = (playerStats, statCategory, trailingGames) => {\n  let trailingAverage = []\n  for (let i = 0; i < trailingGames; i++) {\n    trailingAverage[i] = null\n  }\n  for (let i = trailingGames; i < playerStats.length; i++) {\n    let statsInTrailingGames = 0\n    for (let j = 1; j <= trailingGames; j++) {\n      statsInTrailingGames += playerStats[i - trailingGames + j][statCategory];\n    }\n    const mean = statsInTrailingGames / trailingGames\n    trailingAverage.push(mean)\n  }\n  return trailingAverage\n}\n\nconst countTrailingMeanPct = (playerStats, statCategory, attemptsInStatCategory, trailingGames) => {\n  let percentages = []\n  for (let i = 0; i < trailingGames; i++) {\n    percentages[i] = null\n  }\n\n  for (let i = trailingGames; i < playerStats.length; i++) {\n    let totalMadeBaskets = 0\n    let totalAttemptedBaskets = 0\n    if (playerStats[i][attemptsInStatCategory] === 0) {\n      percentages.push(percentages[i - 1])\n      //playerStats[i][statCategory] = percentages[i - 1]\n    } else {\n      for (let j = 1; j <= trailingGames; j++) {\n        if (playerStats[i - trailingGames + j][attemptsInStatCategory] === 0\n          || playerStats[i - trailingGames + j][attemptsInStatCategory] < playerStats[i - trailingGames + j][statCategory]) {\n          continue\n        }\n        totalMadeBaskets += playerStats[i - trailingGames + j][statCategory]\n        totalAttemptedBaskets += playerStats[i - trailingGames + j][attemptsInStatCategory]\n      }\n      const trailingPercentage = totalMadeBaskets / totalAttemptedBaskets * 100\n      percentages.push(trailingPercentage)\n    }\n\n  }\n  return percentages\n}\n\nconst pts = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'pts', trailingGames)\n}\nconst ast = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'ast', trailingGames)\n}\nconst reb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'reb', trailingGames)\n}\nconst blk = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'blk', trailingGames)\n}\nconst stl = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'stl', trailingGames)\n}\nconst turnover = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'turnover', trailingGames)\n}\nconst min = (playerStats, trailingGames) => {\n  playerStats = playerStats.map(playerStat => ({ ...playerStat, min: playerStat.min ? Number(playerStat.min.split(':')[0]) : null }))\n  return countTrailingMean(playerStats, 'min', trailingGames)\n}\nconst pf = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'pf', trailingGames)\n}\nconst dreb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'dreb', trailingGames)\n}\nconst oreb = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'oreb', trailingGames)\n}\nconst fg_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'fgm', 'fga', trailingGames)\n}\nconst fg3_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'fg3m', 'fg3a', trailingGames)\n}\nconst ft_pct = (playerStats, trailingGames) => {\n  return countTrailingMeanPct(playerStats, 'ftm', 'fta', trailingGames)\n}\n/* const fg_pct = (playerStats) => {\n  return countPct(playerStats, 'fgm', 'fga')\n}\nconst fg3_pct = (playerStats) => {\n  return countPct(playerStats, 'fg3m', 'fg3a')\n}\nconst ft_pct = (playerStats) => {\n  return countPct(playerStats, 'ftm', 'fta')\n} */\nconst fga = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fga', trailingGames)\n}\nconst fgm = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fgm', trailingGames)\n}\nconst fg3a = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fg3a', trailingGames)\n}\nconst fg3m = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fg3m', trailingGames)\n}\nconst fta = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'fta', trailingGames)\n}\nconst ftm = (playerStats, trailingGames) => {\n  return countTrailingMean(playerStats, 'ftm', trailingGames)\n}\n\n\nconst trailingMeanService = {\n  pts,\n  ast,\n  reb,\n  blk,\n  stl,\n  turnover,\n  min,\n  pf,\n  dreb,\n  oreb,\n  fg_pct,\n  fg3_pct,\n  ft_pct,\n  fga,\n  fgm,\n  fg3a,\n  fg3m,\n  fta,\n  ftm\n}\n\nexport default trailingMeanService","const colors = {\n  'maroonDot': 'rgba(128,0,0,0.3)',\n  'maroonLine': 'rgba(128,0,0,1.0)',\n  'brownDot': 'rgba(170,110,40,0.3)',\n  'brownLine': 'rgba(170,110,40,1.0)',\n  'oliveDot': 'rgba(128,128,0,0.3)',\n  'oliveLine': 'rgba(128,128,0,1.0)',\n  'tealDot': 'rgba(0,128,128,0.3)',\n  'tealLine': 'rgba(0,128,128,1.0)',\n  'navyDot': 'rgba(0,0,128,0.3)',\n  'navyLine': 'rgba(0,0,128,1.0)',\n  'redDot': 'rgba(230,25,75,0.3)',\n  'redLine': 'rgba(230,25,75,1.0)',\n  'orangeDot': 'rgba(245,130,48,0.3)',\n  'orangeLine': 'rgba(245,130,48,1.0)',\n  'yellowDot': 'rgba(255,225,25,0.3)',\n  'yellowLine': 'rgba(255,225,25,1.0)',\n  'limeDot': 'rgba(210,245,60,0.3)',\n  'limeLine': 'rgba(210,245,60,1.0)',\n  'greenDot': 'rgba(60,180,75,0.3)',\n  'greenLine': 'rgba(60,180,75,1.0)',\n  'cyanDot': 'rgba(70,240,240,0.3)',\n  'cyanLine': 'rgba(70,240,240,1.0)',\n  'blueDot': 'rgba(0,130,200,0.3)',\n  'blueLine': 'rgba(0,130,200,1.0)',\n  'purpleDot': 'rgba(145,30,180,0.3)',\n  'purpleLine': 'rgba(145,30,180,1.0)',\n  'magentaDot': 'rgba(240,50,230,0.3)',\n  'magentaLine': 'rgba(240,50,230,1.0)',\n  'greyDot': 'rgba(128,128,128,0.3)',\n  'greyLine': 'rgba(128,128,128,1.0)',\n  'pinkDot': 'rgba(250,190,212,0.3)',\n  'pinkLine': 'rgba(250,190,212,1.0)',\n  'apricotDot': 'rgba(255,215,180,0.3)',\n  'apricotLine': 'rgba(255,215,180,1.0)',\n  'beigeDot': 'rgba(255,250,200,0.3)',\n  'beigeLine': 'rgba(255,250,200,1.0)',\n  'mintDot': 'rgba(170,255,195,0.3)',\n  'mintLine': 'rgba(170,255,195,1.0)',\n  'lavenderDot': 'rgba(220,190,255,0.3)',\n  'lavenderLine': 'rgba(220,190,255,1.0)',\n  'whiteDot': 'rgba(255,255,255,0.3)',\n  'whiteLine': 'rgba(255,255,255,1.0)',\n  'lightGreyDot': 'rgba(211,211,211,0.3)',\n  'lightGreyLine': 'rgba(211,211,211,1.0)'\n}\n\nexport default colors","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Line } from 'react-chartjs-2'\nimport trailingMeanService from '../../services/trailingMeans'\nimport colors from '../../styling/colors'\nimport Loader from 'react-loader-spinner'\n//import Logo from '../components/Logo'\n\nconst PlayerStats = (\n  {\n    playerStats,\n    teams,\n    postSeasonSelected,\n    ptsSelected,\n    astSelected,\n    rebSelected,\n    drebSelected,\n    orebSelected,\n    blkSelected,\n    stlSelected,\n    turnoverSelected,\n    fgaSelected,\n    fgmSelected,\n    fg_pctSelected,\n    fg3aSelected,\n    fg3mSelected,\n    fg3_pctSelected,\n    ftaSelected,\n    ftmSelected,\n    ft_pctSelected,\n    pfSelected,\n    minSelected,\n    selectedFirstSeason,\n    selectedLastSeason,\n    fetchingData,\n    trailingAverage\n  }\n) => {\n\n  const options = {\n    //responsive: true,\n    /* maintainAspectRatio: false, */\n    //aspectRatio: 1,\n    legend: {\n      onClick: (e) => e.stopPropagation(),\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        ticks: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          fontColor: 'white',\n          fontSize: 14,\n        }\n      }]\n    }\n  }\n\n  const playerStatsFiltered = playerStats.filter(playerStat => playerStat.game.postseason === postSeasonSelected)\n\n  const seasons = playerStatsFiltered.map(playerStat => playerStat.game.season)\n  const startOfCareerSeason = Math.min.apply(Math, seasons)\n  const endOfCareerSeason = Math.max.apply(Math, seasons)\n\n  let startSeasonToShow\n  let endSeasonToShow\n\n  if (selectedFirstSeason > startOfCareerSeason) {\n    startSeasonToShow = selectedFirstSeason\n  } else {\n    startSeasonToShow = startOfCareerSeason\n  }\n\n  if (selectedLastSeason < endOfCareerSeason) {\n    endSeasonToShow = selectedLastSeason\n  } else {\n    endSeasonToShow = endOfCareerSeason\n  }\n\n\n  const games = playerStatsFiltered.filter(playerStat => playerStat.game.season >= selectedFirstSeason && playerStat.game.season <= selectedLastSeason).length\n  const filteredDataToShow = playerStats.filter(\n    playerStat =>\n      playerStat.game.postseason === postSeasonSelected\n      && playerStat.game.season >= selectedFirstSeason\n      && playerStat.game.season <= selectedLastSeason\n  )\n\n  const data = {\n    labels: filteredDataToShow\n      .map(playerStat => playerStat.game.date.split('T')[0]\n        .concat('\\n')\n        .concat(teams.find(team => team.id === playerStat.game.visitor_team_id).abbreviation)\n        .concat('@')\n        .concat(teams.find(team => team.id === playerStat.game.home_team_id).abbreviation)\n        .concat(playerStat.game.postseason ? ' POST' : ' REG')),\n    datasets: [\n      {\n        label: 'pts',\n        data: filteredDataToShow.map(playerStat => playerStat.pts),\n        fill: false,\n        borderColor: colors.lightGreyDot,\n        pointBackgroundColor: colors.lightGreyDot,\n        showLine: false,\n        hidden: !ptsSelected\n      },\n      {\n        label: 'pts trailing mean',\n\n        fill: false,\n        borderColor: colors.lightGreyLine,\n        pointBackgroundColor: colors.lightGreyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pts(filteredDataToShow, trailingAverage),\n        hidden: !ptsSelected\n      },\n      {\n        label: 'ast',\n        data: filteredDataToShow.map(playerStat => playerStat.ast),\n        fill: false,\n        borderColor: colors.brownDot,\n        pointBackgroundColor: colors.brownDot,\n        showLine: false,\n        hidden: !astSelected\n      },\n      {\n        label: 'ast trailing mean',\n\n        fill: false,\n        borderColor: colors.brownLine,\n        pointBackgroundColor: colors.brownLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ast(filteredDataToShow, trailingAverage),\n        hidden: !astSelected\n      },\n      {\n        label: 'reb',\n        data: filteredDataToShow.map(playerStat => playerStat.reb),\n        fill: false,\n        borderColor: colors.oliveDot,\n        pointBackgroundColor: colors.oliveDot,\n        showLine: false,\n        hidden: !rebSelected\n      },\n      {\n        label: 'reb trailing mean',\n\n        fill: false,\n        borderColor: colors.oliveLine,\n        pointBackgroundColor: colors.oliveLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.reb(filteredDataToShow, trailingAverage),\n        hidden: !rebSelected\n      },\n      {\n        label: 'blk',\n        data: filteredDataToShow.map(playerStat => playerStat.blk),\n        fill: false,\n        borderColor: colors.tealDot,\n        pointBackgroundColor: colors.tealDot,\n        showLine: false,\n        hidden: !blkSelected\n      },\n      {\n        label: 'blk trailing mean',\n\n        fill: false,\n        borderColor: colors.tealLine,\n        pointBackgroundColor: colors.tealLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.blk(filteredDataToShow, trailingAverage),\n        hidden: !blkSelected\n      },\n      {\n        label: 'stl',\n        data: filteredDataToShow.map(playerStat => playerStat.stl),\n        fill: false,\n        borderColor: colors.navyDot,\n        pointBackgroundColor: colors.navyDot,\n        showLine: false,\n        hidden: !stlSelected\n      },\n      {\n        label: 'stl trailing mean',\n\n        fill: false,\n        borderColor: colors.navyLine,\n        pointBackgroundColor: colors.navyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.stl(filteredDataToShow, trailingAverage),\n        hidden: !stlSelected\n      },\n      {\n        label: 'turnover',\n        data: filteredDataToShow.map(playerStat => playerStat.turnover),\n        fill: false,\n        borderColor: colors.redDot,\n        pointBackgroundColor: colors.redDot,\n        showLine: false,\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'turnover trailing mean',\n        fill: false,\n        borderColor: colors.redLine,\n        pointBackgroundColor: colors.redLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.turnover(filteredDataToShow, trailingAverage),\n        hidden: !turnoverSelected\n      },\n      {\n        label: 'min',\n        data: filteredDataToShow.map(playerStat => playerStat.min ? Number(playerStat.min.split(':')[0]) : null),\n        fill: false,\n        borderColor: colors.orangeDot,\n        pointBackgroundColor: colors.orangeDot,\n        showLine: false,\n        hidden: !minSelected\n      },\n      {\n        label: 'min trailing mean',\n        fill: false,\n        borderColor: colors.orangeLine,\n        pointBackgroundColor: colors.orangeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.min(filteredDataToShow, trailingAverage),\n        hidden: !minSelected\n      },\n      {\n        label: 'pf',\n        data: filteredDataToShow.map(playerStat => playerStat.pf),\n        fill: false,\n        borderColor: colors.yellowDot,\n        pointBackgroundColor: colors.yellowDot,\n        showLine: false,\n        hidden: !pfSelected\n      },\n      {\n        label: 'pf trailing mean',\n        fill: false,\n        borderColor: colors.yellowLine,\n        pointBackgroundColor: colors.yellowLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.pf(filteredDataToShow, trailingAverage),\n        hidden: !pfSelected\n      },\n      {\n        label: 'dreb',\n        data: filteredDataToShow.map(playerStat => playerStat.dreb),\n        fill: false,\n        borderColor: colors.limeDot,\n        pointBackgroundColor: colors.limeDot,\n        showLine: false,\n        hidden: !drebSelected\n      },\n      {\n        label: 'dreb trailing mean',\n        fill: false,\n        borderColor: colors.limeLine,\n        pointBackgroundColor: colors.limeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.dreb(filteredDataToShow, trailingAverage),\n        hidden: !drebSelected\n      },\n      {\n        label: 'oreb',\n        data: filteredDataToShow.map(playerStat => playerStat.oreb),\n        fill: false,\n        borderColor: colors.greenDot,\n        pointBackgroundColor: colors.greenDot,\n        showLine: false,\n        hidden: !orebSelected\n      },\n      {\n        label: 'oreb trailing mean',\n        fill: false,\n        borderColor: colors.greenLine,\n        pointBackgroundColor: colors.greenLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.oreb(filteredDataToShow, trailingAverage),\n        hidden: !orebSelected\n      },\n      {\n        label: 'fg_pct',\n        data: filteredDataToShow.map(playerStat => playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct),\n        fill: false,\n        borderColor: colors.cyanDot,\n        pointBackgroundColor: colors.cyanDot,\n        showLine: false,\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg_pct trailing mean',\n        fill: false,\n        borderColor: colors.cyanLine,\n        pointBackgroundColor: colors.cyanLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg_pct(filteredDataToShow\n          .map(playerStat => ({ ...playerStat, fg_pct: playerStat.fg_pct <= 1 ? playerStat.fg_pct * 100 : playerStat.fg_pct })), trailingAverage),\n        hidden: !fg_pctSelected\n      },\n      {\n        label: 'fg3_pct',\n        data: filteredDataToShow.map(playerStat => playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct),\n        fill: false,\n        borderColor: colors.blueDot,\n        pointBackgroundColor: colors.blueDot,\n        showLine: false,\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'fg3_pct trailing mean',\n        fill: false,\n        borderColor: colors.blueLine,\n        pointBackgroundColor: colors.blueLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3_pct(filteredDataToShow\n          .map(playerStat => ({ ...playerStat, fg3_pct: playerStat.fg3_pct <= 1 ? playerStat.fg3_pct * 100 : playerStat.fg3_pct })), trailingAverage),\n        hidden: !fg3_pctSelected\n      },\n      {\n        label: 'ft_pct',\n        data: filteredDataToShow.map(playerStat => playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct),\n        fill: false,\n        borderColor: colors.purpleDot,\n        pointBackgroundColor: colors.purpleDot,\n        showLine: false,\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'ft_pct trailing mean',\n        fill: false,\n        borderColor: colors.purpleLine,\n        pointBackgroundColor: colors.purpleLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ft_pct(filteredDataToShow\n          .map(playerStat => ({\n            ...playerStat,\n            ft_pct: (playerStat.ft_pct <= 1 ? playerStat.ft_pct * 100 : playerStat.ft_pct)\n          })), trailingAverage),\n        hidden: !ft_pctSelected\n      },\n      {\n        label: 'fga',\n        data: filteredDataToShow.map(playerStat => playerStat.fga),\n        fill: false,\n        borderColor: colors.magentaDot,\n        pointBackgroundColor: colors.magentaDot,\n        showLine: false,\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fga trailing mean',\n        fill: false,\n        borderColor: colors.magentaLine,\n        pointBackgroundColor: colors.magentaLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fga(filteredDataToShow, trailingAverage),\n        hidden: !fgaSelected\n      },\n      {\n        label: 'fgm',\n        data: filteredDataToShow.map(playerStat => playerStat.fgm),\n        fill: false,\n        borderColor: colors.greyDot,\n        pointBackgroundColor: colors.greyDot,\n        showLine: false,\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fgm trailing mean',\n        fill: false,\n        borderColor: colors.greyLine,\n        pointBackgroundColor: colors.greyLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fgm(filteredDataToShow, trailingAverage),\n        hidden: !fgmSelected\n      },\n      {\n        label: 'fg3a',\n        data: filteredDataToShow.map(playerStat => playerStat.fg3a),\n        fill: false,\n        borderColor: colors.pinkDot,\n        pointBackgroundColor: colors.pinkDot,\n        showLine: false,\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3a trailing mean',\n        fill: false,\n        borderColor: colors.pinkLine,\n        pointBackgroundColor: colors.pinkLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3a(filteredDataToShow, trailingAverage),\n        hidden: !fg3aSelected\n      },\n      {\n        label: 'fg3m',\n        data: filteredDataToShow.map(playerStat => playerStat.fg3m),\n        fill: false,\n        borderColor: colors.apricotDot,\n        pointBackgroundColor: colors.apricotDot,\n        showLine: false,\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fg3m trailing mean',\n        fill: false,\n        borderColor: colors.apricotLine,\n        pointBackgroundColor: colors.apricotLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fg3m(filteredDataToShow, trailingAverage),\n        hidden: !fg3mSelected\n      },\n      {\n        label: 'fta',\n        data: filteredDataToShow.map(playerStat => playerStat.fta),\n        fill: false,\n        borderColor: colors.beigeDot,\n        pointBackgroundColor: colors.beigeDot,\n        showLine: false,\n        hidden: !ftaSelected\n      },\n      {\n        label: 'fta trailing mean',\n        fill: false,\n        borderColor: colors.beigeLine,\n        pointBackgroundColor: colors.beigeLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.fta(filteredDataToShow, trailingAverage),\n        hidden: !ftaSelected\n      },\n      {\n        label: 'ftm',\n        data: filteredDataToShow.map(playerStat => playerStat.ftm),\n        fill: false,\n        borderColor: colors.mintDot,\n        pointBackgroundColor: colors.mintDot,\n        showLine: false,\n        hidden: !ftmSelected\n      },\n      {\n        label: 'ftm trailing mean',\n        fill: false,\n        borderColor: colors.mintLine,\n        pointBackgroundColor: colors.mintLine,\n        showLine: true,\n        pointRadius: 0,\n        data: trailingMeanService.ftm(filteredDataToShow, trailingAverage),\n        hidden: !ftmSelected\n      },\n    ],\n  }\n\n  return (\n    <div>\n      <Container style={{ color: 'white', paddingLeft: '30px' }}>\n        <Row style={{ textAlign: 'center' }}>\n          {fetchingData\n            ? <Col>\n              <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n              <br></br>\n            </Col>\n            : <>\n              <Col>\n                {games !== 0\n                  ? <div>\n                    {playerStats[0].player.first_name} {playerStats[0].player.last_name}, {startSeasonToShow} - {endSeasonToShow}, {games} games\n                    </div>\n                  : <div>\n                    {playerStats[0].player.first_name} {playerStats[0].player.last_name}, {games} games\n                  </div>}\n              </Col>\n            </>}\n        </Row>\n      </Container>\n      <div className='chart'>\n        <Line\n          data={data}\n          options={options}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default PlayerStats","import axios from 'axios'\nconst baseUrl = 'https://www.balldontlie.io/api/v1/stats'\nconst baseUrlDB = '/api/statsdb/statsfromdb'\nconst baseUrlDBTeam = '/api/statsdb/teamstatsfromdb'\nconst baseUrlDBPlayerStatsForASeason = '/api/statsdb/playerstatsforaseasonfromdb'\nconst baseUrlDBSummaryStatsForASeason = '/api/statsdb/summarystatsforaseasonfromdb'\n\nconst getPlayerStatsFromApi = async (seasons, playerId) => {\n  let seasonsVariable = ''\n  for (let i = 0; i < seasons.length; i++) {\n    seasonsVariable += '&seasons[]='\n    seasonsVariable += seasons[i]\n  }\n  const playerStats = await axios.get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100`)\n  const totalPages = playerStats.data.meta.total_pages\n  console.log('totalPages', totalPages)\n\n  let playerStatsAllPages = []\n\n  for (let page = 1; page <= totalPages; page++) {\n    console.log('getting stats from page', page)\n    const playerStatsOnePage = await axios\n      .get(`${baseUrl}?seasons[]=${seasonsVariable}&player_ids[]=${playerId}&per_page=100&page=${page}`)\n    playerStatsAllPages = playerStatsAllPages.concat(playerStatsOnePage.data.data)\n  }\n  console.log(playerStatsAllPages)\n  return playerStatsAllPages\n}\n\nconst getPlayerStatsFromDB = async (playerId) => {\n  const playerStats = await axios.get(`${baseUrlDB}/${playerId}`)\n  return playerStats\n}\n\nconst getTeamStatsFromDB = async (teamApiId, season) => {\n  const playerStats = await axios.get(`${baseUrlDBTeam}/${teamApiId}/${season}`)\n  return playerStats\n}\n\nconst getPlayerStatsFromDBForASeason = async (playerId, season) => {\n  const playerStats = await axios.get(`${baseUrlDBPlayerStatsForASeason}/${playerId}/${season}`)\n  return playerStats\n}\n\nconst getSummaryStatsFromDBForASeason = async (season) => {\n  const playerStats = await axios.get(`${baseUrlDBSummaryStatsForASeason}/${season}`)\n  return playerStats\n}\n\nconst playerStatService = {\n  getPlayerStatsFromApi,\n  getPlayerStatsFromDB,\n  getTeamStatsFromDB,\n  getPlayerStatsFromDBForASeason,\n  getSummaryStatsFromDBForASeason\n}\n\nexport default playerStatService\n","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n//import { useHistory } from 'react-router-dom'\n\nconst SelectPlayer = ({ players, setSelectedPlayer, setPlayerStats, setFetchingData }) => {\n\n  //const history = useHistory()\n  const playerSelect = players.map(player => ({ label: player.fullName, value: player.fullName }))\n\n  const handleSelectedPlayerChange = (playerFullName) => {\n    setSelectedPlayer(playerFullName)\n    getPlayerStats(playerFullName)\n  }\n\n  const getPlayerStats = (playerFullName) => {\n    setFetchingData(true)\n    const searchedPlayer = players.find(player => player.fullName === playerFullName)\n    //console.log('searched player', searchedPlayer)\n    playerStatService.getPlayerStatsFromDB(searchedPlayer.apiId, playerFullName)\n      .then((response) => {\n        //history.push(`/players/${playerFullName}`)\n        setPlayerStats(response.data.sort((a, b) =>\n          new Date(a.game.date).getTime() - new Date(b.game.date).getTime())\n        )\n        setFetchingData(false)\n      })\n\n  }\n  return (\n    <div>\n      <Select\n        options={playerSelect}\n        onChange={(option) => handleSelectedPlayerChange(option.value)}\n        placeholder='Select player'\n      />\n    </div>\n  )\n}\n\nexport default SelectPlayer","import Select from 'react-select'\nimport { /* Container,  */Row, Col } from 'react-bootstrap'\n\nconst SelectSeasons = ({\n  selectedFirstSeason,\n  selectedLastSeason,\n  setSelectedFirstSeason,\n  setSelectedLastSeason\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  let seasonAscending = 1979\n  const seasonSelectAscending = []\n  while (seasonAscending <= 2020) {\n    seasonSelectAscending.push({ label: seasonAscending.toString(), value: seasonAscending.toString() })\n    seasonAscending++\n  }\n\n  const handleSelectedFirstSeasonChange = (event) => {\n    console.log('event.value:', event.value)\n    console.log('Number(event.value):', Number(event.value))\n    console.log('selectedLastSeason:', selectedLastSeason)\n    if (Number(event.value) > selectedLastSeason) {\n      setSelectedFirstSeason(selectedLastSeason)\n      setSelectedLastSeason(Number(event.value))\n    } else {\n      setSelectedFirstSeason(Number(event.value))\n    }\n  }\n\n  const handleSelectedLastSeasonChange = (event) => {\n    if (Number(event.value) < selectedFirstSeason) {\n      setSelectedLastSeason(selectedFirstSeason)\n      setSelectedFirstSeason(Number(event.value))\n    } else {\n      setSelectedLastSeason(Number(event.value))\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Col sm={4}></Col>\n        <Col sm={4}>\n          <Select\n            options={seasonSelectAscending}\n            /* onChange={(event) => setSelectedFirstSeason(event.value)} */\n            onChange={(event) => handleSelectedFirstSeasonChange(event)}\n            closeMenuOnSelect={true}\n            placeholder={selectedFirstSeason.toString()}\n          />\n        </Col>\n        <Col sm={4}></Col>\n      </Row>\n      <Row>\n        <Col sm={4}></Col>\n        <Col sm={4}>\n          <Select\n            options={seasonSelectDescending}\n            /* onChange={(event) => setSelectedLastSeason(event.value)} */\n            onChange={(event) => handleSelectedLastSeasonChange(event)}\n            closeMenuOnSelect={true}\n            placeholder={selectedLastSeason}\n          />\n        </Col>\n        <Col sm={4}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default SelectSeasons","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectRegularPost","import { Form } from 'react-bootstrap'\nimport React from 'react'\nimport colors from '../../styling/colors'\n//import { AllCheckerCheckbox, Checkbox, CheckboxGroup } from '@createnl/grouped-checkboxes'\n\nconst SelectStats = (\n  {\n    ptsSelected,\n    setPtsSelected,\n    astSelected,\n    setAstSelected,\n    rebSelected,\n    setRebSelected,\n    drebSelected,\n    setDrebSelected,\n    orebSelected,\n    setOrebSelected,\n    blkSelected,\n    setBlkSelected,\n    stlSelected,\n    setStlSelected,\n    turnoverSelected,\n    setTurnoverSelected,\n    fgaSelected,\n    setFgaSelected,\n    fgmSelected,\n    setFgmSelected,\n    fg_pctSelected,\n    setFg_pctSelected,\n    fg3aSelected,\n    setFg3aSelected,\n    fg3mSelected,\n    setFg3mSelected,\n    fg3_pctSelected,\n    setFg3_pctSelected,\n    ftaSelected,\n    setFtaSelected,\n    ftmSelected,\n    setFtmSelected,\n    ft_pctSelected,\n    setFt_pctSelected,\n    pfSelected,\n    minSelected,\n    setMinSelected,\n    setPfSelected\n  }\n) => {\n\n  const cellWidth = 100\n\n  return (\n    <div style={{ color: 'white' }}>\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.lightGreyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPtsSelected(!ptsSelected)}\n                  type=\"checkbox\"\n                  label=\"pts\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.brownLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setAstSelected(!astSelected)}\n                  type=\"checkbox\"\n                  label=\"ast\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.oliveLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setRebSelected(!rebSelected)}\n                  type=\"checkbox\"\n                  label=\"reb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.tealLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setBlkSelected(!blkSelected)}\n                  type=\"checkbox\"\n                  label=\"blk\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.navyLine/* , color:'black' */ }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setStlSelected(!stlSelected)}\n                  type=\"checkbox\"\n                  label=\"stl\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.redLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setTurnoverSelected(!turnoverSelected)}\n                  type=\"checkbox\"\n                  label=\"to\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.yellowLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setPfSelected(!pfSelected)}\n                  type=\"checkbox\"\n                  label=\"pf\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.orangeLine }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setMinSelected(!minSelected)}\n                  type=\"checkbox\"\n                  label=\"min\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.cyanLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg_pctSelected(!fg_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.magentaLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgaSelected(!fgaSelected)}\n                  type=\"checkbox\"\n                  label=\"fga\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greyLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFgmSelected(!fgmSelected)}\n                  type=\"checkbox\"\n                  label=\"fgm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.blueLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3_pctSelected(!fg3_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.pinkLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3aSelected(!fg3aSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3a\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.apricotLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFg3mSelected(!fg3mSelected)}\n                  type=\"checkbox\"\n                  label=\"fg3m\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.purpleLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFt_pctSelected(!ft_pctSelected)}\n                  type=\"checkbox\"\n                  label=\"ft_pct\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.beigeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtaSelected(!ftaSelected)}\n                  type=\"checkbox\"\n                  label=\"fta\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.mintLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setFtmSelected(!ftmSelected)}\n                  type=\"checkbox\"\n                  label=\"ftm\" />\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </Form>\n      {/* <br></br> */}\n      <Form>\n        <table>\n          <tbody>\n            <tr>\n              <td style={{ width: cellWidth, backgroundColor: colors.limeLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setDrebSelected(!drebSelected)}\n                  type=\"checkbox\"\n                  label=\"dreb\" />\n              </td>\n              <td style={{ width: cellWidth, backgroundColor: colors.greenLine, color: 'black' }}>\n                <Form.Check\n                  inline={true}\n                  onChange={() => setOrebSelected(!orebSelected)}\n                  type=\"checkbox\"\n                  label=\"oreb\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      <br></br>\n      {/* test to check that the states change correctly */}\n      {/* <p>pts: {ptsSelected.toString()}</p>\n      <p>ast:{astSelected.toString()}</p>\n      <p>reb:{rebSelected.toString()}</p>\n      <p>blk:{blkSelected.toString()}</p>\n      <p>stl:{stlSelected.toString()}</p>\n      <p>turnover:{turnoverSelected.toString()}</p>\n      <p>min:{minSelected.toString()}</p>\n      <p>pf:{pfSelected.toString()}</p>\n      <br></br>\n      <p>dreb:{drebSelected.toString()}</p>\n      <p>oreb:{orebSelected.toString()}</p>\n      <br></br>\n      <p>fg_pct:{fg_pctSelected.toString()}</p>\n      <p>fg3_pct:{fg3_pctSelected.toString()}</p>\n      <p>ft_pct:{ft_pctSelected.toString()}</p>\n      <br></br>\n      <p>fga:{fgaSelected.toString()}</p>\n      <p>fgm:{fgmSelected.toString()}</p>\n      <p>fg3a:{fg3aSelected.toString()}</p>\n      <p>fg3m:{fg3mSelected.toString()}</p>\n      <p>fta:{ftaSelected.toString()}</p>\n      <p>ftm:{ftmSelected.toString()}</p> */}\n    </div>\n  )\n}\n\nexport default SelectStats","\nconst DescriptionPlayers = () => {\n  return (\n    <div style={{color:'white', textAlign:'left',}}>\n      <br></br>\n      <br></br>\n      <p>This page shows player stats throughout his career in line chart form.\n        You can select the stats, seasons, regular or post season, and how many\n        games are counted into the trailing average.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionPlayers\n","export default __webpack_public_path__ + \"static/media/ball_logov6.16f028e6.png\";","import ball_logo from '../images/ball_logov6.png'\n\n\nconst Logo = () => {\n\n  const logoSize = '150px'\n\n  return (\n    <img\n      /* class=\"card-img-top mb-3 w-auto\" */\n      src={ball_logo}\n      alt='ball_logo'\n      style={{\n        width: logoSize,\n        height: logoSize\n      }} />\n\n  )\n}\n\nexport default Logo","const Title = () => {\n\n  return (\n    <>\n      <div style={{ color: 'white' }}>\n        <h2>BBALLCHART</h2>\n      </div>\n    </>\n  )\n}\n\nexport default Title","const Description = () => {\n\n  return (\n    <>\n      <div style={{ color: 'white' }}>\n        <h5>Visualizing NBA stats</h5>\n      </div>\n    </>\n  )\n}\n\nexport default Description","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectTrailingAverage = ({ setTrailingAverage }) => {\n\n  const [radioValue, setRadioValue] = useState('25');\n\n  const radios = [\n    { name: '5', value: '5' },\n    { name: '10', value: '10' },\n    { name: '25', value: '25' },\n    { name: '50', value: '50' },\n    { name: '100', value: '100' },\n  ];\n\n  const handleRegularPostChange = (e) => {\n    /* if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    } */\n    setRadioValue(e.currentTarget.value)\n    setTrailingAverage(Number(e.currentTarget.value))\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectTrailingAverage","import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport teamService from '../../services/teams'\n//import playerService from '../../services/players'\nimport PlayerStats from './PlayerStats'\nimport SelectPlayer from './SelectPlayer'\nimport SelectSeasons from './SelectSeasons'\n//import GetStats from './components/GetStats'\nimport SelectRegularPost from './SelectRegularPost'\nimport SelectStats from './SelectStats'\nimport DescriptionPlayers from './DescriptionPlayers'\nimport Logo from '../Logo'\nimport Title from '../Title'\nimport Description from '../Description'\nimport SelectTrailingAverage from './SelectTrailingAverage'\n/* import Instructions from './Instructions'\nimport Tips from './Tips' */\nimport Loader from 'react-loader-spinner'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\n\nconst Players = ({ fetchingData, setFetchingData, players, setPlayers }) => {\n\n  //const [players, setPlayers] = useState([])\n  const [playerStats, setPlayerStats] = useState([])\n  const [teams, setTeams] = useState([])\n  const [selectedPlayer, setSelectedPlayer] = useState('')\n  const [selectedFirstSeason, setSelectedFirstSeason] = useState(1979)\n  const [selectedLastSeason, setSelectedLastSeason] = useState(2020)\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(false)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n\n  const [ptsSelected, setPtsSelected] = useState(false)\n  const [astSelected, setAstSelected] = useState(false)\n  const [rebSelected, setRebSelected] = useState(false)\n  const [drebSelected, setDrebSelected] = useState(false)\n  const [orebSelected, setOrebSelected] = useState(false)\n  const [blkSelected, setBlkSelected] = useState(false)\n  const [stlSelected, setStlSelected] = useState(false)\n  const [turnoverSelected, setTurnoverSelected] = useState(false)\n  const [fgaSelected, setFgaSelected] = useState(false)\n  const [fgmSelected, setFgmSelected] = useState(false)\n  const [fg_pctSelected, setFg_pctSelected] = useState(false)\n  const [fg3aSelected, setFg3aSelected] = useState(false)\n  const [fg3mSelected, setFg3mSelected] = useState(false)\n  const [fg3_pctSelected, setFg3_pctSelected] = useState(false)\n  const [ftaSelected, setFtaSelected] = useState(false)\n  const [ftmSelected, setFtmSelected] = useState(false)\n  const [ft_pctSelected, setFt_pctSelected] = useState(false)\n  const [pfSelected, setPfSelected] = useState(false)\n  const [minSelected, setMinSelected] = useState(false)\n\n\n\n  const [trailingAverage, setTrailingAverage] = useState(25)\n\n  useEffect(() => {\n\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n    //console.log('pathname:', window.location.pathname)\n\n    teamService.getTeams()\n      .then((response) => {\n        setTeams(response.data)\n      })\n    //Player sorting should be done in the database query?\n    /* playerService.getPlayers()\n      .then((response) => {\n        setPlayers(response.map(player => ({ ...player, fullName: `${player.firstName} ${player.lastName}` }))\n          .sort((a, b) => (a.lastName > b.lastName) ? 1 : ((b.lastName > a.lastName) ? -1 : 0)))\n      }) */\n  }, [])\n\n  return (\n    <>\n      <Row>\n        <Col sm={4}></Col>\n        <Col sm={4}>\n          <SelectPlayer\n            players={players}\n            setSelectedPlayer={setSelectedPlayer}\n            setPlayerStats={setPlayerStats}\n            fetchingData={fetchingData}\n            setFetchingData={setFetchingData}\n          />\n        </Col>\n        <Col sm={4}></Col>\n      </Row>\n      {selectedPlayer !== ''\n        ? <>\n          <SelectSeasons\n            setSelectedFirstSeason={setSelectedFirstSeason}\n            setSelectedLastSeason={setSelectedLastSeason}\n            selectedFirstSeason={selectedFirstSeason}\n            selectedLastSeason={selectedLastSeason}\n          />\n        </>\n        : <></>}\n      <br></br>\n      {playerStats.length === 0 && !fetchingData\n        ? <>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={5} xs={1}></Col>\n            <Col sm={2} xs={10}>\n              <br></br>\n              <Logo />\n            </Col>\n            <Col sm={5} xs={1}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Title />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Description />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <DescriptionPlayers />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n        </>\n        : <></>}\n      <Row style={{ textAlign: 'center' }}>\n        <Col sm={5} xs={4}></Col>\n        <Col sm={2} xs={4}>\n          {fetchingData && playerStats.length === 0\n            ? <>\n              <br></br>\n              <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n              <br></br>\n              <br></br>\n            </>\n            : <></>}\n        </Col>\n        <Col sm={5} xs={4}></Col>\n      </Row>\n      {selectedPlayer !== ''\n        ? <>\n          <Row className=\"justify-content-md-center\">\n            <Col>\n              {playerStats.length > 0\n                ? <PlayerStats\n                  playerStats={playerStats}\n                  teams={teams}\n                  regularSeasonSelected={regularSeasonSelected}\n                  postSeasonSelected={postSeasonSelected}\n                  ptsSelected={ptsSelected}\n                  astSelected={astSelected}\n                  rebSelected={rebSelected}\n                  drebSelected={drebSelected}\n                  orebSelected={orebSelected}\n                  blkSelected={blkSelected}\n                  stlSelected={stlSelected}\n                  turnoverSelected={turnoverSelected}\n                  fgaSelected={fgaSelected}\n                  fgmSelected={fgmSelected}\n                  fg_pctSelected={fg_pctSelected}\n                  fg3aSelected={fg3aSelected}\n                  fg3mSelected={fg3mSelected}\n                  fg3_pctSelected={fg3_pctSelected}\n                  ftaSelected={ftaSelected}\n                  ftmSelected={ftmSelected}\n                  ft_pctSelected={ft_pctSelected}\n                  pfSelected={pfSelected}\n                  minSelected={minSelected}\n                  selectedFirstSeason={selectedFirstSeason}\n                  selectedLastSeason={selectedLastSeason}\n                  fetchingData={fetchingData}\n                  trailingAverage={trailingAverage}\n                />\n                : <></>}</Col>\n          </Row>\n          <br></br>\n          <Row >\n            <Col sm={4} ></Col>\n            <Col sm={4} >\n              <SelectStats\n                ptsSelected={ptsSelected}\n                setPtsSelected={setPtsSelected}\n                astSelected={astSelected}\n                setAstSelected={setAstSelected}\n                rebSelected={rebSelected}\n                setRebSelected={setRebSelected}\n                drebSelected={drebSelected}\n                setDrebSelected={setDrebSelected}\n                orebSelected={orebSelected}\n                setOrebSelected={setOrebSelected}\n                blkSelected={blkSelected}\n                setBlkSelected={setBlkSelected}\n                stlSelected={stlSelected}\n                setStlSelected={setStlSelected}\n                turnoverSelected={turnoverSelected}\n                setTurnoverSelected={setTurnoverSelected}\n                fgaSelected={fgaSelected}\n                setFgaSelected={setFgaSelected}\n                fgmSelected={fgmSelected}\n                setFgmSelected={setFgmSelected}\n                fg_pctSelected={fg_pctSelected}\n                setFg_pctSelected={setFg_pctSelected}\n                fg3aSelected={fg3aSelected}\n                setFg3aSelected={setFg3aSelected}\n                fg3mSelected={fg3mSelected}\n                setFg3mSelected={setFg3mSelected}\n                fg3_pctSelected={fg3_pctSelected}\n                setFg3_pctSelected={setFg3_pctSelected}\n                ftaSelected={ftaSelected}\n                setFtaSelected={setFtaSelected}\n                ftmSelected={ftmSelected}\n                setFtmSelected={setFtmSelected}\n                ft_pctSelected={ft_pctSelected}\n                setFt_pctSelected={setFt_pctSelected}\n                pfSelected={pfSelected}\n                setPfSelected={setPfSelected}\n                minSelected={minSelected}\n                setMinSelected={setMinSelected} />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n          <Row>\n            <Col sm={4}></Col>\n            <Col sm={4}>\n              <div style={{ color: 'white' }}>trailing average</div>\n              <SelectTrailingAverage\n                setTrailingAverage={setTrailingAverage} />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n          <br></br>\n          <Row>\n            <Col sm={4}></Col>\n            <Col sm={4}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n        </>\n        : <></>}\n    </>\n  )\n}\n\nexport default Players","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\nconst SelectTeam = ({ teams, setSelectedTeam, setTeamStats, setFetchingData, selectedSeason }) => {\n\n  //const playerSelect = players.map(player => ({ label: player.fullName, value: player.fullName }))\n\n  const teamSelect = teams.map(team => ({ label: `${team.city} ${team.name}`, value: team.name }))\n\n  const handleSelectedTeamChange = (teamName) => {\n    setSelectedTeam(teamName)\n    getTeamStats(teamName)\n  }\n\n  const getTeamStats = (teamName) => {\n    setFetchingData(true)\n    const searchedTeam = teams.find(team => team.name === teamName)\n    playerStatService.getTeamStatsFromDB(searchedTeam.apiId, selectedSeason)\n      .then((response) => {\n        setTeamStats(response.data.sort((a, b) =>\n          new Date(a.game.date).getTime() - new Date(b.game.date).getTime())\n        )\n        setFetchingData(false)\n      })\n\n  }\n  return (\n    <div>\n      <Select\n        options={teamSelect}\n        onChange={(option) => handleSelectedTeamChange(option.value)}\n        placeholder='Select team'\n      />\n    </div>\n  )\n}\n\nexport default SelectTeam","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport { Doughnut } from 'react-chartjs-2'\n/* import trailingMeanService from '../../services/trailingMeans'\nimport colors from '../../styling/colors'\nimport Loader from 'react-loader-spinner' */\n//import Logo from '../components/Logo'\nimport 'chartjs-plugin-labels'\nimport colors from '../../styling/colors'\n\nconst TeamStats = (\n  {\n    teamStats,\n    postSeasonSelected,\n    perGameSelected,\n    totalSelected,\n    per36Selected\n  }\n) => {\n\n  //filter out bad data where player is not defined\n  teamStats = teamStats.filter(teamStat => teamStat.player !== undefined)\n\n  let playerTotalStats = []\n\n  teamStats.forEach(teamStat => {\n    const playerFullName = `${teamStat.player.first_name} ${teamStat.player.last_name}`\n    if (playerTotalStats.find(playerTotalStat => playerTotalStat.name === playerFullName) === undefined) {\n      const player = { name: playerFullName }\n      playerTotalStats.push(player)\n    }\n  })\n\n  const teamStatsFiltered = teamStats.filter(teamStat => teamStat.game.postseason === postSeasonSelected)\n\n  playerTotalStats.forEach(playerTotalStat => {\n    let playedGames = 0\n    const playerStats = teamStatsFiltered\n      .filter(teamStat => `${teamStat.player.first_name} ${teamStat.player.last_name}` === playerTotalStat.name)\n\n    const totalPts = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pts\n    }, 0)\n    const totalAst = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.ast\n    }, 0)\n    const totalReb = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.reb\n    }, 0)\n    const totalStl = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.stl\n    }, 0)\n    const totalBlk = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.blk\n    }, 0)\n    const totalTurnover = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.turnover\n    }, 0)\n    const totalPf = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pf\n    }, 0)\n    const totalMin = playerStats.reduce((accumulator, currentValue) => {\n      let minutes = 0\n      const timeSplit = currentValue.min.split(':')\n      if (timeSplit.length === 1) {\n        minutes = Number(currentValue.min)\n      } else {\n        const seconds = Number(timeSplit[0]) * 60 + Number(timeSplit[1])\n        minutes = Math.floor(seconds / 60)\n      }\n      if (isNaN(minutes)) {\n        minutes = 0\n      }\n      if (minutes !== 0) {\n        playedGames++\n      }\n      return accumulator + minutes\n    }, 0)\n\n    const updatedPlayer = playerTotalStat\n\n    updatedPlayer.pts = totalPts\n    updatedPlayer.ast = totalAst\n    updatedPlayer.reb = totalReb\n    updatedPlayer.stl = totalStl\n    updatedPlayer.blk = totalBlk\n    updatedPlayer.turnover = totalTurnover\n    updatedPlayer.pf = totalPf\n    updatedPlayer.min = totalMin\n\n    updatedPlayer.ptsPer = Math.round(totalPts / playedGames * 10) / 10\n    updatedPlayer.astPer = Math.round(totalAst / playedGames * 10) / 10\n    updatedPlayer.rebPer = Math.round(totalReb / playedGames * 10) / 10\n    updatedPlayer.stlPer = Math.round(totalStl / playedGames * 10) / 10\n    updatedPlayer.blkPer = Math.round(totalBlk / playedGames * 10) / 10\n    updatedPlayer.turnoverPer = Math.round(totalTurnover / playedGames * 10) / 10\n    updatedPlayer.pfPer = Math.round(totalPf / playedGames * 10) / 10\n    updatedPlayer.minPer = Math.round(totalMin / playedGames * 10) / 10\n\n    //Don't calculate per 36 min stats if minutes per game is too low\n    if (updatedPlayer.minPer >= 10) {\n      updatedPlayer.ptsPer36 = Math.round(updatedPlayer.ptsPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.astPer36 = Math.round(updatedPlayer.astPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.rebPer36 = Math.round(updatedPlayer.rebPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.stlPer36 = Math.round(updatedPlayer.stlPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.blkPer36 = Math.round(updatedPlayer.blkPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.turnoverPer36 = Math.round(updatedPlayer.turnoverPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.pfPer36 = Math.round(updatedPlayer.pfPer / updatedPlayer.minPer * 36 * 10) / 10\n    }\n\n\n    playerTotalStats = playerTotalStats.map(s => s.name === playerTotalStat.name ? updatedPlayer : s)\n  })\n\n\n  const legend = {\n    labels: {\n      fontColor: 'white',\n      fontSize: 12\n    },\n    position: 'right'\n  }\n\n  const plugins = {\n    labels: {\n      render: 'value',\n      fontSize: 14,\n      fontColor: 'black'\n    }\n  }\n\n  const optionsTotalPoints = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total points',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsTotalAssists = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total assists',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsTotalRebounds = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total rebounds',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsTotalBlocks = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total blocks',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsTotalSteals = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total steals',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsTotalTurnovers = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total turnovers',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsTotalPersonalFouls = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total fouls',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsTotalMinutes = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total minutes',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n\n  const dataTotalPoints = {\n    labels: playerTotalStats\n      .sort((a, b) => b.pts - a.pts)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total points',\n      data: playerTotalStats\n        .sort((a, b) => b.pts - a.pts)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.pts),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalAssists = {\n    labels: playerTotalStats\n      .sort((a, b) => b.ast - a.ast)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total assists',\n      data: playerTotalStats\n        .sort((a, b) => b.ast - a.ast)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.ast),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalRebounds = {\n    labels: playerTotalStats\n      .sort((a, b) => b.reb - a.reb)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total rebounds',\n      data: playerTotalStats\n        .sort((a, b) => b.reb - a.reb)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.reb),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalBlocks = {\n    labels: playerTotalStats\n      .sort((a, b) => b.blk - a.blk)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total blocks',\n      data: playerTotalStats\n        .sort((a, b) => b.blk - a.blk)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.blk),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalSteals = {\n    labels: playerTotalStats\n      .sort((a, b) => b.stl - a.stl)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total steals',\n      data: playerTotalStats\n        .sort((a, b) => b.stl - a.stl)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.stl),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalTurnovers = {\n    labels: playerTotalStats\n      .sort((a, b) => b.turnover - a.turnover)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total turnovers',\n      data: playerTotalStats\n        .sort((a, b) => b.turnover - a.turnover)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.turnover),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalPersonalFouls = {\n    labels: playerTotalStats\n      .sort((a, b) => b.pf - a.pf)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total personal fouls',\n      data: playerTotalStats\n        .sort((a, b) => b.pf - a.pf)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.pf),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalMinutes = {\n    labels: playerTotalStats\n      .sort((a, b) => b.min - a.min)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total minutes',\n      data: playerTotalStats\n        .sort((a, b) => b.min - a.min)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.min),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n\n  //////////////////////////////////////////////////////////////////////\n\n  const optionsPerPoints = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Points per game',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPerAssists = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Assists per game',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPerRebounds = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Rebounds per game',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPerBlocks = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Blocks per game',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPerSteals = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Steals per game',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPerTurnovers = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Turnovers per game',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPerPersonalFouls = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fouls per game',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPerMinutes = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Minutes per game',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n\n  const dataPerPoints = {\n    labels: playerTotalStats\n      .sort((a, b) => b.ptsPer - a.ptsPer)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Points per game',\n      data: playerTotalStats\n        .sort((a, b) => b.ptsPer - a.ptsPer)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.ptsPer),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPerAssists = {\n    labels: playerTotalStats\n      .sort((a, b) => b.astPer - a.astPer)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Assists per game',\n      data: playerTotalStats\n        .sort((a, b) => b.astPer - a.astPer)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.astPer),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPerRebounds = {\n    labels: playerTotalStats\n      .sort((a, b) => b.rebPer - a.rebPer)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Rebounds per game',\n      data: playerTotalStats\n        .sort((a, b) => b.rebPer - a.rebPer)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.rebPer),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPerBlocks = {\n    labels: playerTotalStats\n      .sort((a, b) => b.blkPer - a.blkPer)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Blocks per game',\n      data: playerTotalStats\n        .sort((a, b) => b.blkPer - a.blkPer)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.blkPer),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPerSteals = {\n    labels: playerTotalStats\n      .sort((a, b) => b.stlPer - a.stlPer)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Steals per game',\n      data: playerTotalStats\n        .sort((a, b) => b.stlPer - a.stlPer)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.stlPer),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPerTurnovers = {\n    labels: playerTotalStats\n      .sort((a, b) => b.turnoverPer - a.turnoverPer)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Turnovers per game',\n      data: playerTotalStats\n        .sort((a, b) => b.turnoverPer - a.turnoverPer)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.turnoverPer),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPerPersonalFouls = {\n    labels: playerTotalStats\n      .sort((a, b) => b.pfPer - a.pfPer)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Personal fouls per game',\n      data: playerTotalStats\n        .sort((a, b) => b.pfPer - a.pfPer)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.pfPer),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPerMinutes = {\n    labels: playerTotalStats\n      .sort((a, b) => b.minPer - a.minPer)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Minutes per game',\n      data: playerTotalStats\n        .sort((a, b) => b.minPer - a.minPer)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.minPer),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n\n\n  //////////////////////////////////////////////////////////////////////////\n\n\n  const optionsPer36Points = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Points per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPer36Assists = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Assists per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPer36Rebounds = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Rebounds per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPer36Blocks = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Blocks per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPer36Steals = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Steals per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPer36Turnovers = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Turnovers per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n  const optionsPer36PersonalFouls = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fouls per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    }\n  }\n\n  const dataPer36Points = {\n    labels: playerTotalStats\n      .sort((a, b) => b.ptsPer36 - a.ptsPer36)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Points per 36 min',\n      data: playerTotalStats\n        .sort((a, b) => b.ptsPer36 - a.ptsPer36)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.ptsPer36),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Assists = {\n    labels: playerTotalStats\n      .sort((a, b) => b.astPer36 - a.astPer36)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Assists per 36 min',\n      data: playerTotalStats\n        .sort((a, b) => b.astPer36 - a.astPer36)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.astPer36),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Rebounds = {\n    labels: playerTotalStats\n      .sort((a, b) => b.rebPer36 - a.rebPer36)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Rebounds per 36 min',\n      data: playerTotalStats\n        .sort((a, b) => b.rebPer36 - a.rebPer36)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.rebPer36),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Blocks = {\n    labels: playerTotalStats\n      .sort((a, b) => b.blkPer36 - a.blkPer36)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Blocks per 36 min',\n      data: playerTotalStats\n        .sort((a, b) => b.blkPer36 - a.blkPer36)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.blkPer36),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Steals = {\n    labels: playerTotalStats\n      .sort((a, b) => b.stlPer36 - a.stlPer36)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Steals per 36 min',\n      data: playerTotalStats\n        .sort((a, b) => b.stlPer36 - a.stlPer36)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.stlPer36),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Turnovers = {\n    labels: playerTotalStats\n      .sort((a, b) => b.turnoverPer36 - a.turnoverPer36)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Turnovers per 36 min',\n      data: playerTotalStats\n        .sort((a, b) => b.turnoverPer36 - a.turnoverPer36)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.turnoverPer36),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36PersonalFouls = {\n    labels: playerTotalStats\n      .sort((a, b) => b.pfPer36 - a.pfPer36)\n      .slice(0, 5)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Personal fouls per 36 min',\n      data: playerTotalStats\n        .sort((a, b) => b.pfPer36 - a.pfPer36)\n        .slice(0, 5)\n        .map(playerTotalStat => playerTotalStat.pfPer36),\n      backgroundColor: [\n        colors.orangeLine,\n        colors.yellowLine,\n        colors.greenLine,\n        colors.magentaLine,\n        colors.cyanLine,\n      ],\n      hoverOffset: 4\n    }]\n  }\n\n  return (\n    <div>\n      <div className='chart'>\n        {teamStats.length > 0 && totalSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataTotalPoints}\n                  options={optionsTotalPoints}\n                />\n              </Col>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataTotalAssists}\n                  options={optionsTotalAssists}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataTotalRebounds}\n                  options={optionsTotalRebounds}\n                />\n              </Col>\n\n              <Col sm={6}>\n                <Doughnut\n                  data={dataTotalBlocks}\n                  options={optionsTotalBlocks}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataTotalSteals}\n                  options={optionsTotalSteals}\n                />\n              </Col>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataTotalTurnovers}\n                  options={optionsTotalTurnovers}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataTotalPersonalFouls}\n                  options={optionsTotalPersonalFouls}\n                />\n              </Col>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataTotalMinutes}\n                  options={optionsTotalMinutes}\n                />\n              </Col>\n            </Row>\n          </>\n          : <></>}\n\n\n        {teamStats.length > 0 && perGameSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPerPoints}\n                  options={optionsPerPoints}\n                />\n              </Col>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPerAssists}\n                  options={optionsPerAssists}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPerRebounds}\n                  options={optionsPerRebounds}\n                />\n              </Col>\n\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPerBlocks}\n                  options={optionsPerBlocks}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPerSteals}\n                  options={optionsPerSteals}\n                />\n              </Col>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPerTurnovers}\n                  options={optionsPerTurnovers}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPerPersonalFouls}\n                  options={optionsPerPersonalFouls}\n                />\n              </Col>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPerMinutes}\n                  options={optionsPerMinutes}\n                />\n              </Col>\n            </Row>\n          </>\n          : <></>}\n\n        {teamStats.length > 0 && per36Selected\n          ? <>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPer36Points}\n                  options={optionsPer36Points}\n                />\n              </Col>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPer36Assists}\n                  options={optionsPer36Assists}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPer36Rebounds}\n                  options={optionsPer36Rebounds}\n                />\n              </Col>\n\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPer36Blocks}\n                  options={optionsPer36Blocks}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPer36Steals}\n                  options={optionsPer36Steals}\n                />\n              </Col>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPer36Turnovers}\n                  options={optionsPer36Turnovers}\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Col sm={6}>\n                <Doughnut\n                  data={dataPer36PersonalFouls}\n                  options={optionsPer36PersonalFouls}\n                />\n              </Col>\n            </Row>\n          </>\n          : <></>}\n\n\n      </div>\n    </div >\n  )\n}\n\nexport default TeamStats","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\n\nconst SelectSeason = ({\n  selectedSeason,\n  setSelectedSeason,\n  selectedTeam,\n  setTeamStats,\n  teams,\n  fetchingData,\n  setFetchingData\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n\n\n  const handleSelectedSeasonChange = (event) => {\n    setSelectedSeason(event.value)\n    setFetchingData(true)\n    const searchedTeam = teams.find(team => team.name === selectedTeam)\n    playerStatService.getTeamStatsFromDB(searchedTeam.apiId, event.value)\n      .then((response) => {\n        setTeamStats(response.data.sort((a, b) =>\n          new Date(a.game.date).getTime() - new Date(b.game.date).getTime())\n        )\n        setFetchingData(false)\n      })\n  }\n\n  return (\n    <>\n      <Select\n        options={seasonSelectDescending}\n        //onChange={(event) => setSelectedSeason(event.value)}\n        onChange={(event) => handleSelectedSeasonChange(event)}\n        closeMenuOnSelect={true}\n        placeholder={selectedSeason}\n      />\n\n    </>\n  )\n}\n\nexport default SelectSeason","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectRegularPost","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectPerTotal = ({ setPerGameSelected, setTotalSelected, setPer36Selected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'per game', value: '1' },\n    { name: 'total', value: '2' },\n    { name: 'per 36 min', value: '3' },\n\n  ];\n\n  const handlePerGameChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setPerGameSelected(true)\n      setTotalSelected(false)\n      setPer36Selected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setPerGameSelected(false)\n      setTotalSelected(true)\n      setPer36Selected(false)\n    }\n    if (e.currentTarget.value === '3') {\n      setPerGameSelected(false)\n      setTotalSelected(false)\n      setPer36Selected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handlePerGameChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectPerTotal","\nconst DescriptionTeams = () => {\n  return (\n    <div style={{color:'white', textAlign:'left',}}>\n      <br></br>\n      <br></br>\n      <p>\n        This page shows top 5 players for each stat in a team\n        in doughnut chart form.\n\n        You can select a team and a season.\n        \n        For stats you can\n        select per game, total or per 36 minutes.\n        \n        You can also select between regular and post season.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionTeams\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport SelectTeam from './SelectTeam'\nimport TeamStats from './TeamStats'\nimport SelectSeason from './SelectSeason'\nimport SelectRegularPost from './SelectRegularPost'\nimport SelectPerTotal from './SelectPerTotal'\nimport DescriptionTeams from './DescriptionTeams'\nimport Title from '../Title'\nimport Description from '../Description'\nimport teamService from '../../services/teams'\nimport Loader from 'react-loader-spinner'\nimport Logo from '../Logo'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\nconst Teams = ({ fetchingData, setFetchingData }) => {\n\n  const [teams, setTeams] = useState([])\n  const [selectedTeam, setSelectedTeam] = useState('')\n  const [teamStats, setTeamStats] = useState([])\n  const [selectedSeason, setSelectedSeason] = useState(2020)\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [perGameSelected, setPerGameSelected] = useState(true)\n  const [totalSelected, setTotalSelected] = useState(false)\n  const [per36Selected, setPer36Selected] = useState(false)\n\n  useEffect(() => {\n\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n    //console.log('pathname:', window.location.pathname)\n\n    teamService.getTeamsFromDatabase()\n      .then((response) => {\n        //console.log(response)\n        setTeams(response)\n      })\n  }, [])\n\n  return (\n    <div>\n      <Row>\n        <Col sm={4} style={{ textAlign: 'center' }}>\n        </Col>\n        <Col sm={4}>\n          <SelectTeam\n            teams={teams}\n            setSelectedTeam={setSelectedTeam}\n            setTeamStats={setTeamStats}\n            setFetchingData={setFetchingData}\n            selectedSeason={selectedSeason}\n          />\n        </Col>\n        <Col sm={4}>\n          {selectedTeam !== ''\n            ? <SelectPerTotal\n              setPerGameSelected={setPerGameSelected}\n              setTotalSelected={setTotalSelected}\n              setPer36Selected={setPer36Selected}\n            />\n            : <></>}\n        </Col>\n      </Row>\n      {selectedTeam !== ''\n        ? <Row>\n          <Col sm={4} style={{ textAlign: 'center' }}>\n          </Col>\n          <Col sm={4}>\n            <SelectSeason\n              selectedSeason={selectedSeason}\n              setSelectedSeason={setSelectedSeason}\n              selectedTeam={selectedTeam}\n              setTeamStats={setTeamStats}\n              teams={teams}\n              setFetchingData={setFetchingData}\n            />\n          </Col>\n          <Col sm={4}>\n            <SelectRegularPost\n              regularSeasonSelected={regularSeasonSelected}\n              postSeasonSelected={postSeasonSelected}\n              setRegularSeasonSelected={setRegularSeasonSelected}\n              setPostSeasonSelected={setPostSeasonSelected}\n            />\n          </Col>\n        </Row>\n        : <>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4}></Col>\n            <Col sm={4}>\n              <Logo />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Title />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Description />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <DescriptionTeams />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n        </>}\n      {fetchingData ? <>\n        <Row style={{ textAlign: 'center' }}>\n          <Col sm={4}></Col>\n          <Col sm={4}>\n            <br></br>\n            <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n          </Col>\n          <Col sm={4}></Col>\n        </Row>\n      </>\n        : <></>}\n      <TeamStats\n        selectedTeam={selectedTeam}\n        teamStats={teamStats}\n        postSeasonSelected={postSeasonSelected}\n        perGameSelected={perGameSelected}\n        totalSelected={totalSelected}\n        per36Selected={per36Selected}\n      />\n    </div>\n  )\n}\n\nexport default Teams","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n\n\nconst SelectSeason = ({\n  selectedSeason,\n  setSelectedSeason,\n  setFetchingData,\n  setTopTenStats\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  const handleSelectedSeasonChange = (event) => {\n    setSelectedSeason(event.value)\n    setFetchingData(true)\n    playerStatService.getSummaryStatsFromDBForASeason(event.value)\n      .then((response) => {\n        setTopTenStats(response.data)\n        setFetchingData(false)\n      })\n  }\n\n  return (\n    <>\n      <Select\n        options={seasonSelectDescending}\n        //onChange={(event) => setSelectedSeason(event.value)}\n        onChange={(event) => handleSelectedSeasonChange(event)}\n        closeMenuOnSelect={true}\n        placeholder='Select season'\n      />\n\n    </>\n  )\n}\n\nexport default SelectSeason","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectRegularPost","import React from 'react'\nimport { Row } from 'react-bootstrap'\nimport { Bar } from 'react-chartjs-2'\nimport 'chartjs-plugin-labels'\nimport colors from '../../styling/colors'\n\nconst TopTenStats = (\n  {\n    topTenStats,\n    postSeasonSelected,\n    perGameSelected,\n    totalSelected,\n    per36Selected,\n    pctSelected\n  }\n) => {\n\n  //console.log(topTenStats)\n  const topTenStatsFiltered = topTenStats.filter(stat => stat.postseason === postSeasonSelected)\n  //filter out bad data where player is not defined\n  /* topTenStatsFiltered = topTenStatsFiltered.filter(topTenStat => topTenStat.player !== undefined)\n\n  let topTenStatsFiltered = []\n  topTenStatsFiltered.forEach(topTenStat => {\n    const playerFullName = `${topTenStat.player.first_name} ${topTenStat.player.last_name}`\n    if (topTenStatsFiltered.find(playerTotalStat => playerTotalStat.name === playerFullName) === undefined) {\n      const player = { name: playerFullName }\n      topTenStatsFiltered.push(player)\n      //console.log(i, player)\n      //i++\n    }\n  })\n\n  const topTenStatsFilteredFiltered = topTenStatsFiltered.filter(teamStat => teamStat.game.postseason === postSeasonSelected)\n\n  topTenStatsFiltered.forEach(playerTotalStat => {\n    let playedGames = 0\n    const playerStats = topTenStatsFilteredFiltered\n      .filter(teamStat => `${teamStat.player.first_name} ${teamStat.player.last_name}` === playerTotalStat.name)\n\n    const totalPts = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pts\n    }, 0)\n    const totalAst = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.ast\n    }, 0)\n    const totalReb = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.reb\n    }, 0)\n    const totalStl = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.stl\n    }, 0)\n    const totalBlk = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.blk\n    }, 0)\n    const totalTurnover = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.turnover\n    }, 0)\n    const totalPf = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pf\n    }, 0)\n    const totalMin = playerStats.reduce((accumulator, currentValue) => {\n      let minutes = 0\n      const timeSplit = currentValue.min.split(':')\n      if (timeSplit.length === 1) {\n        minutes = Number(currentValue.min)\n      } else {\n        const seconds = Number(timeSplit[0]) * 60 + Number(timeSplit[1])\n        minutes = Math.floor(seconds / 60)\n      }\n      if (isNaN(minutes)) {\n        minutes = 0\n      }\n      if (minutes !== 0) {\n        playedGames++\n      }\n      return accumulator + minutes\n    }, 0)\n\n    const updatedPlayer = playerTotalStat\n\n    updatedPlayer.pts = totalPts\n    updatedPlayer.ast = totalAst\n    updatedPlayer.reb = totalReb\n    updatedPlayer.stl = totalStl\n    updatedPlayer.blk = totalBlk\n    updatedPlayer.turnover = totalTurnover\n    updatedPlayer.pf = totalPf\n    updatedPlayer.min = totalMin\n\n    updatedPlayer.ptsPer = Math.round(totalPts / playedGames * 10) / 10\n    updatedPlayer.astPer = Math.round(totalAst / playedGames * 10) / 10\n    updatedPlayer.rebPer = Math.round(totalReb / playedGames * 10) / 10\n    updatedPlayer.stlPer = Math.round(totalStl / playedGames * 10) / 10\n    updatedPlayer.blkPer = Math.round(totalBlk / playedGames * 10) / 10\n    updatedPlayer.turnoverPer = Math.round(totalTurnover / playedGames * 10) / 10\n    updatedPlayer.pfPer = Math.round(totalPf / playedGames * 10) / 10\n    updatedPlayer.minPer = Math.round(totalMin / playedGames * 10) / 10\n\n    //Don't calculate per 36 min stats if minutes per game is too low\n    if (updatedPlayer.minPer >= 10) {\n      updatedPlayer.ptsPer36 = Math.round(updatedPlayer.ptsPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.astPer36 = Math.round(updatedPlayer.astPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.rebPer36 = Math.round(updatedPlayer.rebPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.stlPer36 = Math.round(updatedPlayer.stlPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.blkPer36 = Math.round(updatedPlayer.blkPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.turnoverPer36 = Math.round(updatedPlayer.turnoverPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.pfPer36 = Math.round(updatedPlayer.pfPer / updatedPlayer.minPer * 36 * 10) / 10\n    }\n\n\n    topTenStatsFiltered = topTenStatsFiltered.map(s => s.name === playerTotalStat.name ? updatedPlayer : s)\n  }) */\n\n\n  const legend = {\n    labels: {\n      fontColor: 'white',\n      fontSize: 12\n    },\n    position: 'right',\n    display: false\n  }\n\n  const plugins = {\n    labels: false\n  }\n\n  const scales = {\n    yAxes: [{\n      ticks: {\n        beginAtZero: true,\n        fontColor: 'white',\n        fontSize: 14\n      }\n    }],\n    xAxes: [{\n      ticks: {\n        fontColor: 'white',\n        fontSize: 14\n      }\n    }]\n  }\n\n  const backgroundColor =\n    [\n      colors.orangeLine,\n      colors.yellowLine,\n      colors.greenLine,\n      colors.magentaLine,\n      colors.cyanLine,\n      colors.orangeLine,\n      colors.yellowLine,\n      colors.greenLine,\n      colors.magentaLine,\n      colors.cyanLine,\n      colors.orangeLine,\n      colors.yellowLine,\n      colors.greenLine,\n      colors.magentaLine,\n      colors.cyanLine,\n      colors.orangeLine,\n      colors.yellowLine,\n      colors.greenLine,\n      colors.magentaLine,\n      colors.cyanLine,\n\n    ]\n\n  const optionsFgPct = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fg %',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsFg3Pct = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fg3 %',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsFtPct = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Ft %',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsAstToTurnover = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Assists to turnovers',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const dataFgPct = {\n    labels: topTenStatsFiltered\n      .filter(s => s.fgm_pergame >= 5)\n      .sort((a, b) => b.fg_pct - a.fg_pct)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Fg %',\n      data: topTenStatsFiltered\n        .filter(s => s.fga_pergame >= 5)\n        .sort((a, b) => b.fg_pct - a.fg_pct)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.fg_pct),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataFg3Pct = {\n    labels: topTenStatsFiltered\n      .filter(s => s.fg3m_pergame >= 2)\n      .sort((a, b) => b.fg3_pct - a.fg3_pct)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Fg3 %',\n      data: topTenStatsFiltered\n        .filter(s => s.fg3m_pergame >= 2)\n        .sort((a, b) => b.fg3_pct - a.fg3_pct)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.fg3_pct),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataFtPct = {\n    labels: topTenStatsFiltered\n      .filter(s => s.ftm_pergame >= 2 && s.fta_total >= 30)\n      .sort((a, b) => b.ft_pct - a.ft_pct)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Ft %',\n      data: topTenStatsFiltered\n        .filter(s => s.ftm_pergame >= 2 && s.fta_total >= 30)\n        .sort((a, b) => b.ft_pct - a.ft_pct)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.ft_pct),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataAstToTurnover = {\n    labels: topTenStatsFiltered\n      .filter(s => s.ast_total >= 200 || s.ast_pergame >= 3)\n      .sort((a, b) => b.ast_to_turnover - a.ast_to_turnover)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Ast/Turnover ratio',\n      data: topTenStatsFiltered\n        .filter(s => s.ast_total >= 200 || s.ast_pergame >= 3)\n        .sort((a, b) => b.ast_to_turnover - a.ast_to_turnover)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.ast_to_turnover),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n\n  const optionsTotalPoints = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total points',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalAssists = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total assists',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalRebounds = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total rebounds',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalBlocks = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total blocks',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalSteals = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total steals',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalTurnovers = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total turnovers',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalPersonalFouls = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total fouls',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalMinutes = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total minutes',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n\n  const optionsTotalFga = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total fga',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalFgm = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total fgm',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalFg3a = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total fg3a',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalFg3m = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total fg3m',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalFta = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total fta',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalFtm = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total ftm',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n\n\n\n\n\n  const dataTotalPoints = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.pts_total - a.pts_total)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total points',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.pts_total - a.pts_total)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pts_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalAssists = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.ast_total - a.ast_total)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total assists',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.ast_total - a.ast_total)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.ast_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalRebounds = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.reb_total - a.reb_total)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total rebounds',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.reb_total - a.reb_total)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.reb_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalBlocks = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.blk_total - a.blk_total)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total blocks',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.blk_total - a.blk_total)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.blk_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalSteals = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.stl_total - a.stl_total)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total steals',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.stl_total - a.stl_total)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.stl_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalTurnovers = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.turnover_total - a.turnover_total)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total turnovers',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.turnover_total - a.turnover_total)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.turnover_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalPersonalFouls = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.pf_total - a.pf_total)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total personal fouls',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.pf_total - a.pf_total)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pf_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalMinutes = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.min_total - a.min_total)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total minutes',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.min_total - a.min_total)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.min_total),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n\n  //////////////////////////////////////////////////////////////////////\n\n  const optionsPerPoints = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Points per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerAssists = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Assists per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerRebounds = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Rebounds per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerBlocks = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Blocks per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerSteals = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Steals per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerTurnovers = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Turnovers per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerPersonalFouls = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fouls per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerMinutes = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Minutes per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerFga = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fga per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerFgm = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fgm per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerFg3a = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fg3a per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerFg3m = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fg3m per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerFta = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fta per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerFtm = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Ftm per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n\n  const dataPerPoints = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.pts_pergame - a.pts_pergame)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Points per game',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.pts_pergame - a.pts_pergame)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pts_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerAssists = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.ast_pergame - a.ast_pergame)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Assists per game',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.ast_pergame - a.ast_pergame)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.ast_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerRebounds = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.reb_pergame - a.reb_pergame)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Rebounds per game',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.reb_pergame - a.reb_pergame)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.reb_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerBlocks = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.blk_pergame - a.blk_pergame)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Blocks per game',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.blk_pergame - a.blk_pergame)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.blk_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerSteals = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.stl_pergame - a.stl_pergame)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Steals per game',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.stl_pergame - a.stl_pergame)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.stl_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerTurnovers = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.turnover_pergame - a.turnover_pergame)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Turnovers per game',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.turnover_pergame - a.turnover_pergame)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.turnover_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerPersonalFouls = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.pf_pergame - a.pf_pergame)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Personal fouls per game',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.pf_pergame - a.pf_pergame)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pf_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerMinutes = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.min_pergame - a.min_pergame)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Minutes per game',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.min_pergame - a.min_pergame)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.min_pergame),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n\n\n  //////////////////////////////////////////////////////////////////////////\n\n\n  const optionsPer36Points = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Points per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Assists = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Assists per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Rebounds = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Rebounds per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Blocks = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Blocks per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Steals = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Steals per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Turnovers = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Turnovers per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36PersonalFouls = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fouls per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Fga = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fga per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Fgm = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fgm per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Fg3a = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fg3a per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Fg3m = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fg3m per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Fta = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fta per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Ftm = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Ftm per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n\n  const dataPer36Points = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.pts_per36 - a.pts_per36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Points per 36 min',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.pts_per36 - a.pts_per36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pts_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Assists = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.ast_per36 - a.ast_per36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Assists per 36 min',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.ast_per36 - a.ast_per36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.ast_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Rebounds = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.reb_per36 - a.reb_per36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Rebounds per 36 min',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.reb_per36 - a.reb_per36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.reb_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Blocks = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.blk_per36 - a.blk_per36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Blocks per 36 min',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.blk_per36 - a.blk_per36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.blk_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Steals = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.stl_per36 - a.stl_per36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Steals per 36 min',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.stl_per36 - a.stl_per36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.stl_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Turnovers = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.turnover_per36 - a.turnover_per36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Turnovers per 36 min',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.turnover_per36 - a.turnover_per36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.turnover_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36PersonalFouls = {\n    labels: topTenStatsFiltered\n      .sort((a, b) => b.pf_per36 - a.pf_per36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Personal fouls per 36 min',\n      data: topTenStatsFiltered\n        .sort((a, b) => b.pf_per36 - a.pf_per36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pf_per36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n\n  return (\n    <div>\n      <div className='chart'>\n        {topTenStatsFiltered.length > 0 && pctSelected\n          ? <>\n            <Row>\n              <Bar\n                data={dataFgPct}\n                options={optionsFgPct}\n              />\n            </Row>\n            <Row>\n              <Bar\n                data={dataFg3Pct}\n                options={optionsFg3Pct}\n              />\n            </Row>\n            <Row>\n              <Bar\n                data={dataFtPct}\n                options={optionsFtPct}\n              />\n            </Row>\n          </>\n          : <></>}\n\n        {topTenStatsFiltered.length > 0 && totalSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalPoints}\n                options={optionsTotalPoints}\n              />\n            </Row>\n            <Row>\n              <br></br>\n              <br></br>\n              <br></br>\n              <Bar\n                data={dataTotalAssists}\n                options={optionsTotalAssists}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalRebounds}\n                options={optionsTotalRebounds}\n              />\n            </Row>\n            <Row>\n              <br></br>\n              <br></br>\n              <br></br>\n              <Bar\n                data={dataTotalBlocks}\n                options={optionsTotalBlocks}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalSteals}\n                options={optionsTotalSteals}\n              />\n            </Row>\n            <Row>\n              <br></br>\n              <br></br>\n              <br></br>\n              <Bar\n                data={dataTotalTurnovers}\n                options={optionsTotalTurnovers}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalPersonalFouls}\n                options={optionsTotalPersonalFouls}\n              />\n            </Row>\n            <Row>\n              <br></br>\n              <br></br>\n              <br></br>\n              <Bar\n                data={dataTotalMinutes}\n                options={optionsTotalMinutes}\n              />\n            </Row>\n          </>\n          : <></>}\n\n\n        {topTenStatsFiltered.length > 0 && perGameSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerPoints}\n                options={optionsPerPoints}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerAssists}\n                options={optionsPerAssists}\n              />\n\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerRebounds}\n                options={optionsPerRebounds}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerBlocks}\n                options={optionsPerBlocks}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerSteals}\n                options={optionsPerSteals}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerTurnovers}\n                options={optionsPerTurnovers}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataAstToTurnover}\n                options={optionsAstToTurnover}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerPersonalFouls}\n                options={optionsPerPersonalFouls}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerMinutes}\n                options={optionsPerMinutes}\n              />\n            </Row>\n          </>\n          : <></>}\n\n        {topTenStatsFiltered.length > 0 && per36Selected\n          ? <>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36Points}\n                options={optionsPer36Points}\n              />\n            </Row>\n            <Row>\n              <br></br>\n              <br></br>\n              <br></br>\n              <Bar\n                data={dataPer36Assists}\n                options={optionsPer36Assists}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36Rebounds}\n                options={optionsPer36Rebounds}\n              />\n            </Row>\n            <Row>\n              <br></br>\n              <br></br>\n              <br></br>\n              <Bar\n                data={dataPer36Blocks}\n                options={optionsPer36Blocks}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36Steals}\n                options={optionsPer36Steals}\n              />\n            </Row>\n            <Row>\n              <br></br>\n              <br></br>\n              <br></br>\n              <Bar\n                data={dataPer36Turnovers}\n                options={optionsPer36Turnovers}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36PersonalFouls}\n                options={optionsPer36PersonalFouls}\n              />\n            </Row>\n          </>\n          : <></>}\n\n\n      </div>\n    </div >\n  )\n}\n\nexport default TopTenStats","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectPerTotal = ({ setPerGameSelected, setTotalSelected, setPer36Selected, setPctSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'per game', value: '1' },\n    { name: 'total', value: '2' },\n    { name: 'per 36 min', value: '3' },\n    { name: '%', value: '4' }\n\n  ];\n\n  const handlePerGameChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setPerGameSelected(true)\n      setTotalSelected(false)\n      setPer36Selected(false)\n      setPctSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setPerGameSelected(false)\n      setTotalSelected(true)\n      setPer36Selected(false)\n      setPctSelected(false)\n    }\n    if (e.currentTarget.value === '3') {\n      setPerGameSelected(false)\n      setTotalSelected(false)\n      setPer36Selected(true)\n      setPctSelected(false)\n    }\n    if (e.currentTarget.value === '4') {\n      setPerGameSelected(false)\n      setTotalSelected(false)\n      setPer36Selected(false)\n      setPctSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handlePerGameChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectPerTotal","\nconst DescriptionTop20 = () => {\n  return (\n    <div style={{ color: 'white', textAlign: 'left', }}>\n      <br></br>\n      <br></br>\n      <p>\n        This page shows top 20 players for each stat.\n        Start by selecting season.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionTop20\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport 'chartjs-plugin-labels'\nimport Title from '../Title'\nimport Description from '../Description'\nimport Loader from 'react-loader-spinner'\nimport Logo from '../Logo'\nimport SelectSeason from './SelectSeason'\nimport SelectRegularPost from './SelectRegularPost'\nimport TopTenStats from './TopTenStats'\nimport SelectPerTotal from './SelectPerTotal'\nimport DescriptionTop20 from './DescriptionTop20'\nimport ReactGa from 'react-ga'\nrequire('dotenv').config()\n\nconst TopTen = ({ fetchingData, setFetchingData }) => {\n\n  const [selectedSeason, setSelectedSeason] = useState('')\n  const [topTenStats, setTopTenStats] = useState([])\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [perGameSelected, setPerGameSelected] = useState(true)\n  const [totalSelected, setTotalSelected] = useState(false)\n  const [per36Selected, setPer36Selected] = useState(false)\n  const [pctSelected, setPctSelected] = useState(false)\n\n  useEffect(() => {\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  return (\n    <>\n      <Row>\n        <Col sm={4} style={{ textAlign: 'center' }}>\n        </Col>\n        <Col sm={4}>\n          <SelectSeason\n            selectedSeason={selectedSeason}\n            setSelectedSeason={setSelectedSeason}\n            setFetchingData={setFetchingData}\n            setTopTenStats={setTopTenStats}\n          />\n        </Col>\n        <Col sm={4}>\n          {selectedSeason !== ''\n            ? <SelectPerTotal\n              setPerGameSelected={setPerGameSelected}\n              setTotalSelected={setTotalSelected}\n              setPer36Selected={setPer36Selected}\n              setPctSelected={setPctSelected}\n            />\n            : <></>}\n        </Col>\n      </Row>\n      {selectedSeason !== ''\n        ? <Row>\n          <Col sm={4} style={{ textAlign: 'center' }}>\n          </Col>\n          <Col sm={4}>\n            <SelectRegularPost\n              regularSeasonSelected={regularSeasonSelected}\n              postSeasonSelected={postSeasonSelected}\n              setRegularSeasonSelected={setRegularSeasonSelected}\n              setPostSeasonSelected={setPostSeasonSelected}\n            />\n          </Col>\n        </Row>\n        : <>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4}></Col>\n            <Col sm={4}>\n              <Logo />\n            </Col>\n            <Col sm={4}></Col>\n          </Row>\n          <br></br>\n          <br></br>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Title />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <Description />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n          <Row style={{ textAlign: 'center' }}>\n            <Col sm={4} xs={1}></Col>\n            <Col sm={4} xs={10}>\n              <DescriptionTop20 />\n            </Col>\n            <Col sm={4} xs={1}></Col>\n          </Row>\n        </>}\n      {fetchingData ? <>\n        <Row style={{ textAlign: 'center' }}>\n          <Col sm={4}></Col>\n          <Col sm={4}>\n            <br></br>\n            <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n          </Col>\n          <Col sm={4}></Col>\n        </Row>\n      </>\n        : <></>}\n      <TopTenStats\n        topTenStats={topTenStats}\n        postSeasonSelected={postSeasonSelected}\n        perGameSelected={perGameSelected}\n        totalSelected={totalSelected}\n        per36Selected={per36Selected}\n        pctSelected={pctSelected}\n      />\n\n    </>\n  )\n\n\n\n\n\n\n\n\n\n\n\n}\n\nexport default TopTen","import axios from 'axios'\n//const baseUrl = 'https://www.balldontlie.io/api/v1/players'\nconst baseUrl = '/api/players'\n\nconst getPlayers = async () => {\n  const players = await axios.get(baseUrl)\n  \n  return players.data\n}\n\nconst getPlayersForASeason = async (season) => {\n  const players = await axios.get(`${baseUrl}/${season}`)\n  \n  return players.data\n}\n\nconst playerService = { getPlayers, getPlayersForASeason }\n\nexport default playerService","import Select from 'react-select'\nimport playerService from '../../services/players'\n\n\nconst SelectSeason = ({\n  selectedSeason,\n  setSelectedSeason,\n  fetchingData,\n  setFetchingData,\n  setPlayersForSelectedSeason,\n  players\n}) => {\n\n  let seasonDescending = 2020\n  const seasonSelectDescending = []\n  while (seasonDescending >= 1979) {\n    seasonSelectDescending.push({ label: seasonDescending.toString(), value: seasonDescending.toString() })\n    seasonDescending--\n  }\n\n  const handleSelectedSeasonChange = (event) => {\n    setSelectedSeason(event.value)\n    setFetchingData(true)\n    //const searchedTeam = teams.find(team => team.name === selectedTeam)\n    playerService.getPlayersForASeason(event.value)\n      .then((response) => {\n        //console.log(response)\n        const filteredPlayers = players.filter(player => response.includes(player.apiId))\n        setPlayersForSelectedSeason(filteredPlayers.map(player => ({ ...player, fullName: `${player.firstName} ${player.lastName}` }))\n          .sort((a, b) => (a.lastName > b.lastName) ? 1 : ((b.lastName > a.lastName) ? -1 : 0)))\n        setFetchingData(false)\n        //console.log('filteredPlayers', filteredPlayers)\n      })\n  }\n\n  return (\n    <>\n      <Select\n        options={seasonSelectDescending}\n        //onChange={(event) => setSelectedSeason(event.value)}\n        onChange={(event) => handleSelectedSeasonChange(event)}\n        closeMenuOnSelect={true}\n        placeholder='Select season'\n      />\n\n    </>\n  )\n}\n\nexport default SelectSeason","import Select from 'react-select'\nimport playerStatService from '../../services/playerStats'\n//import { useHistory } from 'react-router-dom'\n\nconst SelectPlayer = ({ players,\n  setSelectedPlayer,\n  setStatsForSelectedPlayers,\n  setFetchingData,\n  selectedSeason,\n  statsForSelectedPlayers,\n  setNumberOfSelectedPlayers,\n  numberOfSelectedPlayers\n}) => {\n\n  //const history = useHistory()\n  const playerSelect = players.map(player => ({ label: player.fullName, value: player.fullName }))\n\n  const handleSelectedPlayerChange = (playerFullName) => {\n    setSelectedPlayer(playerFullName)\n    getPlayerStats(playerFullName)\n  }\n\n  const getPlayerStats = (playerFullName) => {\n    setFetchingData(true)\n    const searchedPlayer = players.find(player => player.fullName === playerFullName)\n    //console.log('searched player', searchedPlayer)\n    playerStatService.getPlayerStatsFromDBForASeason(searchedPlayer.apiId, selectedSeason/* , playerFullName */)\n      .then((response) => {\n        //history.push(`/players/${playerFullName}`)\n        let updatedStats = statsForSelectedPlayers\n        updatedStats = updatedStats.concat(response.data)\n        setStatsForSelectedPlayers(updatedStats)\n        //console.log(response.data)\n        setFetchingData(false)\n        setNumberOfSelectedPlayers(numberOfSelectedPlayers + 1)\n      })\n\n\n  }\n  return (\n    <div>\n      <Select\n        options={playerSelect}\n        onChange={(option) => handleSelectedPlayerChange(option.value)}\n        placeholder='Select player'\n      />\n    </div>\n  )\n}\n\nexport default SelectPlayer","import React from 'react'\nimport { Row } from 'react-bootstrap'\nimport { Bar } from 'react-chartjs-2'\nimport 'chartjs-plugin-labels'\nimport colors from '../../styling/colors'\n\nconst PlayerComparisonStats = (\n  {\n    statsForSelectedPlayers,\n    postSeasonSelected,\n    perGameSelected,\n    totalSelected,\n    per36Selected\n  }\n) => {\n\n  //filter out bad data where player is not defined\n  //console.log('stats for selected players', statsForSelectedPlayers)\n  statsForSelectedPlayers = statsForSelectedPlayers.filter(topTenStat => topTenStat.player !== undefined)\n\n  let playerTopTenStats = []\n  statsForSelectedPlayers.forEach(topTenStat => {\n    const playerFullName = `${topTenStat.player.first_name} ${topTenStat.player.last_name}`\n    //console.log('player full name', playerFullName)\n    if (playerTopTenStats.find(playerTotalStat => playerTotalStat.name === playerFullName) === undefined) {\n      const player = { name: playerFullName }\n      playerTopTenStats.push(player)\n      /* console.log(i, player)\n      i++ */\n    }\n  })\n  //console.log('player topten stats', playerTopTenStats)\n\n  const topTenStatsFiltered = statsForSelectedPlayers.filter(teamStat => teamStat.game.postseason === postSeasonSelected)\n\n  playerTopTenStats.forEach(playerTotalStat => {\n    let playedGames = 0\n    const playerStats = topTenStatsFiltered\n      .filter(teamStat => `${teamStat.player.first_name} ${teamStat.player.last_name}` === playerTotalStat.name)\n\n    const totalPts = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pts\n    }, 0)\n    const totalAst = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.ast\n    }, 0)\n    const totalReb = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.reb\n    }, 0)\n    const totalStl = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.stl\n    }, 0)\n    const totalBlk = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.blk\n    }, 0)\n    const totalTurnover = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.turnover\n    }, 0)\n    const totalPf = playerStats.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.pf\n    }, 0)\n    const totalMin = playerStats.reduce((accumulator, currentValue) => {\n      let minutes = 0\n      const timeSplit = currentValue.min.split(':')\n      if (timeSplit.length === 1) {\n        minutes = Number(currentValue.min)\n      } else {\n        const seconds = Number(timeSplit[0]) * 60 + Number(timeSplit[1])\n        minutes = Math.floor(seconds / 60)\n      }\n      if (isNaN(minutes)) {\n        minutes = 0\n      }\n      if (minutes !== 0) {\n        playedGames++\n      }\n      return accumulator + minutes\n    }, 0)\n\n    const updatedPlayer = playerTotalStat\n\n    updatedPlayer.pts = totalPts\n    updatedPlayer.ast = totalAst\n    updatedPlayer.reb = totalReb\n    updatedPlayer.stl = totalStl\n    updatedPlayer.blk = totalBlk\n    updatedPlayer.turnover = totalTurnover\n    updatedPlayer.pf = totalPf\n    updatedPlayer.min = totalMin\n\n    updatedPlayer.ptsPer = Math.round(totalPts / playedGames * 10) / 10\n    updatedPlayer.astPer = Math.round(totalAst / playedGames * 10) / 10\n    updatedPlayer.rebPer = Math.round(totalReb / playedGames * 10) / 10\n    updatedPlayer.stlPer = Math.round(totalStl / playedGames * 10) / 10\n    updatedPlayer.blkPer = Math.round(totalBlk / playedGames * 10) / 10\n    updatedPlayer.turnoverPer = Math.round(totalTurnover / playedGames * 10) / 10\n    updatedPlayer.pfPer = Math.round(totalPf / playedGames * 10) / 10\n    updatedPlayer.minPer = Math.round(totalMin / playedGames * 10) / 10\n\n    //Don't calculate per 36 min stats if minutes per game is too low\n    if (updatedPlayer.minPer >= 10) {\n      updatedPlayer.ptsPer36 = Math.round(updatedPlayer.ptsPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.astPer36 = Math.round(updatedPlayer.astPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.rebPer36 = Math.round(updatedPlayer.rebPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.stlPer36 = Math.round(updatedPlayer.stlPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.blkPer36 = Math.round(updatedPlayer.blkPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.turnoverPer36 = Math.round(updatedPlayer.turnoverPer / updatedPlayer.minPer * 36 * 10) / 10\n      updatedPlayer.pfPer36 = Math.round(updatedPlayer.pfPer / updatedPlayer.minPer * 36 * 10) / 10\n    }\n\n\n    playerTopTenStats = playerTopTenStats.map(s => s.name === playerTotalStat.name ? updatedPlayer : s)\n  })\n\n\n  const legend = {\n    labels: {\n      fontColor: 'white',\n      fontSize: 12\n    },\n    position: 'right',\n    display: false\n  }\n\n  const plugins = {\n    labels: false\n  }\n\n  const scales = {\n    yAxes: [{\n      ticks: {\n        beginAtZero: true,\n        fontColor: 'white',\n        fontSize: 14\n      }\n    }],\n    xAxes: [{\n      ticks: {\n        fontColor: 'white',\n        fontSize: 14\n      }\n    }]\n  }\n\n  const backgroundColor =\n    [\n      colors.orangeLine,\n      colors.yellowLine,\n      colors.greenLine,\n      colors.magentaLine,\n      colors.cyanLine,\n      colors.orangeLine,\n      colors.yellowLine,\n      colors.greenLine,\n      colors.magentaLine,\n      colors.cyanLine,\n      colors.orangeLine,\n      colors.yellowLine,\n      colors.greenLine,\n      colors.magentaLine,\n      colors.cyanLine,\n      colors.orangeLine,\n      colors.yellowLine,\n      colors.greenLine,\n      colors.magentaLine,\n      colors.cyanLine,\n\n    ]\n\n  const optionsTotalPoints = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total points',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalAssists = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total assists',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalRebounds = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total rebounds',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalBlocks = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total blocks',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalSteals = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total steals',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalTurnovers = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total turnovers',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalPersonalFouls = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total fouls',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsTotalMinutes = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Total minutes',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n\n  const dataTotalPoints = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.pts - a.pts)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total points',\n      data: playerTopTenStats\n        .sort((a, b) => b.pts - a.pts)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pts),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalAssists = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.ast - a.ast)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total assists',\n      data: playerTopTenStats\n        .sort((a, b) => b.ast - a.ast)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.ast),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalRebounds = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.reb - a.reb)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total rebounds',\n      data: playerTopTenStats\n        .sort((a, b) => b.reb - a.reb)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.reb),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalBlocks = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.blk - a.blk)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total blocks',\n      data: playerTopTenStats\n        .sort((a, b) => b.blk - a.blk)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.blk),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalSteals = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.stl - a.stl)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total steals',\n      data: playerTopTenStats\n        .sort((a, b) => b.stl - a.stl)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.stl),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalTurnovers = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.turnover - a.turnover)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total turnovers',\n      data: playerTopTenStats\n        .sort((a, b) => b.turnover - a.turnover)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.turnover),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalPersonalFouls = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.pf - a.pf)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total personal fouls',\n      data: playerTopTenStats\n        .sort((a, b) => b.pf - a.pf)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pf),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataTotalMinutes = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.min - a.min)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Total minutes',\n      data: playerTopTenStats\n        .sort((a, b) => b.min - a.min)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.min),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n\n  //////////////////////////////////////////////////////////////////////\n\n  const optionsPerPoints = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Points per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerAssists = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Assists per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerRebounds = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Rebounds per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerBlocks = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Blocks per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerSteals = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Steals per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerTurnovers = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Turnovers per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerPersonalFouls = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fouls per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPerMinutes = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Minutes per game',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n\n  const dataPerPoints = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.ptsPer - a.ptsPer)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Points per game',\n      data: playerTopTenStats\n        .sort((a, b) => b.ptsPer - a.ptsPer)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.ptsPer),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerAssists = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.astPer - a.astPer)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Assists per game',\n      data: playerTopTenStats\n        .sort((a, b) => b.astPer - a.astPer)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.astPer),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerRebounds = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.rebPer - a.rebPer)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Rebounds per game',\n      data: playerTopTenStats\n        .sort((a, b) => b.rebPer - a.rebPer)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.rebPer),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerBlocks = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.blkPer - a.blkPer)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Blocks per game',\n      data: playerTopTenStats\n        .sort((a, b) => b.blkPer - a.blkPer)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.blkPer),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerSteals = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.stlPer - a.stlPer)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Steals per game',\n      data: playerTopTenStats\n        .sort((a, b) => b.stlPer - a.stlPer)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.stlPer),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerTurnovers = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.turnoverPer - a.turnoverPer)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Turnovers per game',\n      data: playerTopTenStats\n        .sort((a, b) => b.turnoverPer - a.turnoverPer)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.turnoverPer),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerPersonalFouls = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.pfPer - a.pfPer)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Personal fouls per game',\n      data: playerTopTenStats\n        .sort((a, b) => b.pfPer - a.pfPer)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pfPer),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPerMinutes = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.minPer - a.minPer)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Minutes per game',\n      data: playerTopTenStats\n        .sort((a, b) => b.minPer - a.minPer)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.minPer),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n\n\n  //////////////////////////////////////////////////////////////////////////\n\n\n  const optionsPer36Points = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Points per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Assists = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Assists per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Rebounds = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Rebounds per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Blocks = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Blocks per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Steals = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Steals per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36Turnovers = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Turnovers per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n  const optionsPer36PersonalFouls = {\n    legend: legend,\n    plugins: plugins,\n    title: {\n      display: true,\n      text: 'Fouls per 36 min',\n      fontSize: 16,\n      fontColor: 'white'\n    },\n    scales: scales\n  }\n\n  const dataPer36Points = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.ptsPer36 - a.ptsPer36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Points per 36 min',\n      data: playerTopTenStats\n        .sort((a, b) => b.ptsPer36 - a.ptsPer36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.ptsPer36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Assists = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.astPer36 - a.astPer36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Assists per 36 min',\n      data: playerTopTenStats\n        .sort((a, b) => b.astPer36 - a.astPer36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.astPer36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Rebounds = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.rebPer36 - a.rebPer36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Rebounds per 36 min',\n      data: playerTopTenStats\n        .sort((a, b) => b.rebPer36 - a.rebPer36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.rebPer36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Blocks = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.blkPer36 - a.blkPer36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Blocks per 36 min',\n      data: playerTopTenStats\n        .sort((a, b) => b.blkPer36 - a.blkPer36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.blkPer36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Steals = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.stlPer36 - a.stlPer36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Steals per 36 min',\n      data: playerTopTenStats\n        .sort((a, b) => b.stlPer36 - a.stlPer36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.stlPer36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36Turnovers = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.turnoverPer36 - a.turnoverPer36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Turnovers per 36 min',\n      data: playerTopTenStats\n        .sort((a, b) => b.turnoverPer36 - a.turnoverPer36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.turnoverPer36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n  const dataPer36PersonalFouls = {\n    labels: playerTopTenStats\n      .sort((a, b) => b.pfPer36 - a.pfPer36)\n      .slice(0, 20)\n      .map(playerTotalStat => playerTotalStat.name),\n    datasets: [{\n      label: 'Personal fouls per 36 min',\n      data: playerTopTenStats\n        .sort((a, b) => b.pfPer36 - a.pfPer36)\n        .slice(0, 20)\n        .map(playerTotalStat => playerTotalStat.pfPer36),\n      backgroundColor: backgroundColor,\n      hoverOffset: 4\n    }]\n  }\n\n  return (\n    <div>\n      <div className='chart'>\n        {statsForSelectedPlayers.length > 0 && totalSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalPoints}\n                options={optionsTotalPoints}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalAssists}\n                options={optionsTotalAssists}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalRebounds}\n                options={optionsTotalRebounds}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalBlocks}\n                options={optionsTotalBlocks}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Bar\n                data={dataTotalSteals}\n                options={optionsTotalSteals}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalTurnovers}\n                options={optionsTotalTurnovers}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalPersonalFouls}\n                options={optionsTotalPersonalFouls}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataTotalMinutes}\n                options={optionsTotalMinutes}\n              />\n            </Row>\n          </>\n          : <></>}\n\n\n        {statsForSelectedPlayers.length > 0 && perGameSelected\n          ? <>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerPoints}\n                options={optionsPerPoints}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerAssists}\n                options={optionsPerAssists}\n              />\n\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerRebounds}\n                options={optionsPerRebounds}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerBlocks}\n                options={optionsPerBlocks}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerSteals}\n                options={optionsPerSteals}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerTurnovers}\n                options={optionsPerTurnovers}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerPersonalFouls}\n                options={optionsPerPersonalFouls}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPerMinutes}\n                options={optionsPerMinutes}\n              />\n            </Row>\n          </>\n          : <></>}\n\n        {statsForSelectedPlayers.length > 0 && per36Selected\n          ? <>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36Points}\n                options={optionsPer36Points}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36Assists}\n                options={optionsPer36Assists}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36Rebounds}\n                options={optionsPer36Rebounds}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36Blocks}\n                options={optionsPer36Blocks}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36Steals}\n                options={optionsPer36Steals}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n              <Bar\n                data={dataPer36Turnovers}\n                options={optionsPer36Turnovers}\n              />\n            </Row>\n            <br></br>\n            <br></br>\n            <br></br><Row>\n              <Bar\n                data={dataPer36PersonalFouls}\n                options={optionsPer36PersonalFouls}\n              />\n            </Row>\n          </>\n          : <></>}\n\n\n      </div>\n    </div >\n  )\n}\n\nexport default PlayerComparisonStats","\nconst DescriptionPlayerComparison = () => {\n  return (\n    <div style={{ color: 'white', textAlign: 'left', }}>\n      <br></br>\n      <br></br>\n      <p>\n        On this page you can select a season and players whose stats you'd like to compare.\n        You can select up to 20 players.\n      </p>\n    </div>\n  )\n}\n\nexport default DescriptionPlayerComparison\n","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectPerTotal = ({ setPerGameSelected, setTotalSelected, setPer36Selected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'per game', value: '1' },\n    { name: 'total', value: '2' },\n    { name: 'per 36 min', value: '3' },\n\n  ];\n\n  const handlePerGameChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setPerGameSelected(true)\n      setTotalSelected(false)\n      setPer36Selected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setPerGameSelected(false)\n      setTotalSelected(true)\n      setPer36Selected(false)\n    }\n    if (e.currentTarget.value === '3') {\n      setPerGameSelected(false)\n      setTotalSelected(false)\n      setPer36Selected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handlePerGameChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectPerTotal","\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst SelectRegularPost = ({ setRegularSeasonSelected, setPostSeasonSelected }) => {\n\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'regular', value: '1' },\n    { name: 'post', value: '2' }\n  ];\n\n  const handleRegularPostChange = (e) => {\n    if (e.currentTarget.value === '1') {\n      setRegularSeasonSelected(true)\n      setPostSeasonSelected(false)\n    }\n    if (e.currentTarget.value === '2') {\n      setRegularSeasonSelected(false)\n      setPostSeasonSelected(true)\n    }\n    setRadioValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <ButtonGroup toggle size=\"md\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"outline-secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => handleRegularPostChange(e)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {/* test to check that states change correctly */}\n      {/* <div style={{ color: 'white' }}>\n        <p>reg: {regularSeasonSelected.toString()}</p>\n        <p>post: {postSeasonSelected.toString()}</p>\n      </div> */}\n    </>\n  )\n}\n\nexport default SelectRegularPost","import React from 'react'\nimport { /* Row, Col,  */Button } from 'react-bootstrap'\n/* import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link,\n  useRouteMatch,\n  useHistory\n} from 'react-router-dom' */\n\nconst Reset = ({\n  setPlayersForSelectedSeason,\n  setSelectedSeason,\n  setStatsForSelectedPlayers\n}) => {\n  //const history = useHistory()\n  const resetPlayerComparison = () => {\n    //history.push('/compareplayers')\n    setPlayersForSelectedSeason([])\n    setSelectedSeason('')\n    setStatsForSelectedPlayers([])\n\n\n  }\n\n  return (\n    <div>\n      <Button onClick={() => resetPlayerComparison()}>\n      Reset\n\n      </Button>\n    </div>\n  )\n}\n\nexport default Reset\n","import React, { useState, useEffect } from 'react'\nimport SelectSeason from './SelectSeason'\nimport SelectPlayer from './SelectPlayer'\nimport PlayerComparisonStats from './ComparePlayersStats'\nimport DescriptionPlayerComparison from './DescriptionComparePlayers'\nimport SelectPerTotal from './SelectPerTotal'\nimport SelectRegularPost from './SelectRegularPost'\nimport Reset from './Reset'\nimport Logo from '../Logo'\nimport Title from '../Title'\nimport { Row, Col } from 'react-bootstrap'\nimport ReactGa from 'react-ga'\nimport Loader from 'react-loader-spinner'\nrequire('dotenv').config()\n\n\nconst PlayerComparison = ({ players, fetchingData, setFetchingData }) => {\n  const [selectedSeason, setSelectedSeason] = useState('')\n  const [playersForSelectedSeason, setPlayersForSelectedSeason] = useState([])\n  const [/* selectedPlayer */, setSelectedPlayer] = useState('')\n  const [statsForSelectedPlayers, setStatsForSelectedPlayers] = useState([])\n  const [regularSeasonSelected, setRegularSeasonSelected] = useState(true)\n  const [postSeasonSelected, setPostSeasonSelected] = useState(false)\n  const [perGameSelected, setPerGameSelected] = useState(true)\n  const [totalSelected, setTotalSelected] = useState(false)\n  const [per36Selected, setPer36Selected] = useState(false)\n  const [numberOfSelectedPlayers,setNumberOfSelectedPlayers] = useState(0)\n\n  useEffect(() => {\n\n    ReactGa.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE)\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  return (\n    <div>\n\n      <Row>\n        <Col sm={4} style={{ textAlign: 'center' }}>\n        </Col>\n        {playersForSelectedSeason.length === 0\n          ? < Col sm={4}>\n            <SelectSeason\n              selectedSeason={selectedSeason}\n              setSelectedSeason={setSelectedSeason}\n              setFetchingData={setFetchingData}\n              setPlayersForSelectedSeason={setPlayersForSelectedSeason}\n              players={players}\n            />\n          </Col>\n          : <Col sm={4}>\n            <Reset\n              setPlayersForSelectedSeason={setPlayersForSelectedSeason}\n              setSelectedSeason={setSelectedSeason}\n              setStatsForSelectedPlayers={setStatsForSelectedPlayers} />\n            <div style={{ color: 'white' }}>season {selectedSeason}</div>\n          </Col>}\n        <Col sm={4}>\n          {playersForSelectedSeason.length > 0\n            ? <SelectPerTotal\n              setPerGameSelected={setPerGameSelected}\n              setTotalSelected={setTotalSelected}\n              setPer36Selected={setPer36Selected}\n            />\n            : <></>}\n        </Col>\n      </Row>\n      {\n        playersForSelectedSeason.length === 0 && !fetchingData\n          ? <>\n            <br></br>\n            <br></br>\n            <Row style={{ textAlign: 'center' }}>\n              <Col sm={4}></Col>\n              <Col sm={4}>\n                <Logo />\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n            <br></br>\n            <br></br>\n            <Row style={{ textAlign: 'center' }}>\n              <Col sm={4} xs={1}></Col>\n              <Col sm={4} xs={10}>\n                <Title />\n              </Col>\n              <Col sm={4} xs={1}></Col>\n            </Row>\n\n            <Row style={{ textAlign: 'center' }}>\n              <Col sm={4} xs={1}></Col>\n              <Col sm={4} xs={10}>\n                <DescriptionPlayerComparison />\n              </Col>\n              <Col sm={4} xs={1}></Col>\n            </Row>\n          </>\n          : <></>\n      }\n      {\n        playersForSelectedSeason.length > 0 && numberOfSelectedPlayers < 20\n          ?\n          <Row>\n            <Col sm={4} style={{ textAlign: 'center' }}>\n            </Col>\n            <Col sm={4}>\n              <SelectPlayer\n                players={playersForSelectedSeason}\n                setSelectedPlayer={setSelectedPlayer}\n                /* setPlayerStats={setPlayerStats} */\n                fetchingData={fetchingData}\n                setFetchingData={setFetchingData}\n                playersForSelectedSeason={playersForSelectedSeason}\n                selectedSeason={selectedSeason}\n                setStatsForSelectedPlayers={setStatsForSelectedPlayers}\n                statsForSelectedPlayers={statsForSelectedPlayers}\n                setNumberOfSelectedPlayers={setNumberOfSelectedPlayers}\n                numberOfSelectedPlayers={numberOfSelectedPlayers}\n              />\n            </Col>\n            <Col sm={4}>\n              <SelectRegularPost\n                regularSeasonSelected={regularSeasonSelected}\n                postSeasonSelected={postSeasonSelected}\n                setRegularSeasonSelected={setRegularSeasonSelected}\n                setPostSeasonSelected={setPostSeasonSelected}\n              />\n            </Col>\n          </Row>\n          : <></>\n      }\n      {fetchingData ? <>\n        <Row style={{ textAlign: 'center' }}>\n          <Col sm={4}></Col>\n          <Col sm={4}>\n            <br></br>\n            <Loader type=\"Grid\" color=\"white\" height=\"25\" width=\"25\" />\n          </Col>\n          <Col sm={4}></Col>\n        </Row>\n      </>\n        : <></>}\n      <PlayerComparisonStats\n        regularSeasonSelected={regularSeasonSelected}\n        postSeasonSelected={postSeasonSelected}\n        perGameSelected={perGameSelected}\n        totalSelected={totalSelected}\n        per36Selected={per36Selected}\n        statsForSelectedPlayers={statsForSelectedPlayers}\n      />\n    </div >\n  )\n}\n\nexport default PlayerComparison\n","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n//import NavigationBar from './components/NavigationBar'\nimport Players from './components/players/Players'\nimport Teams from './components/teams/Teams'\nimport TopTen from './components/topTen/TopTen'\nimport ComparePlayers from './components/ComparePlayers/ComparePlayers'\nimport playerService from './services/players'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n  /*  Redirect,\n   useRouteMatch,\n   Redirect,\n   useHistory */\n} from 'react-router-dom'\n\nfunction App() {\n\n  const [fetchingData, setFetchingData] = useState(false)\n  const [players, setPlayers] = useState([])\n\n  useEffect(() => {\n\n    //Player sorting should be done in the database query?\n    playerService.getPlayers()\n      .then((response) => {\n        setPlayers(response.map(player => ({ ...player, fullName: `${player.firstName} ${player.lastName}` }))\n          .sort((a, b) => (a.lastName > b.lastName) ? 1 : ((b.lastName > a.lastName) ? -1 : 0)))\n      })\n  }, [])\n\n\n  return (\n    <Router>\n      <div style={{\n        backgroundColor: \"#17202A\",\n        height: '1500vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center'/* ,\n        textAlign: 'center' */\n      }}>\n        <div className=\"container\" style={{ paddingTop: '2vh', backgroundColor: \"#17202A\" }} >\n          <Container>\n            {/* <Row>\n              <Col sm={2}></Col>\n              <Col sm={8}>\n                <NavigationBar />\n              </Col>\n              <Col sm={2}></Col>\n            </Row> */}\n            {/* <div style={{ backgroundColor:'white' }}> */}\n            <Row >\n              <Col sm={2}></Col>\n              <Col sm={1} xs={3}>\n                <Link to='/players'>players</Link>\n              </Col>\n              <Col sm={1} xs={3}>\n                <Link to='/teams'>teams</Link>\n              </Col>\n              <Col sm={1} xs={3}>\n                <Link to='/top20'>top20</Link>\n              </Col>\n              <Col sm={3} xs={3}>\n                <Link to='/compareplayers'>compare players</Link>\n              </Col>\n              <Col sm={4}></Col>\n            </Row>\n            {/* </div> */}\n            <br></br>\n            <Switch>\n              <Route path='/players'>\n                <Players\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                  players={players}\n                  setPlayers={setPlayers}\n                />\n              </Route>\n              <Route path='/teams'>\n                <Teams\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                />\n              </Route>\n              <Route path='/top20'>\n                <TopTen\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                />\n              </Route>\n              <Route path='/compareplayers'>\n                <ComparePlayers\n                  fetchingData={fetchingData}\n                  setFetchingData={setFetchingData}\n                  players={players}\n                />\n              </Route>\n              <Route path='/'>\n                <Redirect to='/players' />\n              </Route>\n            </Switch>\n            <br></br>\n\n          </Container>\n        </div>\n      </div >\n    </Router >\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}